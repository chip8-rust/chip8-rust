var searchIndex = {};
searchIndex['chip8_ui'] = {"items":[],"paths":[]};
searchIndex['opengl_graphics'] = {"items":[[0,"","opengl_graphics","An OpenGL back-end for Rust-Graphics"],[11,"get_major_minor","shader_version::opengl","Gets the minor version of OpenGL.",0],[11,"to_GLSL","","Gets GLSL version associated with OpenGL.",0],[11,"partial_cmp","","",0],[11,"lt","","",0],[11,"le","","",0],[11,"gt","","",0],[11,"ge","","",0],[11,"lt","","",0],[11,"le","","",0],[11,"gt","","",0],[11,"ge","","",0],[11,"eq","","",0],[11,"ne","","",0],[11,"ne","","",0],[11,"to_OpenGL","shader_version::glsl","Gets OpenGL version associated with GLSL.",1],[4,"OpenGL","opengl_graphics",""],[13,"_2_0","","",0],[13,"_2_1","","",0],[13,"_3_0","","",0],[13,"_3_1","","",0],[13,"_3_2","","",0],[13,"_3_3","","",0],[13,"_4_0","","",0],[13,"_4_1","","",0],[13,"_4_2","","",0],[13,"_4_3","","",0],[13,"_4_4","","",0],[13,"_4_5","","",0],[3,"Gl","","Contains OpenGL data."],[3,"Texture","","Wraps OpenGL texture data.\nThe texture gets deleted when running out of scope."],[0,"shader_utils","","Helper functions for dealing with shaders."],[3,"DynamicAttribute","opengl_graphics::shader_utils","Describes a shader attribute."],[5,"compile_shader","","Compiles a shader."],[5,"attribute_location","","Creates a vertex buffer for an attribute from a program."],[11,"drop","","",2],[11,"xyz","","Create XYZ vertex attribute.",2],[11,"xy","","Create XY vertex attribute.",2],[11,"rgb","","Create RGB color attribute.",2],[11,"rgba","","Create RGBA color attribute.",2],[11,"uv","","Create texture coordinate attribute.",2],[11,"set","","Sets attribute data.",2],[0,"glyph_cache","opengl_graphics","Glyph caching"],[3,"GlyphCache","opengl_graphics::glyph_cache","A struct used for caching rendered font."],[12,"face","","The font face.",3],[6,"FontSize","","The type alias for the font size."],[6,"Character","","The type alias for font characters."],[11,"new","","Constructor for a GlyphCache.",3],[11,"from_bytes","","Creates a GlyphCache for a font stored in memory.",3],[11,"preload_chars","","Load all characters in the `chars` iterator for `size`",3],[11,"preload_printable_ascii","","Load all the printable ASCII characters for `size`. Includes space.",3],[11,"opt_character","","Return `ch` for `size` if it's already cached. Don't load.\nSee the `preload_*` functions.",3],[6,"Texture","",""],[11,"character","","",3],[0,"error","opengl_graphics","Errors"],[4,"Error","opengl_graphics::error","An enum to represent various possible run-time errors that may occur."],[13,"FreetypeError","","An error happened with the FreeType library.",4],[11,"eq","","",4],[11,"ne","","",4],[11,"fmt","","",4],[11,"fmt","","",4],[11,"new","opengl_graphics","Creates a new OpenGL back-end.",5],[11,"viewport","","Sets viewport with normalized coordinates and center as origin.",5],[11,"use_program","","Sets the current program only if the program is not in use.",5],[11,"clear_program","","Unset the current program.",5],[11,"draw","","Draws graphics.",5],[11,"has_texture_alpha","","Assume all textures has alpha channel for now.",5],[11,"enable_alpha_blend","","Enabled alpha blending.",5],[11,"disable_alpha_blend","","Disables alpha blending.",5],[11,"clear","","",5],[11,"tri_list","","",5],[11,"tri_list_uv","","",5],[11,"new","","Creates a new texture.",6],[11,"get_id","","Gets the OpenGL id of the texture.",6],[11,"from_memory_alpha","","Loads image from memory, the format is 8-bit greyscale.",6],[11,"from_path","","Loads image by relative file name to the asset root.",6],[11,"from_image","","Creates a texture from image.",6],[11,"update","","Updates image with a new one.",6],[11,"drop","","",6],[11,"get_size","","",6]],"paths":[[4,"OpenGL"],[4,"GLSL"],[3,"DynamicAttribute"],[3,"GlyphCache"],[4,"Error"],[3,"Gl"],[3,"Texture"]]};

searchIndex['sdl2_window'] = {"items":[[0,"","sdl2_window","A SDL2 window back-end for the Piston game engine."],[3,"Sdl2Window","","A widow implemented by SDL2 back-end."],[12,"window","","SDL window handle",0],[12,"context","","Allow dead code because this keeps track of the OpenGL context.\nWill be released on drop.",0],[5,"sdl2_map_key","","Maps a SDL2 key to piston-input key."],[5,"sdl2_map_mouse","","Maps a SDL2 mouse button to piston-input button."],[11,"new","","Creates a new game window for SDL2.",0],[11,"drop","","",0]],"paths":[[3,"Sdl2Window"]]};

searchIndex['gl'] = {"items":[[0,"","gl","# Usage"],[3,"FnPtr","",""],[5,"ActiveShaderProgram","",""],[5,"ActiveTexture","","Fallbacks: ActiveTextureARB"],[5,"AttachShader","","Fallbacks: AttachObjectARB"],[5,"BeginConditionalRender","","Fallbacks: BeginConditionalRenderNV"],[5,"BeginQuery","","Fallbacks: BeginQueryARB"],[5,"BeginQueryIndexed","",""],[5,"BeginTransformFeedback","","Fallbacks: BeginTransformFeedbackEXT, BeginTransformFeedbackNV"],[5,"BindAttribLocation","","Fallbacks: BindAttribLocationARB"],[5,"BindBuffer","","Fallbacks: BindBufferARB"],[5,"BindBufferBase","","Fallbacks: BindBufferBaseEXT, BindBufferBaseNV"],[5,"BindBufferRange","","Fallbacks: BindBufferRangeEXT, BindBufferRangeNV"],[5,"BindBuffersBase","",""],[5,"BindBuffersRange","",""],[5,"BindFragDataLocation","","Fallbacks: BindFragDataLocationEXT"],[5,"BindFragDataLocationIndexed","",""],[5,"BindFramebuffer","",""],[5,"BindImageTexture","",""],[5,"BindImageTextures","",""],[5,"BindProgramPipeline","",""],[5,"BindRenderbuffer","",""],[5,"BindSampler","",""],[5,"BindSamplers","",""],[5,"BindTexture","","Fallbacks: BindTextureEXT"],[5,"BindTextureUnit","",""],[5,"BindTextures","",""],[5,"BindTransformFeedback","",""],[5,"BindVertexArray","","Fallbacks: BindVertexArrayOES"],[5,"BindVertexBuffer","",""],[5,"BindVertexBuffers","",""],[5,"BlendColor","","Fallbacks: BlendColorEXT"],[5,"BlendEquation","","Fallbacks: BlendEquationEXT"],[5,"BlendEquationSeparate","","Fallbacks: BlendEquationSeparateEXT"],[5,"BlendEquationSeparatei","","Fallbacks: BlendEquationSeparateIndexedAMD, BlendEquationSeparateiARB, BlendEquationSeparateiEXT"],[5,"BlendEquationi","","Fallbacks: BlendEquationIndexedAMD, BlendEquationiARB, BlendEquationiEXT"],[5,"BlendFunc","",""],[5,"BlendFuncSeparate","","Fallbacks: BlendFuncSeparateEXT, BlendFuncSeparateINGR"],[5,"BlendFuncSeparatei","","Fallbacks: BlendFuncSeparateIndexedAMD, BlendFuncSeparateiARB, BlendFuncSeparateiEXT"],[5,"BlendFunci","","Fallbacks: BlendFuncIndexedAMD, BlendFunciARB, BlendFunciEXT"],[5,"BlitFramebuffer","","Fallbacks: BlitFramebufferEXT, BlitFramebufferNV"],[5,"BlitNamedFramebuffer","",""],[5,"BufferData","","Fallbacks: BufferDataARB"],[5,"BufferStorage","",""],[5,"BufferSubData","","Fallbacks: BufferSubDataARB"],[5,"CheckFramebufferStatus","","Fallbacks: CheckFramebufferStatusEXT"],[5,"CheckNamedFramebufferStatus","",""],[5,"ClampColor","","Fallbacks: ClampColorARB"],[5,"Clear","",""],[5,"ClearBufferData","",""],[5,"ClearBufferSubData","",""],[5,"ClearBufferfi","",""],[5,"ClearBufferfv","",""],[5,"ClearBufferiv","",""],[5,"ClearBufferuiv","",""],[5,"ClearColor","",""],[5,"ClearDepth","",""],[5,"ClearDepthf","","Fallbacks: ClearDepthfOES"],[5,"ClearNamedBufferData","",""],[5,"ClearNamedBufferSubData","",""],[5,"ClearNamedFramebufferfi","",""],[5,"ClearNamedFramebufferfv","",""],[5,"ClearNamedFramebufferiv","",""],[5,"ClearNamedFramebufferuiv","",""],[5,"ClearStencil","",""],[5,"ClearTexImage","",""],[5,"ClearTexSubImage","",""],[5,"ClientWaitSync","","Fallbacks: ClientWaitSyncAPPLE"],[5,"ClipControl","",""],[5,"ColorMask","",""],[5,"ColorMaski","","Fallbacks: ColorMaskIndexedEXT, ColorMaskiEXT"],[5,"ColorP3ui","",""],[5,"ColorP3uiv","",""],[5,"ColorP4ui","",""],[5,"ColorP4uiv","",""],[5,"CompileShader","","Fallbacks: CompileShaderARB"],[5,"CompressedTexImage1D","","Fallbacks: CompressedTexImage1DARB"],[5,"CompressedTexImage2D","","Fallbacks: CompressedTexImage2DARB"],[5,"CompressedTexImage3D","","Fallbacks: CompressedTexImage3DARB, CompressedTexImage3DOES"],[5,"CompressedTexSubImage1D","","Fallbacks: CompressedTexSubImage1DARB"],[5,"CompressedTexSubImage2D","","Fallbacks: CompressedTexSubImage2DARB"],[5,"CompressedTexSubImage3D","","Fallbacks: CompressedTexSubImage3DARB, CompressedTexSubImage3DOES"],[5,"CompressedTextureSubImage1D","",""],[5,"CompressedTextureSubImage2D","",""],[5,"CompressedTextureSubImage3D","",""],[5,"CopyBufferSubData","","Fallbacks: CopyBufferSubDataNV"],[5,"CopyImageSubData","","Fallbacks: CopyImageSubDataEXT"],[5,"CopyNamedBufferSubData","",""],[5,"CopyTexImage1D","","Fallbacks: CopyTexImage1DEXT"],[5,"CopyTexImage2D","","Fallbacks: CopyTexImage2DEXT"],[5,"CopyTexSubImage1D","","Fallbacks: CopyTexSubImage1DEXT"],[5,"CopyTexSubImage2D","","Fallbacks: CopyTexSubImage2DEXT"],[5,"CopyTexSubImage3D","","Fallbacks: CopyTexSubImage3DEXT, CopyTexSubImage3DOES"],[5,"CopyTextureSubImage1D","",""],[5,"CopyTextureSubImage2D","",""],[5,"CopyTextureSubImage3D","",""],[5,"CreateBuffers","",""],[5,"CreateFramebuffers","",""],[5,"CreateProgram","","Fallbacks: CreateProgramObjectARB"],[5,"CreateProgramPipelines","",""],[5,"CreateQueries","",""],[5,"CreateRenderbuffers","",""],[5,"CreateSamplers","",""],[5,"CreateShader","","Fallbacks: CreateShaderObjectARB"],[5,"CreateShaderProgramv","",""],[5,"CreateTextures","",""],[5,"CreateTransformFeedbacks","",""],[5,"CreateVertexArrays","",""],[5,"CullFace","",""],[5,"DebugMessageCallback","","Fallbacks: DebugMessageCallbackARB, DebugMessageCallbackKHR"],[5,"DebugMessageControl","","Fallbacks: DebugMessageControlARB, DebugMessageControlKHR"],[5,"DebugMessageInsert","","Fallbacks: DebugMessageInsertARB, DebugMessageInsertKHR"],[5,"DeleteBuffers","","Fallbacks: DeleteBuffersARB"],[5,"DeleteFramebuffers","","Fallbacks: DeleteFramebuffersEXT"],[5,"DeleteProgram","",""],[5,"DeleteProgramPipelines","",""],[5,"DeleteQueries","","Fallbacks: DeleteQueriesARB"],[5,"DeleteRenderbuffers","","Fallbacks: DeleteRenderbuffersEXT"],[5,"DeleteSamplers","",""],[5,"DeleteShader","",""],[5,"DeleteSync","","Fallbacks: DeleteSyncAPPLE"],[5,"DeleteTextures","",""],[5,"DeleteTransformFeedbacks","","Fallbacks: DeleteTransformFeedbacksNV"],[5,"DeleteVertexArrays","","Fallbacks: DeleteVertexArraysAPPLE, DeleteVertexArraysOES"],[5,"DepthFunc","",""],[5,"DepthMask","",""],[5,"DepthRange","",""],[5,"DepthRangeArrayv","",""],[5,"DepthRangeIndexed","",""],[5,"DepthRangef","","Fallbacks: DepthRangefOES"],[5,"DetachShader","","Fallbacks: DetachObjectARB"],[5,"Disable","",""],[5,"DisableVertexArrayAttrib","",""],[5,"DisableVertexAttribArray","","Fallbacks: DisableVertexAttribArrayARB"],[5,"Disablei","","Fallbacks: DisableIndexedEXT, DisableiEXT, DisableiNV"],[5,"DispatchCompute","",""],[5,"DispatchComputeIndirect","",""],[5,"DrawArrays","","Fallbacks: DrawArraysEXT"],[5,"DrawArraysIndirect","",""],[5,"DrawArraysInstanced","","Fallbacks: DrawArraysInstancedANGLE, DrawArraysInstancedARB, DrawArraysInstancedEXT, DrawArraysInstancedNV"],[5,"DrawArraysInstancedBaseInstance","","Fallbacks: DrawArraysInstancedBaseInstanceEXT"],[5,"DrawBuffer","",""],[5,"DrawBuffers","","Fallbacks: DrawBuffersARB, DrawBuffersATI, DrawBuffersEXT"],[5,"DrawElements","",""],[5,"DrawElementsBaseVertex","","Fallbacks: DrawElementsBaseVertexEXT"],[5,"DrawElementsIndirect","",""],[5,"DrawElementsInstanced","","Fallbacks: DrawElementsInstancedANGLE, DrawElementsInstancedARB, DrawElementsInstancedEXT, DrawElementsInstancedNV"],[5,"DrawElementsInstancedBaseInstance","","Fallbacks: DrawElementsInstancedBaseInstanceEXT"],[5,"DrawElementsInstancedBaseVertex","","Fallbacks: DrawElementsInstancedBaseVertexEXT"],[5,"DrawElementsInstancedBaseVertexBaseInstance","","Fallbacks: DrawElementsInstancedBaseVertexBaseInstanceEXT"],[5,"DrawRangeElements","","Fallbacks: DrawRangeElementsEXT"],[5,"DrawRangeElementsBaseVertex","","Fallbacks: DrawRangeElementsBaseVertexEXT"],[5,"DrawTransformFeedback","","Fallbacks: DrawTransformFeedbackNV"],[5,"DrawTransformFeedbackInstanced","",""],[5,"DrawTransformFeedbackStream","",""],[5,"DrawTransformFeedbackStreamInstanced","",""],[5,"Enable","",""],[5,"EnableVertexArrayAttrib","",""],[5,"EnableVertexAttribArray","","Fallbacks: EnableVertexAttribArrayARB"],[5,"Enablei","","Fallbacks: EnableIndexedEXT, EnableiNV, EnableiEXT"],[5,"EndConditionalRender","","Fallbacks: EndConditionalRenderNV, EndConditionalRenderNVX"],[5,"EndQuery","","Fallbacks: EndQueryARB"],[5,"EndQueryIndexed","",""],[5,"EndTransformFeedback","","Fallbacks: EndTransformFeedbackEXT, EndTransformFeedbackNV"],[5,"FenceSync","","Fallbacks: FenceSyncAPPLE"],[5,"Finish","",""],[5,"Flush","",""],[5,"FlushMappedBufferRange","","Fallbacks: FlushMappedBufferRangeAPPLE, FlushMappedBufferRangeEXT"],[5,"FlushMappedNamedBufferRange","",""],[5,"FramebufferParameteri","",""],[5,"FramebufferRenderbuffer","","Fallbacks: FramebufferRenderbufferEXT"],[5,"FramebufferTexture","","Fallbacks: FramebufferTextureARB"],[5,"FramebufferTexture1D","","Fallbacks: FramebufferTexture1DEXT"],[5,"FramebufferTexture2D","","Fallbacks: FramebufferTexture2DEXT"],[5,"FramebufferTexture3D","","Fallbacks: FramebufferTexture3DEXT, FramebufferTexture3DOES"],[5,"FramebufferTextureLayer","","Fallbacks: FramebufferTextureLayerARB, FramebufferTextureLayerEXT"],[5,"FrontFace","",""],[5,"GenBuffers","","Fallbacks: GenBuffersARB"],[5,"GenFramebuffers","","Fallbacks: GenFramebuffersEXT"],[5,"GenProgramPipelines","",""],[5,"GenQueries","","Fallbacks: GenQueriesARB"],[5,"GenRenderbuffers","","Fallbacks: GenRenderbuffersEXT"],[5,"GenSamplers","",""],[5,"GenTextures","",""],[5,"GenTransformFeedbacks","","Fallbacks: GenTransformFeedbacksNV"],[5,"GenVertexArrays","","Fallbacks: GenVertexArraysAPPLE, GenVertexArraysOES"],[5,"GenerateMipmap","","Fallbacks: GenerateMipmapEXT"],[5,"GenerateTextureMipmap","",""],[5,"GetActiveAtomicCounterBufferiv","",""],[5,"GetActiveAttrib","","Fallbacks: GetActiveAttribARB"],[5,"GetActiveSubroutineName","",""],[5,"GetActiveSubroutineUniformName","",""],[5,"GetActiveSubroutineUniformiv","",""],[5,"GetActiveUniform","","Fallbacks: GetActiveUniformARB"],[5,"GetActiveUniformBlockName","",""],[5,"GetActiveUniformBlockiv","",""],[5,"GetActiveUniformName","",""],[5,"GetActiveUniformsiv","",""],[5,"GetAttachedShaders","",""],[5,"GetAttribLocation","","Fallbacks: GetAttribLocationARB"],[5,"GetBooleani_v","","Fallbacks: GetBooleanIndexedvEXT"],[5,"GetBooleanv","",""],[5,"GetBufferParameteri64v","",""],[5,"GetBufferParameteriv","","Fallbacks: GetBufferParameterivARB"],[5,"GetBufferPointerv","","Fallbacks: GetBufferPointervARB, GetBufferPointervOES"],[5,"GetBufferSubData","","Fallbacks: GetBufferSubDataARB"],[5,"GetCompressedTexImage","","Fallbacks: GetCompressedTexImageARB"],[5,"GetCompressedTextureImage","",""],[5,"GetCompressedTextureSubImage","",""],[5,"GetDebugMessageLog","","Fallbacks: GetDebugMessageLogARB, GetDebugMessageLogKHR"],[5,"GetDoublei_v","","Fallbacks: GetDoubleIndexedvEXT, GetDoublei_vEXT"],[5,"GetDoublev","",""],[5,"GetError","",""],[5,"GetFloati_v","","Fallbacks: GetFloatIndexedvEXT, GetFloati_vNV, GetFloati_vEXT"],[5,"GetFloatv","",""],[5,"GetFragDataIndex","",""],[5,"GetFragDataLocation","","Fallbacks: GetFragDataLocationEXT"],[5,"GetFramebufferAttachmentParameteriv","","Fallbacks: GetFramebufferAttachmentParameterivEXT"],[5,"GetFramebufferParameteriv","",""],[5,"GetGraphicsResetStatus","","Fallbacks: GetGraphicsResetStatusKHR"],[5,"GetInteger64i_v","",""],[5,"GetInteger64v","","Fallbacks: GetInteger64vAPPLE"],[5,"GetIntegeri_v","","Fallbacks: GetIntegerIndexedvEXT"],[5,"GetIntegerv","",""],[5,"GetInternalformati64v","",""],[5,"GetInternalformativ","",""],[5,"GetMultisamplefv","","Fallbacks: GetMultisamplefvNV"],[5,"GetNamedBufferParameteri64v","",""],[5,"GetNamedBufferParameteriv","",""],[5,"GetNamedBufferPointerv","",""],[5,"GetNamedBufferSubData","",""],[5,"GetNamedFramebufferAttachmentParameteriv","",""],[5,"GetNamedFramebufferParameteriv","",""],[5,"GetNamedRenderbufferParameteriv","",""],[5,"GetObjectLabel","","Fallbacks: GetObjectLabelKHR"],[5,"GetObjectPtrLabel","","Fallbacks: GetObjectPtrLabelKHR"],[5,"GetProgramBinary","","Fallbacks: GetProgramBinaryOES"],[5,"GetProgramInfoLog","",""],[5,"GetProgramInterfaceiv","",""],[5,"GetProgramPipelineInfoLog","",""],[5,"GetProgramPipelineiv","",""],[5,"GetProgramResourceIndex","",""],[5,"GetProgramResourceLocation","",""],[5,"GetProgramResourceLocationIndex","",""],[5,"GetProgramResourceName","",""],[5,"GetProgramResourceiv","",""],[5,"GetProgramStageiv","",""],[5,"GetProgramiv","",""],[5,"GetQueryBufferObjecti64v","",""],[5,"GetQueryBufferObjectiv","",""],[5,"GetQueryBufferObjectui64v","",""],[5,"GetQueryBufferObjectuiv","",""],[5,"GetQueryIndexediv","",""],[5,"GetQueryObjecti64v","","Fallbacks: GetQueryObjecti64vEXT"],[5,"GetQueryObjectiv","","Fallbacks: GetQueryObjectivARB, GetQueryObjectivEXT"],[5,"GetQueryObjectui64v","","Fallbacks: GetQueryObjectui64vEXT"],[5,"GetQueryObjectuiv","","Fallbacks: GetQueryObjectuivARB"],[5,"GetQueryiv","","Fallbacks: GetQueryivARB"],[5,"GetRenderbufferParameteriv","","Fallbacks: GetRenderbufferParameterivEXT"],[5,"GetSamplerParameterIiv","","Fallbacks: GetSamplerParameterIivEXT"],[5,"GetSamplerParameterIuiv","","Fallbacks: GetSamplerParameterIuivEXT"],[5,"GetSamplerParameterfv","",""],[5,"GetSamplerParameteriv","",""],[5,"GetShaderInfoLog","",""],[5,"GetShaderPrecisionFormat","",""],[5,"GetShaderSource","","Fallbacks: GetShaderSourceARB"],[5,"GetShaderiv","",""],[5,"GetString","",""],[5,"GetStringi","",""],[5,"GetSubroutineIndex","",""],[5,"GetSubroutineUniformLocation","",""],[5,"GetSynciv","","Fallbacks: GetSyncivAPPLE"],[5,"GetTexImage","",""],[5,"GetTexLevelParameterfv","",""],[5,"GetTexLevelParameteriv","",""],[5,"GetTexParameterIiv","","Fallbacks: GetTexParameterIivEXT"],[5,"GetTexParameterIuiv","","Fallbacks: GetTexParameterIuivEXT"],[5,"GetTexParameterfv","",""],[5,"GetTexParameteriv","",""],[5,"GetTextureImage","",""],[5,"GetTextureLevelParameterfv","",""],[5,"GetTextureLevelParameteriv","",""],[5,"GetTextureParameterIiv","",""],[5,"GetTextureParameterIuiv","",""],[5,"GetTextureParameterfv","",""],[5,"GetTextureParameteriv","",""],[5,"GetTextureSubImage","",""],[5,"GetTransformFeedbackVarying","","Fallbacks: GetTransformFeedbackVaryingEXT"],[5,"GetTransformFeedbacki64_v","",""],[5,"GetTransformFeedbacki_v","",""],[5,"GetTransformFeedbackiv","",""],[5,"GetUniformBlockIndex","",""],[5,"GetUniformIndices","",""],[5,"GetUniformLocation","","Fallbacks: GetUniformLocationARB"],[5,"GetUniformSubroutineuiv","",""],[5,"GetUniformdv","",""],[5,"GetUniformfv","","Fallbacks: GetUniformfvARB"],[5,"GetUniformiv","","Fallbacks: GetUniformivARB"],[5,"GetUniformuiv","","Fallbacks: GetUniformuivEXT"],[5,"GetVertexArrayIndexed64iv","",""],[5,"GetVertexArrayIndexediv","",""],[5,"GetVertexArrayiv","",""],[5,"GetVertexAttribIiv","","Fallbacks: GetVertexAttribIivEXT"],[5,"GetVertexAttribIuiv","","Fallbacks: GetVertexAttribIuivEXT"],[5,"GetVertexAttribLdv","","Fallbacks: GetVertexAttribLdvEXT"],[5,"GetVertexAttribPointerv","","Fallbacks: GetVertexAttribPointervARB, GetVertexAttribPointervNV"],[5,"GetVertexAttribdv","","Fallbacks: GetVertexAttribdvARB, GetVertexAttribdvNV"],[5,"GetVertexAttribfv","","Fallbacks: GetVertexAttribfvARB, GetVertexAttribfvNV"],[5,"GetVertexAttribiv","","Fallbacks: GetVertexAttribivARB, GetVertexAttribivNV"],[5,"GetnColorTable","",""],[5,"GetnCompressedTexImage","",""],[5,"GetnConvolutionFilter","",""],[5,"GetnHistogram","",""],[5,"GetnMapdv","",""],[5,"GetnMapfv","",""],[5,"GetnMapiv","",""],[5,"GetnMinmax","",""],[5,"GetnPixelMapfv","",""],[5,"GetnPixelMapuiv","",""],[5,"GetnPixelMapusv","",""],[5,"GetnPolygonStipple","",""],[5,"GetnSeparableFilter","",""],[5,"GetnTexImage","",""],[5,"GetnUniformdv","",""],[5,"GetnUniformfv","","Fallbacks: GetnUniformfvKHR"],[5,"GetnUniformiv","","Fallbacks: GetnUniformivKHR"],[5,"GetnUniformuiv","","Fallbacks: GetnUniformuivKHR"],[5,"Hint","",""],[5,"InvalidateBufferData","",""],[5,"InvalidateBufferSubData","",""],[5,"InvalidateFramebuffer","",""],[5,"InvalidateNamedFramebufferData","",""],[5,"InvalidateNamedFramebufferSubData","",""],[5,"InvalidateSubFramebuffer","",""],[5,"InvalidateTexImage","",""],[5,"InvalidateTexSubImage","",""],[5,"IsBuffer","","Fallbacks: IsBufferARB"],[5,"IsEnabled","",""],[5,"IsEnabledi","","Fallbacks: IsEnabledIndexedEXT, IsEnablediEXT, IsEnablediNV"],[5,"IsFramebuffer","","Fallbacks: IsFramebufferEXT"],[5,"IsProgram","",""],[5,"IsProgramPipeline","",""],[5,"IsQuery","","Fallbacks: IsQueryARB"],[5,"IsRenderbuffer","","Fallbacks: IsRenderbufferEXT"],[5,"IsSampler","",""],[5,"IsShader","",""],[5,"IsSync","","Fallbacks: IsSyncAPPLE"],[5,"IsTexture","",""],[5,"IsTransformFeedback","","Fallbacks: IsTransformFeedbackNV"],[5,"IsVertexArray","","Fallbacks: IsVertexArrayAPPLE, IsVertexArrayOES"],[5,"LineWidth","",""],[5,"LinkProgram","","Fallbacks: LinkProgramARB"],[5,"LogicOp","",""],[5,"MapBuffer","","Fallbacks: MapBufferARB, MapBufferOES"],[5,"MapBufferRange","","Fallbacks: MapBufferRangeEXT"],[5,"MapNamedBuffer","",""],[5,"MapNamedBufferRange","",""],[5,"MemoryBarrier","","Fallbacks: MemoryBarrierEXT"],[5,"MemoryBarrierByRegion","",""],[5,"MinSampleShading","","Fallbacks: MinSampleShadingARB, MinSampleShadingOES"],[5,"MultiDrawArrays","","Fallbacks: MultiDrawArraysEXT"],[5,"MultiDrawArraysIndirect","","Fallbacks: MultiDrawArraysIndirectAMD, MultiDrawArraysIndirectEXT"],[5,"MultiDrawElements","","Fallbacks: MultiDrawElementsEXT"],[5,"MultiDrawElementsBaseVertex","","Fallbacks: MultiDrawElementsBaseVertexEXT"],[5,"MultiDrawElementsIndirect","","Fallbacks: MultiDrawElementsIndirectEXT, MultiDrawElementsIndirectAMD"],[5,"MultiTexCoordP1ui","",""],[5,"MultiTexCoordP1uiv","",""],[5,"MultiTexCoordP2ui","",""],[5,"MultiTexCoordP2uiv","",""],[5,"MultiTexCoordP3ui","",""],[5,"MultiTexCoordP3uiv","",""],[5,"MultiTexCoordP4ui","",""],[5,"MultiTexCoordP4uiv","",""],[5,"NamedBufferData","",""],[5,"NamedBufferStorage","",""],[5,"NamedBufferSubData","",""],[5,"NamedFramebufferDrawBuffer","",""],[5,"NamedFramebufferDrawBuffers","",""],[5,"NamedFramebufferParameteri","",""],[5,"NamedFramebufferReadBuffer","",""],[5,"NamedFramebufferRenderbuffer","",""],[5,"NamedFramebufferTexture","",""],[5,"NamedFramebufferTextureLayer","",""],[5,"NamedRenderbufferStorage","",""],[5,"NamedRenderbufferStorageMultisample","",""],[5,"NormalP3ui","",""],[5,"NormalP3uiv","",""],[5,"ObjectLabel","","Fallbacks: ObjectLabelKHR"],[5,"ObjectPtrLabel","","Fallbacks: ObjectPtrLabelKHR"],[5,"PatchParameterfv","",""],[5,"PatchParameteri","","Fallbacks: PatchParameteriEXT"],[5,"PauseTransformFeedback","","Fallbacks: PauseTransformFeedbackNV"],[5,"PixelStoref","",""],[5,"PixelStorei","",""],[5,"PointParameterf","","Fallbacks: PointParameterfARB, PointParameterfEXT, PointParameterfSGIS"],[5,"PointParameterfv","","Fallbacks: PointParameterfvARB, PointParameterfvEXT, PointParameterfvSGIS"],[5,"PointParameteri","","Fallbacks: PointParameteriNV"],[5,"PointParameteriv","","Fallbacks: PointParameterivNV"],[5,"PointSize","",""],[5,"PolygonMode","",""],[5,"PolygonOffset","",""],[5,"PopDebugGroup","","Fallbacks: PopDebugGroupKHR"],[5,"PrimitiveRestartIndex","",""],[5,"ProgramBinary","","Fallbacks: ProgramBinaryOES"],[5,"ProgramParameteri","","Fallbacks: ProgramParameteriARB, ProgramParameteriEXT"],[5,"ProgramUniform1d","",""],[5,"ProgramUniform1dv","",""],[5,"ProgramUniform1f","","Fallbacks: ProgramUniform1fEXT"],[5,"ProgramUniform1fv","","Fallbacks: ProgramUniform1fvEXT"],[5,"ProgramUniform1i","","Fallbacks: ProgramUniform1iEXT"],[5,"ProgramUniform1iv","","Fallbacks: ProgramUniform1ivEXT"],[5,"ProgramUniform1ui","","Fallbacks: ProgramUniform1uiEXT"],[5,"ProgramUniform1uiv","","Fallbacks: ProgramUniform1uivEXT"],[5,"ProgramUniform2d","",""],[5,"ProgramUniform2dv","",""],[5,"ProgramUniform2f","","Fallbacks: ProgramUniform2fEXT"],[5,"ProgramUniform2fv","","Fallbacks: ProgramUniform2fvEXT"],[5,"ProgramUniform2i","","Fallbacks: ProgramUniform2iEXT"],[5,"ProgramUniform2iv","","Fallbacks: ProgramUniform2ivEXT"],[5,"ProgramUniform2ui","","Fallbacks: ProgramUniform2uiEXT"],[5,"ProgramUniform2uiv","","Fallbacks: ProgramUniform2uivEXT"],[5,"ProgramUniform3d","",""],[5,"ProgramUniform3dv","",""],[5,"ProgramUniform3f","","Fallbacks: ProgramUniform3fEXT"],[5,"ProgramUniform3fv","","Fallbacks: ProgramUniform3fvEXT"],[5,"ProgramUniform3i","","Fallbacks: ProgramUniform3iEXT"],[5,"ProgramUniform3iv","","Fallbacks: ProgramUniform3ivEXT"],[5,"ProgramUniform3ui","","Fallbacks: ProgramUniform3uiEXT"],[5,"ProgramUniform3uiv","","Fallbacks: ProgramUniform3uivEXT"],[5,"ProgramUniform4d","",""],[5,"ProgramUniform4dv","",""],[5,"ProgramUniform4f","","Fallbacks: ProgramUniform4fEXT"],[5,"ProgramUniform4fv","","Fallbacks: ProgramUniform4fvEXT"],[5,"ProgramUniform4i","","Fallbacks: ProgramUniform4iEXT"],[5,"ProgramUniform4iv","","Fallbacks: ProgramUniform4ivEXT"],[5,"ProgramUniform4ui","","Fallbacks: ProgramUniform4uiEXT"],[5,"ProgramUniform4uiv","","Fallbacks: ProgramUniform4uivEXT"],[5,"ProgramUniformMatrix2dv","",""],[5,"ProgramUniformMatrix2fv","","Fallbacks: ProgramUniformMatrix2fvEXT"],[5,"ProgramUniformMatrix2x3dv","",""],[5,"ProgramUniformMatrix2x3fv","","Fallbacks: ProgramUniformMatrix2x3fvEXT"],[5,"ProgramUniformMatrix2x4dv","",""],[5,"ProgramUniformMatrix2x4fv","","Fallbacks: ProgramUniformMatrix2x4fvEXT"],[5,"ProgramUniformMatrix3dv","",""],[5,"ProgramUniformMatrix3fv","","Fallbacks: ProgramUniformMatrix3fvEXT"],[5,"ProgramUniformMatrix3x2dv","",""],[5,"ProgramUniformMatrix3x2fv","","Fallbacks: ProgramUniformMatrix3x2fvEXT"],[5,"ProgramUniformMatrix3x4dv","",""],[5,"ProgramUniformMatrix3x4fv","","Fallbacks: ProgramUniformMatrix3x4fvEXT"],[5,"ProgramUniformMatrix4dv","",""],[5,"ProgramUniformMatrix4fv","","Fallbacks: ProgramUniformMatrix4fvEXT"],[5,"ProgramUniformMatrix4x2dv","",""],[5,"ProgramUniformMatrix4x2fv","","Fallbacks: ProgramUniformMatrix4x2fvEXT"],[5,"ProgramUniformMatrix4x3dv","",""],[5,"ProgramUniformMatrix4x3fv","","Fallbacks: ProgramUniformMatrix4x3fvEXT"],[5,"ProvokingVertex","","Fallbacks: ProvokingVertexEXT"],[5,"PushDebugGroup","","Fallbacks: PushDebugGroupKHR"],[5,"QueryCounter","","Fallbacks: QueryCounterEXT"],[5,"ReadBuffer","",""],[5,"ReadPixels","",""],[5,"ReadnPixels","","Fallbacks: ReadnPixelsARB, ReadnPixelsEXT, ReadnPixelsKHR"],[5,"ReleaseShaderCompiler","",""],[5,"RenderbufferStorage","","Fallbacks: RenderbufferStorageEXT"],[5,"RenderbufferStorageMultisample","","Fallbacks: RenderbufferStorageMultisampleEXT, RenderbufferStorageMultisampleNV"],[5,"ResumeTransformFeedback","","Fallbacks: ResumeTransformFeedbackNV"],[5,"SampleCoverage","","Fallbacks: SampleCoverageARB"],[5,"SampleMaski","",""],[5,"SamplerParameterIiv","","Fallbacks: SamplerParameterIivEXT"],[5,"SamplerParameterIuiv","","Fallbacks: SamplerParameterIuivEXT"],[5,"SamplerParameterf","",""],[5,"SamplerParameterfv","",""],[5,"SamplerParameteri","",""],[5,"SamplerParameteriv","",""],[5,"Scissor","",""],[5,"ScissorArrayv","","Fallbacks: ScissorArrayvNV"],[5,"ScissorIndexed","","Fallbacks: ScissorIndexedNV"],[5,"ScissorIndexedv","","Fallbacks: ScissorIndexedvNV"],[5,"SecondaryColorP3ui","",""],[5,"SecondaryColorP3uiv","",""],[5,"ShaderBinary","",""],[5,"ShaderSource","","Fallbacks: ShaderSourceARB"],[5,"ShaderStorageBlockBinding","",""],[5,"StencilFunc","",""],[5,"StencilFuncSeparate","",""],[5,"StencilMask","",""],[5,"StencilMaskSeparate","",""],[5,"StencilOp","",""],[5,"StencilOpSeparate","","Fallbacks: StencilOpSeparateATI"],[5,"TexBuffer","","Fallbacks: TexBufferARB, TexBufferEXT"],[5,"TexBufferRange","","Fallbacks: TexBufferRangeEXT"],[5,"TexCoordP1ui","",""],[5,"TexCoordP1uiv","",""],[5,"TexCoordP2ui","",""],[5,"TexCoordP2uiv","",""],[5,"TexCoordP3ui","",""],[5,"TexCoordP3uiv","",""],[5,"TexCoordP4ui","",""],[5,"TexCoordP4uiv","",""],[5,"TexImage1D","",""],[5,"TexImage2D","",""],[5,"TexImage2DMultisample","",""],[5,"TexImage3D","","Fallbacks: TexImage3DEXT, TexImage3DOES"],[5,"TexImage3DMultisample","",""],[5,"TexParameterIiv","","Fallbacks: TexParameterIivEXT"],[5,"TexParameterIuiv","","Fallbacks: TexParameterIuivEXT"],[5,"TexParameterf","",""],[5,"TexParameterfv","",""],[5,"TexParameteri","",""],[5,"TexParameteriv","",""],[5,"TexStorage1D","","Fallbacks: TexStorage1DEXT"],[5,"TexStorage2D","","Fallbacks: TexStorage2DEXT"],[5,"TexStorage2DMultisample","",""],[5,"TexStorage3D","","Fallbacks: TexStorage3DEXT"],[5,"TexStorage3DMultisample","","Fallbacks: TexStorage3DMultisampleOES"],[5,"TexSubImage1D","","Fallbacks: TexSubImage1DEXT"],[5,"TexSubImage2D","","Fallbacks: TexSubImage2DEXT"],[5,"TexSubImage3D","","Fallbacks: TexSubImage3DEXT, TexSubImage3DOES"],[5,"TextureBarrier","",""],[5,"TextureBuffer","",""],[5,"TextureBufferRange","",""],[5,"TextureParameterIiv","",""],[5,"TextureParameterIuiv","",""],[5,"TextureParameterf","",""],[5,"TextureParameterfv","",""],[5,"TextureParameteri","",""],[5,"TextureParameteriv","",""],[5,"TextureStorage1D","",""],[5,"TextureStorage2D","",""],[5,"TextureStorage2DMultisample","",""],[5,"TextureStorage3D","",""],[5,"TextureStorage3DMultisample","",""],[5,"TextureSubImage1D","",""],[5,"TextureSubImage2D","",""],[5,"TextureSubImage3D","",""],[5,"TextureView","","Fallbacks: TextureViewEXT"],[5,"TransformFeedbackBufferBase","",""],[5,"TransformFeedbackBufferRange","",""],[5,"TransformFeedbackVaryings","","Fallbacks: TransformFeedbackVaryingsEXT"],[5,"Uniform1d","",""],[5,"Uniform1dv","",""],[5,"Uniform1f","","Fallbacks: Uniform1fARB"],[5,"Uniform1fv","","Fallbacks: Uniform1fvARB"],[5,"Uniform1i","","Fallbacks: Uniform1iARB"],[5,"Uniform1iv","","Fallbacks: Uniform1ivARB"],[5,"Uniform1ui","","Fallbacks: Uniform1uiEXT"],[5,"Uniform1uiv","","Fallbacks: Uniform1uivEXT"],[5,"Uniform2d","",""],[5,"Uniform2dv","",""],[5,"Uniform2f","","Fallbacks: Uniform2fARB"],[5,"Uniform2fv","","Fallbacks: Uniform2fvARB"],[5,"Uniform2i","","Fallbacks: Uniform2iARB"],[5,"Uniform2iv","","Fallbacks: Uniform2ivARB"],[5,"Uniform2ui","","Fallbacks: Uniform2uiEXT"],[5,"Uniform2uiv","","Fallbacks: Uniform2uivEXT"],[5,"Uniform3d","",""],[5,"Uniform3dv","",""],[5,"Uniform3f","","Fallbacks: Uniform3fARB"],[5,"Uniform3fv","","Fallbacks: Uniform3fvARB"],[5,"Uniform3i","","Fallbacks: Uniform3iARB"],[5,"Uniform3iv","","Fallbacks: Uniform3ivARB"],[5,"Uniform3ui","","Fallbacks: Uniform3uiEXT"],[5,"Uniform3uiv","","Fallbacks: Uniform3uivEXT"],[5,"Uniform4d","",""],[5,"Uniform4dv","",""],[5,"Uniform4f","","Fallbacks: Uniform4fARB"],[5,"Uniform4fv","","Fallbacks: Uniform4fvARB"],[5,"Uniform4i","","Fallbacks: Uniform4iARB"],[5,"Uniform4iv","","Fallbacks: Uniform4ivARB"],[5,"Uniform4ui","","Fallbacks: Uniform4uiEXT"],[5,"Uniform4uiv","","Fallbacks: Uniform4uivEXT"],[5,"UniformBlockBinding","",""],[5,"UniformMatrix2dv","",""],[5,"UniformMatrix2fv","","Fallbacks: UniformMatrix2fvARB"],[5,"UniformMatrix2x3dv","",""],[5,"UniformMatrix2x3fv","","Fallbacks: UniformMatrix2x3fvNV"],[5,"UniformMatrix2x4dv","",""],[5,"UniformMatrix2x4fv","","Fallbacks: UniformMatrix2x4fvNV"],[5,"UniformMatrix3dv","",""],[5,"UniformMatrix3fv","","Fallbacks: UniformMatrix3fvARB"],[5,"UniformMatrix3x2dv","",""],[5,"UniformMatrix3x2fv","","Fallbacks: UniformMatrix3x2fvNV"],[5,"UniformMatrix3x4dv","",""],[5,"UniformMatrix3x4fv","","Fallbacks: UniformMatrix3x4fvNV"],[5,"UniformMatrix4dv","",""],[5,"UniformMatrix4fv","","Fallbacks: UniformMatrix4fvARB"],[5,"UniformMatrix4x2dv","",""],[5,"UniformMatrix4x2fv","","Fallbacks: UniformMatrix4x2fvNV"],[5,"UniformMatrix4x3dv","",""],[5,"UniformMatrix4x3fv","","Fallbacks: UniformMatrix4x3fvNV"],[5,"UniformSubroutinesuiv","",""],[5,"UnmapBuffer","","Fallbacks: UnmapBufferARB, UnmapBufferOES"],[5,"UnmapNamedBuffer","",""],[5,"UseProgram","","Fallbacks: UseProgramObjectARB"],[5,"UseProgramStages","",""],[5,"ValidateProgram","","Fallbacks: ValidateProgramARB"],[5,"ValidateProgramPipeline","",""],[5,"VertexArrayAttribBinding","",""],[5,"VertexArrayAttribFormat","",""],[5,"VertexArrayAttribIFormat","",""],[5,"VertexArrayAttribLFormat","",""],[5,"VertexArrayBindingDivisor","",""],[5,"VertexArrayElementBuffer","",""],[5,"VertexArrayVertexBuffer","",""],[5,"VertexArrayVertexBuffers","",""],[5,"VertexAttrib1d","","Fallbacks: VertexAttrib1dARB, VertexAttrib1dNV"],[5,"VertexAttrib1dv","","Fallbacks: VertexAttrib1dvARB, VertexAttrib1dvNV"],[5,"VertexAttrib1f","","Fallbacks: VertexAttrib1fARB, VertexAttrib1fNV"],[5,"VertexAttrib1fv","","Fallbacks: VertexAttrib1fvARB, VertexAttrib1fvNV"],[5,"VertexAttrib1s","","Fallbacks: VertexAttrib1sARB, VertexAttrib1sNV"],[5,"VertexAttrib1sv","","Fallbacks: VertexAttrib1svARB, VertexAttrib1svNV"],[5,"VertexAttrib2d","","Fallbacks: VertexAttrib2dARB, VertexAttrib2dNV"],[5,"VertexAttrib2dv","","Fallbacks: VertexAttrib2dvARB, VertexAttrib2dvNV"],[5,"VertexAttrib2f","","Fallbacks: VertexAttrib2fARB, VertexAttrib2fNV"],[5,"VertexAttrib2fv","","Fallbacks: VertexAttrib2fvARB, VertexAttrib2fvNV"],[5,"VertexAttrib2s","","Fallbacks: VertexAttrib2sARB, VertexAttrib2sNV"],[5,"VertexAttrib2sv","","Fallbacks: VertexAttrib2svARB, VertexAttrib2svNV"],[5,"VertexAttrib3d","","Fallbacks: VertexAttrib3dARB, VertexAttrib3dNV"],[5,"VertexAttrib3dv","","Fallbacks: VertexAttrib3dvARB, VertexAttrib3dvNV"],[5,"VertexAttrib3f","","Fallbacks: VertexAttrib3fARB, VertexAttrib3fNV"],[5,"VertexAttrib3fv","","Fallbacks: VertexAttrib3fvARB, VertexAttrib3fvNV"],[5,"VertexAttrib3s","","Fallbacks: VertexAttrib3sARB, VertexAttrib3sNV"],[5,"VertexAttrib3sv","","Fallbacks: VertexAttrib3svARB, VertexAttrib3svNV"],[5,"VertexAttrib4Nbv","","Fallbacks: VertexAttrib4NbvARB"],[5,"VertexAttrib4Niv","","Fallbacks: VertexAttrib4NivARB"],[5,"VertexAttrib4Nsv","","Fallbacks: VertexAttrib4NsvARB"],[5,"VertexAttrib4Nub","","Fallbacks: VertexAttrib4NubARB, VertexAttrib4ubNV"],[5,"VertexAttrib4Nubv","","Fallbacks: VertexAttrib4NubvARB, VertexAttrib4ubvNV"],[5,"VertexAttrib4Nuiv","","Fallbacks: VertexAttrib4NuivARB"],[5,"VertexAttrib4Nusv","","Fallbacks: VertexAttrib4NusvARB"],[5,"VertexAttrib4bv","","Fallbacks: VertexAttrib4bvARB"],[5,"VertexAttrib4d","","Fallbacks: VertexAttrib4dARB, VertexAttrib4dNV"],[5,"VertexAttrib4dv","","Fallbacks: VertexAttrib4dvARB, VertexAttrib4dvNV"],[5,"VertexAttrib4f","","Fallbacks: VertexAttrib4fARB, VertexAttrib4fNV"],[5,"VertexAttrib4fv","","Fallbacks: VertexAttrib4fvARB, VertexAttrib4fvNV"],[5,"VertexAttrib4iv","","Fallbacks: VertexAttrib4ivARB"],[5,"VertexAttrib4s","","Fallbacks: VertexAttrib4sARB, VertexAttrib4sNV"],[5,"VertexAttrib4sv","","Fallbacks: VertexAttrib4svARB, VertexAttrib4svNV"],[5,"VertexAttrib4ubv","","Fallbacks: VertexAttrib4ubvARB"],[5,"VertexAttrib4uiv","","Fallbacks: VertexAttrib4uivARB"],[5,"VertexAttrib4usv","","Fallbacks: VertexAttrib4usvARB"],[5,"VertexAttribBinding","",""],[5,"VertexAttribDivisor","","Fallbacks: VertexAttribDivisorANGLE, VertexAttribDivisorARB, VertexAttribDivisorEXT, VertexAttribDivisorNV"],[5,"VertexAttribFormat","",""],[5,"VertexAttribI1i","","Fallbacks: VertexAttribI1iEXT"],[5,"VertexAttribI1iv","","Fallbacks: VertexAttribI1ivEXT"],[5,"VertexAttribI1ui","","Fallbacks: VertexAttribI1uiEXT"],[5,"VertexAttribI1uiv","","Fallbacks: VertexAttribI1uivEXT"],[5,"VertexAttribI2i","","Fallbacks: VertexAttribI2iEXT"],[5,"VertexAttribI2iv","","Fallbacks: VertexAttribI2ivEXT"],[5,"VertexAttribI2ui","","Fallbacks: VertexAttribI2uiEXT"],[5,"VertexAttribI2uiv","","Fallbacks: VertexAttribI2uivEXT"],[5,"VertexAttribI3i","","Fallbacks: VertexAttribI3iEXT"],[5,"VertexAttribI3iv","","Fallbacks: VertexAttribI3ivEXT"],[5,"VertexAttribI3ui","","Fallbacks: VertexAttribI3uiEXT"],[5,"VertexAttribI3uiv","","Fallbacks: VertexAttribI3uivEXT"],[5,"VertexAttribI4bv","","Fallbacks: VertexAttribI4bvEXT"],[5,"VertexAttribI4i","","Fallbacks: VertexAttribI4iEXT"],[5,"VertexAttribI4iv","","Fallbacks: VertexAttribI4ivEXT"],[5,"VertexAttribI4sv","","Fallbacks: VertexAttribI4svEXT"],[5,"VertexAttribI4ubv","","Fallbacks: VertexAttribI4ubvEXT"],[5,"VertexAttribI4ui","","Fallbacks: VertexAttribI4uiEXT"],[5,"VertexAttribI4uiv","","Fallbacks: VertexAttribI4uivEXT"],[5,"VertexAttribI4usv","","Fallbacks: VertexAttribI4usvEXT"],[5,"VertexAttribIFormat","",""],[5,"VertexAttribIPointer","","Fallbacks: VertexAttribIPointerEXT"],[5,"VertexAttribL1d","","Fallbacks: VertexAttribL1dEXT"],[5,"VertexAttribL1dv","","Fallbacks: VertexAttribL1dvEXT"],[5,"VertexAttribL2d","","Fallbacks: VertexAttribL2dEXT"],[5,"VertexAttribL2dv","","Fallbacks: VertexAttribL2dvEXT"],[5,"VertexAttribL3d","","Fallbacks: VertexAttribL3dEXT"],[5,"VertexAttribL3dv","","Fallbacks: VertexAttribL3dvEXT"],[5,"VertexAttribL4d","","Fallbacks: VertexAttribL4dEXT"],[5,"VertexAttribL4dv","","Fallbacks: VertexAttribL4dvEXT"],[5,"VertexAttribLFormat","",""],[5,"VertexAttribLPointer","","Fallbacks: VertexAttribLPointerEXT"],[5,"VertexAttribP1ui","",""],[5,"VertexAttribP1uiv","",""],[5,"VertexAttribP2ui","",""],[5,"VertexAttribP2uiv","",""],[5,"VertexAttribP3ui","",""],[5,"VertexAttribP3uiv","",""],[5,"VertexAttribP4ui","",""],[5,"VertexAttribP4uiv","",""],[5,"VertexAttribPointer","","Fallbacks: VertexAttribPointerARB"],[5,"VertexBindingDivisor","",""],[5,"VertexP2ui","",""],[5,"VertexP2uiv","",""],[5,"VertexP3ui","",""],[5,"VertexP3uiv","",""],[5,"VertexP4ui","",""],[5,"VertexP4uiv","",""],[5,"Viewport","",""],[5,"ViewportArrayv","","Fallbacks: ViewportArrayvNV"],[5,"ViewportIndexedf","","Fallbacks: ViewportIndexedfNV"],[5,"ViewportIndexedfv","","Fallbacks: ViewportIndexedfvNV"],[5,"WaitSync","","Fallbacks: WaitSyncAPPLE"],[5,"load_with","","Load each OpenGL symbol using a custom load function. This allows for the\nuse of functions like `glfwGetProcAddress` or `SDL_GL_GetProcAddress`.\n~~~ignore\ngl::load_with(|s| glfw.get_proc_address(s));\n~~~"],[5,"load","","Load each OpenGL symbol using a custom load function."],[0,"types","",""],[3,"__GLsync","gl::types",""],[3,"_cl_context","",""],[3,"_cl_event","",""],[6,"GLenum","",""],[6,"GLboolean","",""],[6,"GLbitfield","",""],[6,"GLvoid","",""],[6,"GLbyte","",""],[6,"GLshort","",""],[6,"GLint","",""],[6,"GLclampx","",""],[6,"GLubyte","",""],[6,"GLushort","",""],[6,"GLuint","",""],[6,"GLsizei","",""],[6,"GLfloat","",""],[6,"GLclampf","",""],[6,"GLdouble","",""],[6,"GLclampd","",""],[6,"GLeglImageOES","",""],[6,"GLchar","",""],[6,"GLcharARB","",""],[6,"GLhandleARB","",""],[6,"GLhalfARB","",""],[6,"GLhalf","",""],[6,"GLfixed","",""],[6,"GLintptr","",""],[6,"GLsizeiptr","",""],[6,"GLint64","",""],[6,"GLuint64","",""],[6,"GLintptrARB","",""],[6,"GLsizeiptrARB","",""],[6,"GLint64EXT","",""],[6,"GLuint64EXT","",""],[6,"GLsync","",""],[6,"GLDEBUGPROC","",""],[6,"GLDEBUGPROCARB","",""],[6,"GLDEBUGPROCKHR","",""],[6,"GLDEBUGPROCAMD","",""],[6,"GLhalfNV","",""],[6,"GLvdpauSurfaceNV","",""],[0,"ActiveShaderProgram","gl",""],[5,"is_loaded","gl::ActiveShaderProgram",""],[5,"load_with","",""],[0,"ActiveTexture","gl",""],[5,"is_loaded","gl::ActiveTexture",""],[5,"load_with","",""],[0,"AttachShader","gl",""],[5,"is_loaded","gl::AttachShader",""],[5,"load_with","",""],[0,"BeginConditionalRender","gl",""],[5,"is_loaded","gl::BeginConditionalRender",""],[5,"load_with","",""],[0,"BeginQuery","gl",""],[5,"is_loaded","gl::BeginQuery",""],[5,"load_with","",""],[0,"BeginQueryIndexed","gl",""],[5,"is_loaded","gl::BeginQueryIndexed",""],[5,"load_with","",""],[0,"BeginTransformFeedback","gl",""],[5,"is_loaded","gl::BeginTransformFeedback",""],[5,"load_with","",""],[0,"BindAttribLocation","gl",""],[5,"is_loaded","gl::BindAttribLocation",""],[5,"load_with","",""],[0,"BindBuffer","gl",""],[5,"is_loaded","gl::BindBuffer",""],[5,"load_with","",""],[0,"BindBufferBase","gl",""],[5,"is_loaded","gl::BindBufferBase",""],[5,"load_with","",""],[0,"BindBufferRange","gl",""],[5,"is_loaded","gl::BindBufferRange",""],[5,"load_with","",""],[0,"BindBuffersBase","gl",""],[5,"is_loaded","gl::BindBuffersBase",""],[5,"load_with","",""],[0,"BindBuffersRange","gl",""],[5,"is_loaded","gl::BindBuffersRange",""],[5,"load_with","",""],[0,"BindFragDataLocation","gl",""],[5,"is_loaded","gl::BindFragDataLocation",""],[5,"load_with","",""],[0,"BindFragDataLocationIndexed","gl",""],[5,"is_loaded","gl::BindFragDataLocationIndexed",""],[5,"load_with","",""],[0,"BindFramebuffer","gl",""],[5,"is_loaded","gl::BindFramebuffer",""],[5,"load_with","",""],[0,"BindImageTexture","gl",""],[5,"is_loaded","gl::BindImageTexture",""],[5,"load_with","",""],[0,"BindImageTextures","gl",""],[5,"is_loaded","gl::BindImageTextures",""],[5,"load_with","",""],[0,"BindProgramPipeline","gl",""],[5,"is_loaded","gl::BindProgramPipeline",""],[5,"load_with","",""],[0,"BindRenderbuffer","gl",""],[5,"is_loaded","gl::BindRenderbuffer",""],[5,"load_with","",""],[0,"BindSampler","gl",""],[5,"is_loaded","gl::BindSampler",""],[5,"load_with","",""],[0,"BindSamplers","gl",""],[5,"is_loaded","gl::BindSamplers",""],[5,"load_with","",""],[0,"BindTexture","gl",""],[5,"is_loaded","gl::BindTexture",""],[5,"load_with","",""],[0,"BindTextureUnit","gl",""],[5,"is_loaded","gl::BindTextureUnit",""],[5,"load_with","",""],[0,"BindTextures","gl",""],[5,"is_loaded","gl::BindTextures",""],[5,"load_with","",""],[0,"BindTransformFeedback","gl",""],[5,"is_loaded","gl::BindTransformFeedback",""],[5,"load_with","",""],[0,"BindVertexArray","gl",""],[5,"is_loaded","gl::BindVertexArray",""],[5,"load_with","",""],[0,"BindVertexBuffer","gl",""],[5,"is_loaded","gl::BindVertexBuffer",""],[5,"load_with","",""],[0,"BindVertexBuffers","gl",""],[5,"is_loaded","gl::BindVertexBuffers",""],[5,"load_with","",""],[0,"BlendColor","gl",""],[5,"is_loaded","gl::BlendColor",""],[5,"load_with","",""],[0,"BlendEquation","gl",""],[5,"is_loaded","gl::BlendEquation",""],[5,"load_with","",""],[0,"BlendEquationSeparate","gl",""],[5,"is_loaded","gl::BlendEquationSeparate",""],[5,"load_with","",""],[0,"BlendEquationSeparatei","gl",""],[5,"is_loaded","gl::BlendEquationSeparatei",""],[5,"load_with","",""],[0,"BlendEquationi","gl",""],[5,"is_loaded","gl::BlendEquationi",""],[5,"load_with","",""],[0,"BlendFunc","gl",""],[5,"is_loaded","gl::BlendFunc",""],[5,"load_with","",""],[0,"BlendFuncSeparate","gl",""],[5,"is_loaded","gl::BlendFuncSeparate",""],[5,"load_with","",""],[0,"BlendFuncSeparatei","gl",""],[5,"is_loaded","gl::BlendFuncSeparatei",""],[5,"load_with","",""],[0,"BlendFunci","gl",""],[5,"is_loaded","gl::BlendFunci",""],[5,"load_with","",""],[0,"BlitFramebuffer","gl",""],[5,"is_loaded","gl::BlitFramebuffer",""],[5,"load_with","",""],[0,"BlitNamedFramebuffer","gl",""],[5,"is_loaded","gl::BlitNamedFramebuffer",""],[5,"load_with","",""],[0,"BufferData","gl",""],[5,"is_loaded","gl::BufferData",""],[5,"load_with","",""],[0,"BufferStorage","gl",""],[5,"is_loaded","gl::BufferStorage",""],[5,"load_with","",""],[0,"BufferSubData","gl",""],[5,"is_loaded","gl::BufferSubData",""],[5,"load_with","",""],[0,"CheckFramebufferStatus","gl",""],[5,"is_loaded","gl::CheckFramebufferStatus",""],[5,"load_with","",""],[0,"CheckNamedFramebufferStatus","gl",""],[5,"is_loaded","gl::CheckNamedFramebufferStatus",""],[5,"load_with","",""],[0,"ClampColor","gl",""],[5,"is_loaded","gl::ClampColor",""],[5,"load_with","",""],[0,"Clear","gl",""],[5,"is_loaded","gl::Clear",""],[5,"load_with","",""],[0,"ClearBufferData","gl",""],[5,"is_loaded","gl::ClearBufferData",""],[5,"load_with","",""],[0,"ClearBufferSubData","gl",""],[5,"is_loaded","gl::ClearBufferSubData",""],[5,"load_with","",""],[0,"ClearBufferfi","gl",""],[5,"is_loaded","gl::ClearBufferfi",""],[5,"load_with","",""],[0,"ClearBufferfv","gl",""],[5,"is_loaded","gl::ClearBufferfv",""],[5,"load_with","",""],[0,"ClearBufferiv","gl",""],[5,"is_loaded","gl::ClearBufferiv",""],[5,"load_with","",""],[0,"ClearBufferuiv","gl",""],[5,"is_loaded","gl::ClearBufferuiv",""],[5,"load_with","",""],[0,"ClearColor","gl",""],[5,"is_loaded","gl::ClearColor",""],[5,"load_with","",""],[0,"ClearDepth","gl",""],[5,"is_loaded","gl::ClearDepth",""],[5,"load_with","",""],[0,"ClearDepthf","gl",""],[5,"is_loaded","gl::ClearDepthf",""],[5,"load_with","",""],[0,"ClearNamedBufferData","gl",""],[5,"is_loaded","gl::ClearNamedBufferData",""],[5,"load_with","",""],[0,"ClearNamedBufferSubData","gl",""],[5,"is_loaded","gl::ClearNamedBufferSubData",""],[5,"load_with","",""],[0,"ClearNamedFramebufferfi","gl",""],[5,"is_loaded","gl::ClearNamedFramebufferfi",""],[5,"load_with","",""],[0,"ClearNamedFramebufferfv","gl",""],[5,"is_loaded","gl::ClearNamedFramebufferfv",""],[5,"load_with","",""],[0,"ClearNamedFramebufferiv","gl",""],[5,"is_loaded","gl::ClearNamedFramebufferiv",""],[5,"load_with","",""],[0,"ClearNamedFramebufferuiv","gl",""],[5,"is_loaded","gl::ClearNamedFramebufferuiv",""],[5,"load_with","",""],[0,"ClearStencil","gl",""],[5,"is_loaded","gl::ClearStencil",""],[5,"load_with","",""],[0,"ClearTexImage","gl",""],[5,"is_loaded","gl::ClearTexImage",""],[5,"load_with","",""],[0,"ClearTexSubImage","gl",""],[5,"is_loaded","gl::ClearTexSubImage",""],[5,"load_with","",""],[0,"ClientWaitSync","gl",""],[5,"is_loaded","gl::ClientWaitSync",""],[5,"load_with","",""],[0,"ClipControl","gl",""],[5,"is_loaded","gl::ClipControl",""],[5,"load_with","",""],[0,"ColorMask","gl",""],[5,"is_loaded","gl::ColorMask",""],[5,"load_with","",""],[0,"ColorMaski","gl",""],[5,"is_loaded","gl::ColorMaski",""],[5,"load_with","",""],[0,"ColorP3ui","gl",""],[5,"is_loaded","gl::ColorP3ui",""],[5,"load_with","",""],[0,"ColorP3uiv","gl",""],[5,"is_loaded","gl::ColorP3uiv",""],[5,"load_with","",""],[0,"ColorP4ui","gl",""],[5,"is_loaded","gl::ColorP4ui",""],[5,"load_with","",""],[0,"ColorP4uiv","gl",""],[5,"is_loaded","gl::ColorP4uiv",""],[5,"load_with","",""],[0,"CompileShader","gl",""],[5,"is_loaded","gl::CompileShader",""],[5,"load_with","",""],[0,"CompressedTexImage1D","gl",""],[5,"is_loaded","gl::CompressedTexImage1D",""],[5,"load_with","",""],[0,"CompressedTexImage2D","gl",""],[5,"is_loaded","gl::CompressedTexImage2D",""],[5,"load_with","",""],[0,"CompressedTexImage3D","gl",""],[5,"is_loaded","gl::CompressedTexImage3D",""],[5,"load_with","",""],[0,"CompressedTexSubImage1D","gl",""],[5,"is_loaded","gl::CompressedTexSubImage1D",""],[5,"load_with","",""],[0,"CompressedTexSubImage2D","gl",""],[5,"is_loaded","gl::CompressedTexSubImage2D",""],[5,"load_with","",""],[0,"CompressedTexSubImage3D","gl",""],[5,"is_loaded","gl::CompressedTexSubImage3D",""],[5,"load_with","",""],[0,"CompressedTextureSubImage1D","gl",""],[5,"is_loaded","gl::CompressedTextureSubImage1D",""],[5,"load_with","",""],[0,"CompressedTextureSubImage2D","gl",""],[5,"is_loaded","gl::CompressedTextureSubImage2D",""],[5,"load_with","",""],[0,"CompressedTextureSubImage3D","gl",""],[5,"is_loaded","gl::CompressedTextureSubImage3D",""],[5,"load_with","",""],[0,"CopyBufferSubData","gl",""],[5,"is_loaded","gl::CopyBufferSubData",""],[5,"load_with","",""],[0,"CopyImageSubData","gl",""],[5,"is_loaded","gl::CopyImageSubData",""],[5,"load_with","",""],[0,"CopyNamedBufferSubData","gl",""],[5,"is_loaded","gl::CopyNamedBufferSubData",""],[5,"load_with","",""],[0,"CopyTexImage1D","gl",""],[5,"is_loaded","gl::CopyTexImage1D",""],[5,"load_with","",""],[0,"CopyTexImage2D","gl",""],[5,"is_loaded","gl::CopyTexImage2D",""],[5,"load_with","",""],[0,"CopyTexSubImage1D","gl",""],[5,"is_loaded","gl::CopyTexSubImage1D",""],[5,"load_with","",""],[0,"CopyTexSubImage2D","gl",""],[5,"is_loaded","gl::CopyTexSubImage2D",""],[5,"load_with","",""],[0,"CopyTexSubImage3D","gl",""],[5,"is_loaded","gl::CopyTexSubImage3D",""],[5,"load_with","",""],[0,"CopyTextureSubImage1D","gl",""],[5,"is_loaded","gl::CopyTextureSubImage1D",""],[5,"load_with","",""],[0,"CopyTextureSubImage2D","gl",""],[5,"is_loaded","gl::CopyTextureSubImage2D",""],[5,"load_with","",""],[0,"CopyTextureSubImage3D","gl",""],[5,"is_loaded","gl::CopyTextureSubImage3D",""],[5,"load_with","",""],[0,"CreateBuffers","gl",""],[5,"is_loaded","gl::CreateBuffers",""],[5,"load_with","",""],[0,"CreateFramebuffers","gl",""],[5,"is_loaded","gl::CreateFramebuffers",""],[5,"load_with","",""],[0,"CreateProgram","gl",""],[5,"is_loaded","gl::CreateProgram",""],[5,"load_with","",""],[0,"CreateProgramPipelines","gl",""],[5,"is_loaded","gl::CreateProgramPipelines",""],[5,"load_with","",""],[0,"CreateQueries","gl",""],[5,"is_loaded","gl::CreateQueries",""],[5,"load_with","",""],[0,"CreateRenderbuffers","gl",""],[5,"is_loaded","gl::CreateRenderbuffers",""],[5,"load_with","",""],[0,"CreateSamplers","gl",""],[5,"is_loaded","gl::CreateSamplers",""],[5,"load_with","",""],[0,"CreateShader","gl",""],[5,"is_loaded","gl::CreateShader",""],[5,"load_with","",""],[0,"CreateShaderProgramv","gl",""],[5,"is_loaded","gl::CreateShaderProgramv",""],[5,"load_with","",""],[0,"CreateTextures","gl",""],[5,"is_loaded","gl::CreateTextures",""],[5,"load_with","",""],[0,"CreateTransformFeedbacks","gl",""],[5,"is_loaded","gl::CreateTransformFeedbacks",""],[5,"load_with","",""],[0,"CreateVertexArrays","gl",""],[5,"is_loaded","gl::CreateVertexArrays",""],[5,"load_with","",""],[0,"CullFace","gl",""],[5,"is_loaded","gl::CullFace",""],[5,"load_with","",""],[0,"DebugMessageCallback","gl",""],[5,"is_loaded","gl::DebugMessageCallback",""],[5,"load_with","",""],[0,"DebugMessageControl","gl",""],[5,"is_loaded","gl::DebugMessageControl",""],[5,"load_with","",""],[0,"DebugMessageInsert","gl",""],[5,"is_loaded","gl::DebugMessageInsert",""],[5,"load_with","",""],[0,"DeleteBuffers","gl",""],[5,"is_loaded","gl::DeleteBuffers",""],[5,"load_with","",""],[0,"DeleteFramebuffers","gl",""],[5,"is_loaded","gl::DeleteFramebuffers",""],[5,"load_with","",""],[0,"DeleteProgram","gl",""],[5,"is_loaded","gl::DeleteProgram",""],[5,"load_with","",""],[0,"DeleteProgramPipelines","gl",""],[5,"is_loaded","gl::DeleteProgramPipelines",""],[5,"load_with","",""],[0,"DeleteQueries","gl",""],[5,"is_loaded","gl::DeleteQueries",""],[5,"load_with","",""],[0,"DeleteRenderbuffers","gl",""],[5,"is_loaded","gl::DeleteRenderbuffers",""],[5,"load_with","",""],[0,"DeleteSamplers","gl",""],[5,"is_loaded","gl::DeleteSamplers",""],[5,"load_with","",""],[0,"DeleteShader","gl",""],[5,"is_loaded","gl::DeleteShader",""],[5,"load_with","",""],[0,"DeleteSync","gl",""],[5,"is_loaded","gl::DeleteSync",""],[5,"load_with","",""],[0,"DeleteTextures","gl",""],[5,"is_loaded","gl::DeleteTextures",""],[5,"load_with","",""],[0,"DeleteTransformFeedbacks","gl",""],[5,"is_loaded","gl::DeleteTransformFeedbacks",""],[5,"load_with","",""],[0,"DeleteVertexArrays","gl",""],[5,"is_loaded","gl::DeleteVertexArrays",""],[5,"load_with","",""],[0,"DepthFunc","gl",""],[5,"is_loaded","gl::DepthFunc",""],[5,"load_with","",""],[0,"DepthMask","gl",""],[5,"is_loaded","gl::DepthMask",""],[5,"load_with","",""],[0,"DepthRange","gl",""],[5,"is_loaded","gl::DepthRange",""],[5,"load_with","",""],[0,"DepthRangeArrayv","gl",""],[5,"is_loaded","gl::DepthRangeArrayv",""],[5,"load_with","",""],[0,"DepthRangeIndexed","gl",""],[5,"is_loaded","gl::DepthRangeIndexed",""],[5,"load_with","",""],[0,"DepthRangef","gl",""],[5,"is_loaded","gl::DepthRangef",""],[5,"load_with","",""],[0,"DetachShader","gl",""],[5,"is_loaded","gl::DetachShader",""],[5,"load_with","",""],[0,"Disable","gl",""],[5,"is_loaded","gl::Disable",""],[5,"load_with","",""],[0,"DisableVertexArrayAttrib","gl",""],[5,"is_loaded","gl::DisableVertexArrayAttrib",""],[5,"load_with","",""],[0,"DisableVertexAttribArray","gl",""],[5,"is_loaded","gl::DisableVertexAttribArray",""],[5,"load_with","",""],[0,"Disablei","gl",""],[5,"is_loaded","gl::Disablei",""],[5,"load_with","",""],[0,"DispatchCompute","gl",""],[5,"is_loaded","gl::DispatchCompute",""],[5,"load_with","",""],[0,"DispatchComputeIndirect","gl",""],[5,"is_loaded","gl::DispatchComputeIndirect",""],[5,"load_with","",""],[0,"DrawArrays","gl",""],[5,"is_loaded","gl::DrawArrays",""],[5,"load_with","",""],[0,"DrawArraysIndirect","gl",""],[5,"is_loaded","gl::DrawArraysIndirect",""],[5,"load_with","",""],[0,"DrawArraysInstanced","gl",""],[5,"is_loaded","gl::DrawArraysInstanced",""],[5,"load_with","",""],[0,"DrawArraysInstancedBaseInstance","gl",""],[5,"is_loaded","gl::DrawArraysInstancedBaseInstance",""],[5,"load_with","",""],[0,"DrawBuffer","gl",""],[5,"is_loaded","gl::DrawBuffer",""],[5,"load_with","",""],[0,"DrawBuffers","gl",""],[5,"is_loaded","gl::DrawBuffers",""],[5,"load_with","",""],[0,"DrawElements","gl",""],[5,"is_loaded","gl::DrawElements",""],[5,"load_with","",""],[0,"DrawElementsBaseVertex","gl",""],[5,"is_loaded","gl::DrawElementsBaseVertex",""],[5,"load_with","",""],[0,"DrawElementsIndirect","gl",""],[5,"is_loaded","gl::DrawElementsIndirect",""],[5,"load_with","",""],[0,"DrawElementsInstanced","gl",""],[5,"is_loaded","gl::DrawElementsInstanced",""],[5,"load_with","",""],[0,"DrawElementsInstancedBaseInstance","gl",""],[5,"is_loaded","gl::DrawElementsInstancedBaseInstance",""],[5,"load_with","",""],[0,"DrawElementsInstancedBaseVertex","gl",""],[5,"is_loaded","gl::DrawElementsInstancedBaseVertex",""],[5,"load_with","",""],[0,"DrawElementsInstancedBaseVertexBaseInstance","gl",""],[5,"is_loaded","gl::DrawElementsInstancedBaseVertexBaseInstance",""],[5,"load_with","",""],[0,"DrawRangeElements","gl",""],[5,"is_loaded","gl::DrawRangeElements",""],[5,"load_with","",""],[0,"DrawRangeElementsBaseVertex","gl",""],[5,"is_loaded","gl::DrawRangeElementsBaseVertex",""],[5,"load_with","",""],[0,"DrawTransformFeedback","gl",""],[5,"is_loaded","gl::DrawTransformFeedback",""],[5,"load_with","",""],[0,"DrawTransformFeedbackInstanced","gl",""],[5,"is_loaded","gl::DrawTransformFeedbackInstanced",""],[5,"load_with","",""],[0,"DrawTransformFeedbackStream","gl",""],[5,"is_loaded","gl::DrawTransformFeedbackStream",""],[5,"load_with","",""],[0,"DrawTransformFeedbackStreamInstanced","gl",""],[5,"is_loaded","gl::DrawTransformFeedbackStreamInstanced",""],[5,"load_with","",""],[0,"Enable","gl",""],[5,"is_loaded","gl::Enable",""],[5,"load_with","",""],[0,"EnableVertexArrayAttrib","gl",""],[5,"is_loaded","gl::EnableVertexArrayAttrib",""],[5,"load_with","",""],[0,"EnableVertexAttribArray","gl",""],[5,"is_loaded","gl::EnableVertexAttribArray",""],[5,"load_with","",""],[0,"Enablei","gl",""],[5,"is_loaded","gl::Enablei",""],[5,"load_with","",""],[0,"EndConditionalRender","gl",""],[5,"is_loaded","gl::EndConditionalRender",""],[5,"load_with","",""],[0,"EndQuery","gl",""],[5,"is_loaded","gl::EndQuery",""],[5,"load_with","",""],[0,"EndQueryIndexed","gl",""],[5,"is_loaded","gl::EndQueryIndexed",""],[5,"load_with","",""],[0,"EndTransformFeedback","gl",""],[5,"is_loaded","gl::EndTransformFeedback",""],[5,"load_with","",""],[0,"FenceSync","gl",""],[5,"is_loaded","gl::FenceSync",""],[5,"load_with","",""],[0,"Finish","gl",""],[5,"is_loaded","gl::Finish",""],[5,"load_with","",""],[0,"Flush","gl",""],[5,"is_loaded","gl::Flush",""],[5,"load_with","",""],[0,"FlushMappedBufferRange","gl",""],[5,"is_loaded","gl::FlushMappedBufferRange",""],[5,"load_with","",""],[0,"FlushMappedNamedBufferRange","gl",""],[5,"is_loaded","gl::FlushMappedNamedBufferRange",""],[5,"load_with","",""],[0,"FramebufferParameteri","gl",""],[5,"is_loaded","gl::FramebufferParameteri",""],[5,"load_with","",""],[0,"FramebufferRenderbuffer","gl",""],[5,"is_loaded","gl::FramebufferRenderbuffer",""],[5,"load_with","",""],[0,"FramebufferTexture","gl",""],[5,"is_loaded","gl::FramebufferTexture",""],[5,"load_with","",""],[0,"FramebufferTexture1D","gl",""],[5,"is_loaded","gl::FramebufferTexture1D",""],[5,"load_with","",""],[0,"FramebufferTexture2D","gl",""],[5,"is_loaded","gl::FramebufferTexture2D",""],[5,"load_with","",""],[0,"FramebufferTexture3D","gl",""],[5,"is_loaded","gl::FramebufferTexture3D",""],[5,"load_with","",""],[0,"FramebufferTextureLayer","gl",""],[5,"is_loaded","gl::FramebufferTextureLayer",""],[5,"load_with","",""],[0,"FrontFace","gl",""],[5,"is_loaded","gl::FrontFace",""],[5,"load_with","",""],[0,"GenBuffers","gl",""],[5,"is_loaded","gl::GenBuffers",""],[5,"load_with","",""],[0,"GenFramebuffers","gl",""],[5,"is_loaded","gl::GenFramebuffers",""],[5,"load_with","",""],[0,"GenProgramPipelines","gl",""],[5,"is_loaded","gl::GenProgramPipelines",""],[5,"load_with","",""],[0,"GenQueries","gl",""],[5,"is_loaded","gl::GenQueries",""],[5,"load_with","",""],[0,"GenRenderbuffers","gl",""],[5,"is_loaded","gl::GenRenderbuffers",""],[5,"load_with","",""],[0,"GenSamplers","gl",""],[5,"is_loaded","gl::GenSamplers",""],[5,"load_with","",""],[0,"GenTextures","gl",""],[5,"is_loaded","gl::GenTextures",""],[5,"load_with","",""],[0,"GenTransformFeedbacks","gl",""],[5,"is_loaded","gl::GenTransformFeedbacks",""],[5,"load_with","",""],[0,"GenVertexArrays","gl",""],[5,"is_loaded","gl::GenVertexArrays",""],[5,"load_with","",""],[0,"GenerateMipmap","gl",""],[5,"is_loaded","gl::GenerateMipmap",""],[5,"load_with","",""],[0,"GenerateTextureMipmap","gl",""],[5,"is_loaded","gl::GenerateTextureMipmap",""],[5,"load_with","",""],[0,"GetActiveAtomicCounterBufferiv","gl",""],[5,"is_loaded","gl::GetActiveAtomicCounterBufferiv",""],[5,"load_with","",""],[0,"GetActiveAttrib","gl",""],[5,"is_loaded","gl::GetActiveAttrib",""],[5,"load_with","",""],[0,"GetActiveSubroutineName","gl",""],[5,"is_loaded","gl::GetActiveSubroutineName",""],[5,"load_with","",""],[0,"GetActiveSubroutineUniformName","gl",""],[5,"is_loaded","gl::GetActiveSubroutineUniformName",""],[5,"load_with","",""],[0,"GetActiveSubroutineUniformiv","gl",""],[5,"is_loaded","gl::GetActiveSubroutineUniformiv",""],[5,"load_with","",""],[0,"GetActiveUniform","gl",""],[5,"is_loaded","gl::GetActiveUniform",""],[5,"load_with","",""],[0,"GetActiveUniformBlockName","gl",""],[5,"is_loaded","gl::GetActiveUniformBlockName",""],[5,"load_with","",""],[0,"GetActiveUniformBlockiv","gl",""],[5,"is_loaded","gl::GetActiveUniformBlockiv",""],[5,"load_with","",""],[0,"GetActiveUniformName","gl",""],[5,"is_loaded","gl::GetActiveUniformName",""],[5,"load_with","",""],[0,"GetActiveUniformsiv","gl",""],[5,"is_loaded","gl::GetActiveUniformsiv",""],[5,"load_with","",""],[0,"GetAttachedShaders","gl",""],[5,"is_loaded","gl::GetAttachedShaders",""],[5,"load_with","",""],[0,"GetAttribLocation","gl",""],[5,"is_loaded","gl::GetAttribLocation",""],[5,"load_with","",""],[0,"GetBooleani_v","gl",""],[5,"is_loaded","gl::GetBooleani_v",""],[5,"load_with","",""],[0,"GetBooleanv","gl",""],[5,"is_loaded","gl::GetBooleanv",""],[5,"load_with","",""],[0,"GetBufferParameteri64v","gl",""],[5,"is_loaded","gl::GetBufferParameteri64v",""],[5,"load_with","",""],[0,"GetBufferParameteriv","gl",""],[5,"is_loaded","gl::GetBufferParameteriv",""],[5,"load_with","",""],[0,"GetBufferPointerv","gl",""],[5,"is_loaded","gl::GetBufferPointerv",""],[5,"load_with","",""],[0,"GetBufferSubData","gl",""],[5,"is_loaded","gl::GetBufferSubData",""],[5,"load_with","",""],[0,"GetCompressedTexImage","gl",""],[5,"is_loaded","gl::GetCompressedTexImage",""],[5,"load_with","",""],[0,"GetCompressedTextureImage","gl",""],[5,"is_loaded","gl::GetCompressedTextureImage",""],[5,"load_with","",""],[0,"GetCompressedTextureSubImage","gl",""],[5,"is_loaded","gl::GetCompressedTextureSubImage",""],[5,"load_with","",""],[0,"GetDebugMessageLog","gl",""],[5,"is_loaded","gl::GetDebugMessageLog",""],[5,"load_with","",""],[0,"GetDoublei_v","gl",""],[5,"is_loaded","gl::GetDoublei_v",""],[5,"load_with","",""],[0,"GetDoublev","gl",""],[5,"is_loaded","gl::GetDoublev",""],[5,"load_with","",""],[0,"GetError","gl",""],[5,"is_loaded","gl::GetError",""],[5,"load_with","",""],[0,"GetFloati_v","gl",""],[5,"is_loaded","gl::GetFloati_v",""],[5,"load_with","",""],[0,"GetFloatv","gl",""],[5,"is_loaded","gl::GetFloatv",""],[5,"load_with","",""],[0,"GetFragDataIndex","gl",""],[5,"is_loaded","gl::GetFragDataIndex",""],[5,"load_with","",""],[0,"GetFragDataLocation","gl",""],[5,"is_loaded","gl::GetFragDataLocation",""],[5,"load_with","",""],[0,"GetFramebufferAttachmentParameteriv","gl",""],[5,"is_loaded","gl::GetFramebufferAttachmentParameteriv",""],[5,"load_with","",""],[0,"GetFramebufferParameteriv","gl",""],[5,"is_loaded","gl::GetFramebufferParameteriv",""],[5,"load_with","",""],[0,"GetGraphicsResetStatus","gl",""],[5,"is_loaded","gl::GetGraphicsResetStatus",""],[5,"load_with","",""],[0,"GetInteger64i_v","gl",""],[5,"is_loaded","gl::GetInteger64i_v",""],[5,"load_with","",""],[0,"GetInteger64v","gl",""],[5,"is_loaded","gl::GetInteger64v",""],[5,"load_with","",""],[0,"GetIntegeri_v","gl",""],[5,"is_loaded","gl::GetIntegeri_v",""],[5,"load_with","",""],[0,"GetIntegerv","gl",""],[5,"is_loaded","gl::GetIntegerv",""],[5,"load_with","",""],[0,"GetInternalformati64v","gl",""],[5,"is_loaded","gl::GetInternalformati64v",""],[5,"load_with","",""],[0,"GetInternalformativ","gl",""],[5,"is_loaded","gl::GetInternalformativ",""],[5,"load_with","",""],[0,"GetMultisamplefv","gl",""],[5,"is_loaded","gl::GetMultisamplefv",""],[5,"load_with","",""],[0,"GetNamedBufferParameteri64v","gl",""],[5,"is_loaded","gl::GetNamedBufferParameteri64v",""],[5,"load_with","",""],[0,"GetNamedBufferParameteriv","gl",""],[5,"is_loaded","gl::GetNamedBufferParameteriv",""],[5,"load_with","",""],[0,"GetNamedBufferPointerv","gl",""],[5,"is_loaded","gl::GetNamedBufferPointerv",""],[5,"load_with","",""],[0,"GetNamedBufferSubData","gl",""],[5,"is_loaded","gl::GetNamedBufferSubData",""],[5,"load_with","",""],[0,"GetNamedFramebufferAttachmentParameteriv","gl",""],[5,"is_loaded","gl::GetNamedFramebufferAttachmentParameteriv",""],[5,"load_with","",""],[0,"GetNamedFramebufferParameteriv","gl",""],[5,"is_loaded","gl::GetNamedFramebufferParameteriv",""],[5,"load_with","",""],[0,"GetNamedRenderbufferParameteriv","gl",""],[5,"is_loaded","gl::GetNamedRenderbufferParameteriv",""],[5,"load_with","",""],[0,"GetObjectLabel","gl",""],[5,"is_loaded","gl::GetObjectLabel",""],[5,"load_with","",""],[0,"GetObjectPtrLabel","gl",""],[5,"is_loaded","gl::GetObjectPtrLabel",""],[5,"load_with","",""],[0,"GetProgramBinary","gl",""],[5,"is_loaded","gl::GetProgramBinary",""],[5,"load_with","",""],[0,"GetProgramInfoLog","gl",""],[5,"is_loaded","gl::GetProgramInfoLog",""],[5,"load_with","",""],[0,"GetProgramInterfaceiv","gl",""],[5,"is_loaded","gl::GetProgramInterfaceiv",""],[5,"load_with","",""],[0,"GetProgramPipelineInfoLog","gl",""],[5,"is_loaded","gl::GetProgramPipelineInfoLog",""],[5,"load_with","",""],[0,"GetProgramPipelineiv","gl",""],[5,"is_loaded","gl::GetProgramPipelineiv",""],[5,"load_with","",""],[0,"GetProgramResourceIndex","gl",""],[5,"is_loaded","gl::GetProgramResourceIndex",""],[5,"load_with","",""],[0,"GetProgramResourceLocation","gl",""],[5,"is_loaded","gl::GetProgramResourceLocation",""],[5,"load_with","",""],[0,"GetProgramResourceLocationIndex","gl",""],[5,"is_loaded","gl::GetProgramResourceLocationIndex",""],[5,"load_with","",""],[0,"GetProgramResourceName","gl",""],[5,"is_loaded","gl::GetProgramResourceName",""],[5,"load_with","",""],[0,"GetProgramResourceiv","gl",""],[5,"is_loaded","gl::GetProgramResourceiv",""],[5,"load_with","",""],[0,"GetProgramStageiv","gl",""],[5,"is_loaded","gl::GetProgramStageiv",""],[5,"load_with","",""],[0,"GetProgramiv","gl",""],[5,"is_loaded","gl::GetProgramiv",""],[5,"load_with","",""],[0,"GetQueryBufferObjecti64v","gl",""],[5,"is_loaded","gl::GetQueryBufferObjecti64v",""],[5,"load_with","",""],[0,"GetQueryBufferObjectiv","gl",""],[5,"is_loaded","gl::GetQueryBufferObjectiv",""],[5,"load_with","",""],[0,"GetQueryBufferObjectui64v","gl",""],[5,"is_loaded","gl::GetQueryBufferObjectui64v",""],[5,"load_with","",""],[0,"GetQueryBufferObjectuiv","gl",""],[5,"is_loaded","gl::GetQueryBufferObjectuiv",""],[5,"load_with","",""],[0,"GetQueryIndexediv","gl",""],[5,"is_loaded","gl::GetQueryIndexediv",""],[5,"load_with","",""],[0,"GetQueryObjecti64v","gl",""],[5,"is_loaded","gl::GetQueryObjecti64v",""],[5,"load_with","",""],[0,"GetQueryObjectiv","gl",""],[5,"is_loaded","gl::GetQueryObjectiv",""],[5,"load_with","",""],[0,"GetQueryObjectui64v","gl",""],[5,"is_loaded","gl::GetQueryObjectui64v",""],[5,"load_with","",""],[0,"GetQueryObjectuiv","gl",""],[5,"is_loaded","gl::GetQueryObjectuiv",""],[5,"load_with","",""],[0,"GetQueryiv","gl",""],[5,"is_loaded","gl::GetQueryiv",""],[5,"load_with","",""],[0,"GetRenderbufferParameteriv","gl",""],[5,"is_loaded","gl::GetRenderbufferParameteriv",""],[5,"load_with","",""],[0,"GetSamplerParameterIiv","gl",""],[5,"is_loaded","gl::GetSamplerParameterIiv",""],[5,"load_with","",""],[0,"GetSamplerParameterIuiv","gl",""],[5,"is_loaded","gl::GetSamplerParameterIuiv",""],[5,"load_with","",""],[0,"GetSamplerParameterfv","gl",""],[5,"is_loaded","gl::GetSamplerParameterfv",""],[5,"load_with","",""],[0,"GetSamplerParameteriv","gl",""],[5,"is_loaded","gl::GetSamplerParameteriv",""],[5,"load_with","",""],[0,"GetShaderInfoLog","gl",""],[5,"is_loaded","gl::GetShaderInfoLog",""],[5,"load_with","",""],[0,"GetShaderPrecisionFormat","gl",""],[5,"is_loaded","gl::GetShaderPrecisionFormat",""],[5,"load_with","",""],[0,"GetShaderSource","gl",""],[5,"is_loaded","gl::GetShaderSource",""],[5,"load_with","",""],[0,"GetShaderiv","gl",""],[5,"is_loaded","gl::GetShaderiv",""],[5,"load_with","",""],[0,"GetString","gl",""],[5,"is_loaded","gl::GetString",""],[5,"load_with","",""],[0,"GetStringi","gl",""],[5,"is_loaded","gl::GetStringi",""],[5,"load_with","",""],[0,"GetSubroutineIndex","gl",""],[5,"is_loaded","gl::GetSubroutineIndex",""],[5,"load_with","",""],[0,"GetSubroutineUniformLocation","gl",""],[5,"is_loaded","gl::GetSubroutineUniformLocation",""],[5,"load_with","",""],[0,"GetSynciv","gl",""],[5,"is_loaded","gl::GetSynciv",""],[5,"load_with","",""],[0,"GetTexImage","gl",""],[5,"is_loaded","gl::GetTexImage",""],[5,"load_with","",""],[0,"GetTexLevelParameterfv","gl",""],[5,"is_loaded","gl::GetTexLevelParameterfv",""],[5,"load_with","",""],[0,"GetTexLevelParameteriv","gl",""],[5,"is_loaded","gl::GetTexLevelParameteriv",""],[5,"load_with","",""],[0,"GetTexParameterIiv","gl",""],[5,"is_loaded","gl::GetTexParameterIiv",""],[5,"load_with","",""],[0,"GetTexParameterIuiv","gl",""],[5,"is_loaded","gl::GetTexParameterIuiv",""],[5,"load_with","",""],[0,"GetTexParameterfv","gl",""],[5,"is_loaded","gl::GetTexParameterfv",""],[5,"load_with","",""],[0,"GetTexParameteriv","gl",""],[5,"is_loaded","gl::GetTexParameteriv",""],[5,"load_with","",""],[0,"GetTextureImage","gl",""],[5,"is_loaded","gl::GetTextureImage",""],[5,"load_with","",""],[0,"GetTextureLevelParameterfv","gl",""],[5,"is_loaded","gl::GetTextureLevelParameterfv",""],[5,"load_with","",""],[0,"GetTextureLevelParameteriv","gl",""],[5,"is_loaded","gl::GetTextureLevelParameteriv",""],[5,"load_with","",""],[0,"GetTextureParameterIiv","gl",""],[5,"is_loaded","gl::GetTextureParameterIiv",""],[5,"load_with","",""],[0,"GetTextureParameterIuiv","gl",""],[5,"is_loaded","gl::GetTextureParameterIuiv",""],[5,"load_with","",""],[0,"GetTextureParameterfv","gl",""],[5,"is_loaded","gl::GetTextureParameterfv",""],[5,"load_with","",""],[0,"GetTextureParameteriv","gl",""],[5,"is_loaded","gl::GetTextureParameteriv",""],[5,"load_with","",""],[0,"GetTextureSubImage","gl",""],[5,"is_loaded","gl::GetTextureSubImage",""],[5,"load_with","",""],[0,"GetTransformFeedbackVarying","gl",""],[5,"is_loaded","gl::GetTransformFeedbackVarying",""],[5,"load_with","",""],[0,"GetTransformFeedbacki64_v","gl",""],[5,"is_loaded","gl::GetTransformFeedbacki64_v",""],[5,"load_with","",""],[0,"GetTransformFeedbacki_v","gl",""],[5,"is_loaded","gl::GetTransformFeedbacki_v",""],[5,"load_with","",""],[0,"GetTransformFeedbackiv","gl",""],[5,"is_loaded","gl::GetTransformFeedbackiv",""],[5,"load_with","",""],[0,"GetUniformBlockIndex","gl",""],[5,"is_loaded","gl::GetUniformBlockIndex",""],[5,"load_with","",""],[0,"GetUniformIndices","gl",""],[5,"is_loaded","gl::GetUniformIndices",""],[5,"load_with","",""],[0,"GetUniformLocation","gl",""],[5,"is_loaded","gl::GetUniformLocation",""],[5,"load_with","",""],[0,"GetUniformSubroutineuiv","gl",""],[5,"is_loaded","gl::GetUniformSubroutineuiv",""],[5,"load_with","",""],[0,"GetUniformdv","gl",""],[5,"is_loaded","gl::GetUniformdv",""],[5,"load_with","",""],[0,"GetUniformfv","gl",""],[5,"is_loaded","gl::GetUniformfv",""],[5,"load_with","",""],[0,"GetUniformiv","gl",""],[5,"is_loaded","gl::GetUniformiv",""],[5,"load_with","",""],[0,"GetUniformuiv","gl",""],[5,"is_loaded","gl::GetUniformuiv",""],[5,"load_with","",""],[0,"GetVertexArrayIndexed64iv","gl",""],[5,"is_loaded","gl::GetVertexArrayIndexed64iv",""],[5,"load_with","",""],[0,"GetVertexArrayIndexediv","gl",""],[5,"is_loaded","gl::GetVertexArrayIndexediv",""],[5,"load_with","",""],[0,"GetVertexArrayiv","gl",""],[5,"is_loaded","gl::GetVertexArrayiv",""],[5,"load_with","",""],[0,"GetVertexAttribIiv","gl",""],[5,"is_loaded","gl::GetVertexAttribIiv",""],[5,"load_with","",""],[0,"GetVertexAttribIuiv","gl",""],[5,"is_loaded","gl::GetVertexAttribIuiv",""],[5,"load_with","",""],[0,"GetVertexAttribLdv","gl",""],[5,"is_loaded","gl::GetVertexAttribLdv",""],[5,"load_with","",""],[0,"GetVertexAttribPointerv","gl",""],[5,"is_loaded","gl::GetVertexAttribPointerv",""],[5,"load_with","",""],[0,"GetVertexAttribdv","gl",""],[5,"is_loaded","gl::GetVertexAttribdv",""],[5,"load_with","",""],[0,"GetVertexAttribfv","gl",""],[5,"is_loaded","gl::GetVertexAttribfv",""],[5,"load_with","",""],[0,"GetVertexAttribiv","gl",""],[5,"is_loaded","gl::GetVertexAttribiv",""],[5,"load_with","",""],[0,"GetnColorTable","gl",""],[5,"is_loaded","gl::GetnColorTable",""],[5,"load_with","",""],[0,"GetnCompressedTexImage","gl",""],[5,"is_loaded","gl::GetnCompressedTexImage",""],[5,"load_with","",""],[0,"GetnConvolutionFilter","gl",""],[5,"is_loaded","gl::GetnConvolutionFilter",""],[5,"load_with","",""],[0,"GetnHistogram","gl",""],[5,"is_loaded","gl::GetnHistogram",""],[5,"load_with","",""],[0,"GetnMapdv","gl",""],[5,"is_loaded","gl::GetnMapdv",""],[5,"load_with","",""],[0,"GetnMapfv","gl",""],[5,"is_loaded","gl::GetnMapfv",""],[5,"load_with","",""],[0,"GetnMapiv","gl",""],[5,"is_loaded","gl::GetnMapiv",""],[5,"load_with","",""],[0,"GetnMinmax","gl",""],[5,"is_loaded","gl::GetnMinmax",""],[5,"load_with","",""],[0,"GetnPixelMapfv","gl",""],[5,"is_loaded","gl::GetnPixelMapfv",""],[5,"load_with","",""],[0,"GetnPixelMapuiv","gl",""],[5,"is_loaded","gl::GetnPixelMapuiv",""],[5,"load_with","",""],[0,"GetnPixelMapusv","gl",""],[5,"is_loaded","gl::GetnPixelMapusv",""],[5,"load_with","",""],[0,"GetnPolygonStipple","gl",""],[5,"is_loaded","gl::GetnPolygonStipple",""],[5,"load_with","",""],[0,"GetnSeparableFilter","gl",""],[5,"is_loaded","gl::GetnSeparableFilter",""],[5,"load_with","",""],[0,"GetnTexImage","gl",""],[5,"is_loaded","gl::GetnTexImage",""],[5,"load_with","",""],[0,"GetnUniformdv","gl",""],[5,"is_loaded","gl::GetnUniformdv",""],[5,"load_with","",""],[0,"GetnUniformfv","gl",""],[5,"is_loaded","gl::GetnUniformfv",""],[5,"load_with","",""],[0,"GetnUniformiv","gl",""],[5,"is_loaded","gl::GetnUniformiv",""],[5,"load_with","",""],[0,"GetnUniformuiv","gl",""],[5,"is_loaded","gl::GetnUniformuiv",""],[5,"load_with","",""],[0,"Hint","gl",""],[5,"is_loaded","gl::Hint",""],[5,"load_with","",""],[0,"InvalidateBufferData","gl",""],[5,"is_loaded","gl::InvalidateBufferData",""],[5,"load_with","",""],[0,"InvalidateBufferSubData","gl",""],[5,"is_loaded","gl::InvalidateBufferSubData",""],[5,"load_with","",""],[0,"InvalidateFramebuffer","gl",""],[5,"is_loaded","gl::InvalidateFramebuffer",""],[5,"load_with","",""],[0,"InvalidateNamedFramebufferData","gl",""],[5,"is_loaded","gl::InvalidateNamedFramebufferData",""],[5,"load_with","",""],[0,"InvalidateNamedFramebufferSubData","gl",""],[5,"is_loaded","gl::InvalidateNamedFramebufferSubData",""],[5,"load_with","",""],[0,"InvalidateSubFramebuffer","gl",""],[5,"is_loaded","gl::InvalidateSubFramebuffer",""],[5,"load_with","",""],[0,"InvalidateTexImage","gl",""],[5,"is_loaded","gl::InvalidateTexImage",""],[5,"load_with","",""],[0,"InvalidateTexSubImage","gl",""],[5,"is_loaded","gl::InvalidateTexSubImage",""],[5,"load_with","",""],[0,"IsBuffer","gl",""],[5,"is_loaded","gl::IsBuffer",""],[5,"load_with","",""],[0,"IsEnabled","gl",""],[5,"is_loaded","gl::IsEnabled",""],[5,"load_with","",""],[0,"IsEnabledi","gl",""],[5,"is_loaded","gl::IsEnabledi",""],[5,"load_with","",""],[0,"IsFramebuffer","gl",""],[5,"is_loaded","gl::IsFramebuffer",""],[5,"load_with","",""],[0,"IsProgram","gl",""],[5,"is_loaded","gl::IsProgram",""],[5,"load_with","",""],[0,"IsProgramPipeline","gl",""],[5,"is_loaded","gl::IsProgramPipeline",""],[5,"load_with","",""],[0,"IsQuery","gl",""],[5,"is_loaded","gl::IsQuery",""],[5,"load_with","",""],[0,"IsRenderbuffer","gl",""],[5,"is_loaded","gl::IsRenderbuffer",""],[5,"load_with","",""],[0,"IsSampler","gl",""],[5,"is_loaded","gl::IsSampler",""],[5,"load_with","",""],[0,"IsShader","gl",""],[5,"is_loaded","gl::IsShader",""],[5,"load_with","",""],[0,"IsSync","gl",""],[5,"is_loaded","gl::IsSync",""],[5,"load_with","",""],[0,"IsTexture","gl",""],[5,"is_loaded","gl::IsTexture",""],[5,"load_with","",""],[0,"IsTransformFeedback","gl",""],[5,"is_loaded","gl::IsTransformFeedback",""],[5,"load_with","",""],[0,"IsVertexArray","gl",""],[5,"is_loaded","gl::IsVertexArray",""],[5,"load_with","",""],[0,"LineWidth","gl",""],[5,"is_loaded","gl::LineWidth",""],[5,"load_with","",""],[0,"LinkProgram","gl",""],[5,"is_loaded","gl::LinkProgram",""],[5,"load_with","",""],[0,"LogicOp","gl",""],[5,"is_loaded","gl::LogicOp",""],[5,"load_with","",""],[0,"MapBuffer","gl",""],[5,"is_loaded","gl::MapBuffer",""],[5,"load_with","",""],[0,"MapBufferRange","gl",""],[5,"is_loaded","gl::MapBufferRange",""],[5,"load_with","",""],[0,"MapNamedBuffer","gl",""],[5,"is_loaded","gl::MapNamedBuffer",""],[5,"load_with","",""],[0,"MapNamedBufferRange","gl",""],[5,"is_loaded","gl::MapNamedBufferRange",""],[5,"load_with","",""],[0,"MemoryBarrier","gl",""],[5,"is_loaded","gl::MemoryBarrier",""],[5,"load_with","",""],[0,"MemoryBarrierByRegion","gl",""],[5,"is_loaded","gl::MemoryBarrierByRegion",""],[5,"load_with","",""],[0,"MinSampleShading","gl",""],[5,"is_loaded","gl::MinSampleShading",""],[5,"load_with","",""],[0,"MultiDrawArrays","gl",""],[5,"is_loaded","gl::MultiDrawArrays",""],[5,"load_with","",""],[0,"MultiDrawArraysIndirect","gl",""],[5,"is_loaded","gl::MultiDrawArraysIndirect",""],[5,"load_with","",""],[0,"MultiDrawElements","gl",""],[5,"is_loaded","gl::MultiDrawElements",""],[5,"load_with","",""],[0,"MultiDrawElementsBaseVertex","gl",""],[5,"is_loaded","gl::MultiDrawElementsBaseVertex",""],[5,"load_with","",""],[0,"MultiDrawElementsIndirect","gl",""],[5,"is_loaded","gl::MultiDrawElementsIndirect",""],[5,"load_with","",""],[0,"MultiTexCoordP1ui","gl",""],[5,"is_loaded","gl::MultiTexCoordP1ui",""],[5,"load_with","",""],[0,"MultiTexCoordP1uiv","gl",""],[5,"is_loaded","gl::MultiTexCoordP1uiv",""],[5,"load_with","",""],[0,"MultiTexCoordP2ui","gl",""],[5,"is_loaded","gl::MultiTexCoordP2ui",""],[5,"load_with","",""],[0,"MultiTexCoordP2uiv","gl",""],[5,"is_loaded","gl::MultiTexCoordP2uiv",""],[5,"load_with","",""],[0,"MultiTexCoordP3ui","gl",""],[5,"is_loaded","gl::MultiTexCoordP3ui",""],[5,"load_with","",""],[0,"MultiTexCoordP3uiv","gl",""],[5,"is_loaded","gl::MultiTexCoordP3uiv",""],[5,"load_with","",""],[0,"MultiTexCoordP4ui","gl",""],[5,"is_loaded","gl::MultiTexCoordP4ui",""],[5,"load_with","",""],[0,"MultiTexCoordP4uiv","gl",""],[5,"is_loaded","gl::MultiTexCoordP4uiv",""],[5,"load_with","",""],[0,"NamedBufferData","gl",""],[5,"is_loaded","gl::NamedBufferData",""],[5,"load_with","",""],[0,"NamedBufferStorage","gl",""],[5,"is_loaded","gl::NamedBufferStorage",""],[5,"load_with","",""],[0,"NamedBufferSubData","gl",""],[5,"is_loaded","gl::NamedBufferSubData",""],[5,"load_with","",""],[0,"NamedFramebufferDrawBuffer","gl",""],[5,"is_loaded","gl::NamedFramebufferDrawBuffer",""],[5,"load_with","",""],[0,"NamedFramebufferDrawBuffers","gl",""],[5,"is_loaded","gl::NamedFramebufferDrawBuffers",""],[5,"load_with","",""],[0,"NamedFramebufferParameteri","gl",""],[5,"is_loaded","gl::NamedFramebufferParameteri",""],[5,"load_with","",""],[0,"NamedFramebufferReadBuffer","gl",""],[5,"is_loaded","gl::NamedFramebufferReadBuffer",""],[5,"load_with","",""],[0,"NamedFramebufferRenderbuffer","gl",""],[5,"is_loaded","gl::NamedFramebufferRenderbuffer",""],[5,"load_with","",""],[0,"NamedFramebufferTexture","gl",""],[5,"is_loaded","gl::NamedFramebufferTexture",""],[5,"load_with","",""],[0,"NamedFramebufferTextureLayer","gl",""],[5,"is_loaded","gl::NamedFramebufferTextureLayer",""],[5,"load_with","",""],[0,"NamedRenderbufferStorage","gl",""],[5,"is_loaded","gl::NamedRenderbufferStorage",""],[5,"load_with","",""],[0,"NamedRenderbufferStorageMultisample","gl",""],[5,"is_loaded","gl::NamedRenderbufferStorageMultisample",""],[5,"load_with","",""],[0,"NormalP3ui","gl",""],[5,"is_loaded","gl::NormalP3ui",""],[5,"load_with","",""],[0,"NormalP3uiv","gl",""],[5,"is_loaded","gl::NormalP3uiv",""],[5,"load_with","",""],[0,"ObjectLabel","gl",""],[5,"is_loaded","gl::ObjectLabel",""],[5,"load_with","",""],[0,"ObjectPtrLabel","gl",""],[5,"is_loaded","gl::ObjectPtrLabel",""],[5,"load_with","",""],[0,"PatchParameterfv","gl",""],[5,"is_loaded","gl::PatchParameterfv",""],[5,"load_with","",""],[0,"PatchParameteri","gl",""],[5,"is_loaded","gl::PatchParameteri",""],[5,"load_with","",""],[0,"PauseTransformFeedback","gl",""],[5,"is_loaded","gl::PauseTransformFeedback",""],[5,"load_with","",""],[0,"PixelStoref","gl",""],[5,"is_loaded","gl::PixelStoref",""],[5,"load_with","",""],[0,"PixelStorei","gl",""],[5,"is_loaded","gl::PixelStorei",""],[5,"load_with","",""],[0,"PointParameterf","gl",""],[5,"is_loaded","gl::PointParameterf",""],[5,"load_with","",""],[0,"PointParameterfv","gl",""],[5,"is_loaded","gl::PointParameterfv",""],[5,"load_with","",""],[0,"PointParameteri","gl",""],[5,"is_loaded","gl::PointParameteri",""],[5,"load_with","",""],[0,"PointParameteriv","gl",""],[5,"is_loaded","gl::PointParameteriv",""],[5,"load_with","",""],[0,"PointSize","gl",""],[5,"is_loaded","gl::PointSize",""],[5,"load_with","",""],[0,"PolygonMode","gl",""],[5,"is_loaded","gl::PolygonMode",""],[5,"load_with","",""],[0,"PolygonOffset","gl",""],[5,"is_loaded","gl::PolygonOffset",""],[5,"load_with","",""],[0,"PopDebugGroup","gl",""],[5,"is_loaded","gl::PopDebugGroup",""],[5,"load_with","",""],[0,"PrimitiveRestartIndex","gl",""],[5,"is_loaded","gl::PrimitiveRestartIndex",""],[5,"load_with","",""],[0,"ProgramBinary","gl",""],[5,"is_loaded","gl::ProgramBinary",""],[5,"load_with","",""],[0,"ProgramParameteri","gl",""],[5,"is_loaded","gl::ProgramParameteri",""],[5,"load_with","",""],[0,"ProgramUniform1d","gl",""],[5,"is_loaded","gl::ProgramUniform1d",""],[5,"load_with","",""],[0,"ProgramUniform1dv","gl",""],[5,"is_loaded","gl::ProgramUniform1dv",""],[5,"load_with","",""],[0,"ProgramUniform1f","gl",""],[5,"is_loaded","gl::ProgramUniform1f",""],[5,"load_with","",""],[0,"ProgramUniform1fv","gl",""],[5,"is_loaded","gl::ProgramUniform1fv",""],[5,"load_with","",""],[0,"ProgramUniform1i","gl",""],[5,"is_loaded","gl::ProgramUniform1i",""],[5,"load_with","",""],[0,"ProgramUniform1iv","gl",""],[5,"is_loaded","gl::ProgramUniform1iv",""],[5,"load_with","",""],[0,"ProgramUniform1ui","gl",""],[5,"is_loaded","gl::ProgramUniform1ui",""],[5,"load_with","",""],[0,"ProgramUniform1uiv","gl",""],[5,"is_loaded","gl::ProgramUniform1uiv",""],[5,"load_with","",""],[0,"ProgramUniform2d","gl",""],[5,"is_loaded","gl::ProgramUniform2d",""],[5,"load_with","",""],[0,"ProgramUniform2dv","gl",""],[5,"is_loaded","gl::ProgramUniform2dv",""],[5,"load_with","",""],[0,"ProgramUniform2f","gl",""],[5,"is_loaded","gl::ProgramUniform2f",""],[5,"load_with","",""],[0,"ProgramUniform2fv","gl",""],[5,"is_loaded","gl::ProgramUniform2fv",""],[5,"load_with","",""],[0,"ProgramUniform2i","gl",""],[5,"is_loaded","gl::ProgramUniform2i",""],[5,"load_with","",""],[0,"ProgramUniform2iv","gl",""],[5,"is_loaded","gl::ProgramUniform2iv",""],[5,"load_with","",""],[0,"ProgramUniform2ui","gl",""],[5,"is_loaded","gl::ProgramUniform2ui",""],[5,"load_with","",""],[0,"ProgramUniform2uiv","gl",""],[5,"is_loaded","gl::ProgramUniform2uiv",""],[5,"load_with","",""],[0,"ProgramUniform3d","gl",""],[5,"is_loaded","gl::ProgramUniform3d",""],[5,"load_with","",""],[0,"ProgramUniform3dv","gl",""],[5,"is_loaded","gl::ProgramUniform3dv",""],[5,"load_with","",""],[0,"ProgramUniform3f","gl",""],[5,"is_loaded","gl::ProgramUniform3f",""],[5,"load_with","",""],[0,"ProgramUniform3fv","gl",""],[5,"is_loaded","gl::ProgramUniform3fv",""],[5,"load_with","",""],[0,"ProgramUniform3i","gl",""],[5,"is_loaded","gl::ProgramUniform3i",""],[5,"load_with","",""],[0,"ProgramUniform3iv","gl",""],[5,"is_loaded","gl::ProgramUniform3iv",""],[5,"load_with","",""],[0,"ProgramUniform3ui","gl",""],[5,"is_loaded","gl::ProgramUniform3ui",""],[5,"load_with","",""],[0,"ProgramUniform3uiv","gl",""],[5,"is_loaded","gl::ProgramUniform3uiv",""],[5,"load_with","",""],[0,"ProgramUniform4d","gl",""],[5,"is_loaded","gl::ProgramUniform4d",""],[5,"load_with","",""],[0,"ProgramUniform4dv","gl",""],[5,"is_loaded","gl::ProgramUniform4dv",""],[5,"load_with","",""],[0,"ProgramUniform4f","gl",""],[5,"is_loaded","gl::ProgramUniform4f",""],[5,"load_with","",""],[0,"ProgramUniform4fv","gl",""],[5,"is_loaded","gl::ProgramUniform4fv",""],[5,"load_with","",""],[0,"ProgramUniform4i","gl",""],[5,"is_loaded","gl::ProgramUniform4i",""],[5,"load_with","",""],[0,"ProgramUniform4iv","gl",""],[5,"is_loaded","gl::ProgramUniform4iv",""],[5,"load_with","",""],[0,"ProgramUniform4ui","gl",""],[5,"is_loaded","gl::ProgramUniform4ui",""],[5,"load_with","",""],[0,"ProgramUniform4uiv","gl",""],[5,"is_loaded","gl::ProgramUniform4uiv",""],[5,"load_with","",""],[0,"ProgramUniformMatrix2dv","gl",""],[5,"is_loaded","gl::ProgramUniformMatrix2dv",""],[5,"load_with","",""],[0,"ProgramUniformMatrix2fv","gl",""],[5,"is_loaded","gl::ProgramUniformMatrix2fv",""],[5,"load_with","",""],[0,"ProgramUniformMatrix2x3dv","gl",""],[5,"is_loaded","gl::ProgramUniformMatrix2x3dv",""],[5,"load_with","",""],[0,"ProgramUniformMatrix2x3fv","gl",""],[5,"is_loaded","gl::ProgramUniformMatrix2x3fv",""],[5,"load_with","",""],[0,"ProgramUniformMatrix2x4dv","gl",""],[5,"is_loaded","gl::ProgramUniformMatrix2x4dv",""],[5,"load_with","",""],[0,"ProgramUniformMatrix2x4fv","gl",""],[5,"is_loaded","gl::ProgramUniformMatrix2x4fv",""],[5,"load_with","",""],[0,"ProgramUniformMatrix3dv","gl",""],[5,"is_loaded","gl::ProgramUniformMatrix3dv",""],[5,"load_with","",""],[0,"ProgramUniformMatrix3fv","gl",""],[5,"is_loaded","gl::ProgramUniformMatrix3fv",""],[5,"load_with","",""],[0,"ProgramUniformMatrix3x2dv","gl",""],[5,"is_loaded","gl::ProgramUniformMatrix3x2dv",""],[5,"load_with","",""],[0,"ProgramUniformMatrix3x2fv","gl",""],[5,"is_loaded","gl::ProgramUniformMatrix3x2fv",""],[5,"load_with","",""],[0,"ProgramUniformMatrix3x4dv","gl",""],[5,"is_loaded","gl::ProgramUniformMatrix3x4dv",""],[5,"load_with","",""],[0,"ProgramUniformMatrix3x4fv","gl",""],[5,"is_loaded","gl::ProgramUniformMatrix3x4fv",""],[5,"load_with","",""],[0,"ProgramUniformMatrix4dv","gl",""],[5,"is_loaded","gl::ProgramUniformMatrix4dv",""],[5,"load_with","",""],[0,"ProgramUniformMatrix4fv","gl",""],[5,"is_loaded","gl::ProgramUniformMatrix4fv",""],[5,"load_with","",""],[0,"ProgramUniformMatrix4x2dv","gl",""],[5,"is_loaded","gl::ProgramUniformMatrix4x2dv",""],[5,"load_with","",""],[0,"ProgramUniformMatrix4x2fv","gl",""],[5,"is_loaded","gl::ProgramUniformMatrix4x2fv",""],[5,"load_with","",""],[0,"ProgramUniformMatrix4x3dv","gl",""],[5,"is_loaded","gl::ProgramUniformMatrix4x3dv",""],[5,"load_with","",""],[0,"ProgramUniformMatrix4x3fv","gl",""],[5,"is_loaded","gl::ProgramUniformMatrix4x3fv",""],[5,"load_with","",""],[0,"ProvokingVertex","gl",""],[5,"is_loaded","gl::ProvokingVertex",""],[5,"load_with","",""],[0,"PushDebugGroup","gl",""],[5,"is_loaded","gl::PushDebugGroup",""],[5,"load_with","",""],[0,"QueryCounter","gl",""],[5,"is_loaded","gl::QueryCounter",""],[5,"load_with","",""],[0,"ReadBuffer","gl",""],[5,"is_loaded","gl::ReadBuffer",""],[5,"load_with","",""],[0,"ReadPixels","gl",""],[5,"is_loaded","gl::ReadPixels",""],[5,"load_with","",""],[0,"ReadnPixels","gl",""],[5,"is_loaded","gl::ReadnPixels",""],[5,"load_with","",""],[0,"ReleaseShaderCompiler","gl",""],[5,"is_loaded","gl::ReleaseShaderCompiler",""],[5,"load_with","",""],[0,"RenderbufferStorage","gl",""],[5,"is_loaded","gl::RenderbufferStorage",""],[5,"load_with","",""],[0,"RenderbufferStorageMultisample","gl",""],[5,"is_loaded","gl::RenderbufferStorageMultisample",""],[5,"load_with","",""],[0,"ResumeTransformFeedback","gl",""],[5,"is_loaded","gl::ResumeTransformFeedback",""],[5,"load_with","",""],[0,"SampleCoverage","gl",""],[5,"is_loaded","gl::SampleCoverage",""],[5,"load_with","",""],[0,"SampleMaski","gl",""],[5,"is_loaded","gl::SampleMaski",""],[5,"load_with","",""],[0,"SamplerParameterIiv","gl",""],[5,"is_loaded","gl::SamplerParameterIiv",""],[5,"load_with","",""],[0,"SamplerParameterIuiv","gl",""],[5,"is_loaded","gl::SamplerParameterIuiv",""],[5,"load_with","",""],[0,"SamplerParameterf","gl",""],[5,"is_loaded","gl::SamplerParameterf",""],[5,"load_with","",""],[0,"SamplerParameterfv","gl",""],[5,"is_loaded","gl::SamplerParameterfv",""],[5,"load_with","",""],[0,"SamplerParameteri","gl",""],[5,"is_loaded","gl::SamplerParameteri",""],[5,"load_with","",""],[0,"SamplerParameteriv","gl",""],[5,"is_loaded","gl::SamplerParameteriv",""],[5,"load_with","",""],[0,"Scissor","gl",""],[5,"is_loaded","gl::Scissor",""],[5,"load_with","",""],[0,"ScissorArrayv","gl",""],[5,"is_loaded","gl::ScissorArrayv",""],[5,"load_with","",""],[0,"ScissorIndexed","gl",""],[5,"is_loaded","gl::ScissorIndexed",""],[5,"load_with","",""],[0,"ScissorIndexedv","gl",""],[5,"is_loaded","gl::ScissorIndexedv",""],[5,"load_with","",""],[0,"SecondaryColorP3ui","gl",""],[5,"is_loaded","gl::SecondaryColorP3ui",""],[5,"load_with","",""],[0,"SecondaryColorP3uiv","gl",""],[5,"is_loaded","gl::SecondaryColorP3uiv",""],[5,"load_with","",""],[0,"ShaderBinary","gl",""],[5,"is_loaded","gl::ShaderBinary",""],[5,"load_with","",""],[0,"ShaderSource","gl",""],[5,"is_loaded","gl::ShaderSource",""],[5,"load_with","",""],[0,"ShaderStorageBlockBinding","gl",""],[5,"is_loaded","gl::ShaderStorageBlockBinding",""],[5,"load_with","",""],[0,"StencilFunc","gl",""],[5,"is_loaded","gl::StencilFunc",""],[5,"load_with","",""],[0,"StencilFuncSeparate","gl",""],[5,"is_loaded","gl::StencilFuncSeparate",""],[5,"load_with","",""],[0,"StencilMask","gl",""],[5,"is_loaded","gl::StencilMask",""],[5,"load_with","",""],[0,"StencilMaskSeparate","gl",""],[5,"is_loaded","gl::StencilMaskSeparate",""],[5,"load_with","",""],[0,"StencilOp","gl",""],[5,"is_loaded","gl::StencilOp",""],[5,"load_with","",""],[0,"StencilOpSeparate","gl",""],[5,"is_loaded","gl::StencilOpSeparate",""],[5,"load_with","",""],[0,"TexBuffer","gl",""],[5,"is_loaded","gl::TexBuffer",""],[5,"load_with","",""],[0,"TexBufferRange","gl",""],[5,"is_loaded","gl::TexBufferRange",""],[5,"load_with","",""],[0,"TexCoordP1ui","gl",""],[5,"is_loaded","gl::TexCoordP1ui",""],[5,"load_with","",""],[0,"TexCoordP1uiv","gl",""],[5,"is_loaded","gl::TexCoordP1uiv",""],[5,"load_with","",""],[0,"TexCoordP2ui","gl",""],[5,"is_loaded","gl::TexCoordP2ui",""],[5,"load_with","",""],[0,"TexCoordP2uiv","gl",""],[5,"is_loaded","gl::TexCoordP2uiv",""],[5,"load_with","",""],[0,"TexCoordP3ui","gl",""],[5,"is_loaded","gl::TexCoordP3ui",""],[5,"load_with","",""],[0,"TexCoordP3uiv","gl",""],[5,"is_loaded","gl::TexCoordP3uiv",""],[5,"load_with","",""],[0,"TexCoordP4ui","gl",""],[5,"is_loaded","gl::TexCoordP4ui",""],[5,"load_with","",""],[0,"TexCoordP4uiv","gl",""],[5,"is_loaded","gl::TexCoordP4uiv",""],[5,"load_with","",""],[0,"TexImage1D","gl",""],[5,"is_loaded","gl::TexImage1D",""],[5,"load_with","",""],[0,"TexImage2D","gl",""],[5,"is_loaded","gl::TexImage2D",""],[5,"load_with","",""],[0,"TexImage2DMultisample","gl",""],[5,"is_loaded","gl::TexImage2DMultisample",""],[5,"load_with","",""],[0,"TexImage3D","gl",""],[5,"is_loaded","gl::TexImage3D",""],[5,"load_with","",""],[0,"TexImage3DMultisample","gl",""],[5,"is_loaded","gl::TexImage3DMultisample",""],[5,"load_with","",""],[0,"TexParameterIiv","gl",""],[5,"is_loaded","gl::TexParameterIiv",""],[5,"load_with","",""],[0,"TexParameterIuiv","gl",""],[5,"is_loaded","gl::TexParameterIuiv",""],[5,"load_with","",""],[0,"TexParameterf","gl",""],[5,"is_loaded","gl::TexParameterf",""],[5,"load_with","",""],[0,"TexParameterfv","gl",""],[5,"is_loaded","gl::TexParameterfv",""],[5,"load_with","",""],[0,"TexParameteri","gl",""],[5,"is_loaded","gl::TexParameteri",""],[5,"load_with","",""],[0,"TexParameteriv","gl",""],[5,"is_loaded","gl::TexParameteriv",""],[5,"load_with","",""],[0,"TexStorage1D","gl",""],[5,"is_loaded","gl::TexStorage1D",""],[5,"load_with","",""],[0,"TexStorage2D","gl",""],[5,"is_loaded","gl::TexStorage2D",""],[5,"load_with","",""],[0,"TexStorage2DMultisample","gl",""],[5,"is_loaded","gl::TexStorage2DMultisample",""],[5,"load_with","",""],[0,"TexStorage3D","gl",""],[5,"is_loaded","gl::TexStorage3D",""],[5,"load_with","",""],[0,"TexStorage3DMultisample","gl",""],[5,"is_loaded","gl::TexStorage3DMultisample",""],[5,"load_with","",""],[0,"TexSubImage1D","gl",""],[5,"is_loaded","gl::TexSubImage1D",""],[5,"load_with","",""],[0,"TexSubImage2D","gl",""],[5,"is_loaded","gl::TexSubImage2D",""],[5,"load_with","",""],[0,"TexSubImage3D","gl",""],[5,"is_loaded","gl::TexSubImage3D",""],[5,"load_with","",""],[0,"TextureBarrier","gl",""],[5,"is_loaded","gl::TextureBarrier",""],[5,"load_with","",""],[0,"TextureBuffer","gl",""],[5,"is_loaded","gl::TextureBuffer",""],[5,"load_with","",""],[0,"TextureBufferRange","gl",""],[5,"is_loaded","gl::TextureBufferRange",""],[5,"load_with","",""],[0,"TextureParameterIiv","gl",""],[5,"is_loaded","gl::TextureParameterIiv",""],[5,"load_with","",""],[0,"TextureParameterIuiv","gl",""],[5,"is_loaded","gl::TextureParameterIuiv",""],[5,"load_with","",""],[0,"TextureParameterf","gl",""],[5,"is_loaded","gl::TextureParameterf",""],[5,"load_with","",""],[0,"TextureParameterfv","gl",""],[5,"is_loaded","gl::TextureParameterfv",""],[5,"load_with","",""],[0,"TextureParameteri","gl",""],[5,"is_loaded","gl::TextureParameteri",""],[5,"load_with","",""],[0,"TextureParameteriv","gl",""],[5,"is_loaded","gl::TextureParameteriv",""],[5,"load_with","",""],[0,"TextureStorage1D","gl",""],[5,"is_loaded","gl::TextureStorage1D",""],[5,"load_with","",""],[0,"TextureStorage2D","gl",""],[5,"is_loaded","gl::TextureStorage2D",""],[5,"load_with","",""],[0,"TextureStorage2DMultisample","gl",""],[5,"is_loaded","gl::TextureStorage2DMultisample",""],[5,"load_with","",""],[0,"TextureStorage3D","gl",""],[5,"is_loaded","gl::TextureStorage3D",""],[5,"load_with","",""],[0,"TextureStorage3DMultisample","gl",""],[5,"is_loaded","gl::TextureStorage3DMultisample",""],[5,"load_with","",""],[0,"TextureSubImage1D","gl",""],[5,"is_loaded","gl::TextureSubImage1D",""],[5,"load_with","",""],[0,"TextureSubImage2D","gl",""],[5,"is_loaded","gl::TextureSubImage2D",""],[5,"load_with","",""],[0,"TextureSubImage3D","gl",""],[5,"is_loaded","gl::TextureSubImage3D",""],[5,"load_with","",""],[0,"TextureView","gl",""],[5,"is_loaded","gl::TextureView",""],[5,"load_with","",""],[0,"TransformFeedbackBufferBase","gl",""],[5,"is_loaded","gl::TransformFeedbackBufferBase",""],[5,"load_with","",""],[0,"TransformFeedbackBufferRange","gl",""],[5,"is_loaded","gl::TransformFeedbackBufferRange",""],[5,"load_with","",""],[0,"TransformFeedbackVaryings","gl",""],[5,"is_loaded","gl::TransformFeedbackVaryings",""],[5,"load_with","",""],[0,"Uniform1d","gl",""],[5,"is_loaded","gl::Uniform1d",""],[5,"load_with","",""],[0,"Uniform1dv","gl",""],[5,"is_loaded","gl::Uniform1dv",""],[5,"load_with","",""],[0,"Uniform1f","gl",""],[5,"is_loaded","gl::Uniform1f",""],[5,"load_with","",""],[0,"Uniform1fv","gl",""],[5,"is_loaded","gl::Uniform1fv",""],[5,"load_with","",""],[0,"Uniform1i","gl",""],[5,"is_loaded","gl::Uniform1i",""],[5,"load_with","",""],[0,"Uniform1iv","gl",""],[5,"is_loaded","gl::Uniform1iv",""],[5,"load_with","",""],[0,"Uniform1ui","gl",""],[5,"is_loaded","gl::Uniform1ui",""],[5,"load_with","",""],[0,"Uniform1uiv","gl",""],[5,"is_loaded","gl::Uniform1uiv",""],[5,"load_with","",""],[0,"Uniform2d","gl",""],[5,"is_loaded","gl::Uniform2d",""],[5,"load_with","",""],[0,"Uniform2dv","gl",""],[5,"is_loaded","gl::Uniform2dv",""],[5,"load_with","",""],[0,"Uniform2f","gl",""],[5,"is_loaded","gl::Uniform2f",""],[5,"load_with","",""],[0,"Uniform2fv","gl",""],[5,"is_loaded","gl::Uniform2fv",""],[5,"load_with","",""],[0,"Uniform2i","gl",""],[5,"is_loaded","gl::Uniform2i",""],[5,"load_with","",""],[0,"Uniform2iv","gl",""],[5,"is_loaded","gl::Uniform2iv",""],[5,"load_with","",""],[0,"Uniform2ui","gl",""],[5,"is_loaded","gl::Uniform2ui",""],[5,"load_with","",""],[0,"Uniform2uiv","gl",""],[5,"is_loaded","gl::Uniform2uiv",""],[5,"load_with","",""],[0,"Uniform3d","gl",""],[5,"is_loaded","gl::Uniform3d",""],[5,"load_with","",""],[0,"Uniform3dv","gl",""],[5,"is_loaded","gl::Uniform3dv",""],[5,"load_with","",""],[0,"Uniform3f","gl",""],[5,"is_loaded","gl::Uniform3f",""],[5,"load_with","",""],[0,"Uniform3fv","gl",""],[5,"is_loaded","gl::Uniform3fv",""],[5,"load_with","",""],[0,"Uniform3i","gl",""],[5,"is_loaded","gl::Uniform3i",""],[5,"load_with","",""],[0,"Uniform3iv","gl",""],[5,"is_loaded","gl::Uniform3iv",""],[5,"load_with","",""],[0,"Uniform3ui","gl",""],[5,"is_loaded","gl::Uniform3ui",""],[5,"load_with","",""],[0,"Uniform3uiv","gl",""],[5,"is_loaded","gl::Uniform3uiv",""],[5,"load_with","",""],[0,"Uniform4d","gl",""],[5,"is_loaded","gl::Uniform4d",""],[5,"load_with","",""],[0,"Uniform4dv","gl",""],[5,"is_loaded","gl::Uniform4dv",""],[5,"load_with","",""],[0,"Uniform4f","gl",""],[5,"is_loaded","gl::Uniform4f",""],[5,"load_with","",""],[0,"Uniform4fv","gl",""],[5,"is_loaded","gl::Uniform4fv",""],[5,"load_with","",""],[0,"Uniform4i","gl",""],[5,"is_loaded","gl::Uniform4i",""],[5,"load_with","",""],[0,"Uniform4iv","gl",""],[5,"is_loaded","gl::Uniform4iv",""],[5,"load_with","",""],[0,"Uniform4ui","gl",""],[5,"is_loaded","gl::Uniform4ui",""],[5,"load_with","",""],[0,"Uniform4uiv","gl",""],[5,"is_loaded","gl::Uniform4uiv",""],[5,"load_with","",""],[0,"UniformBlockBinding","gl",""],[5,"is_loaded","gl::UniformBlockBinding",""],[5,"load_with","",""],[0,"UniformMatrix2dv","gl",""],[5,"is_loaded","gl::UniformMatrix2dv",""],[5,"load_with","",""],[0,"UniformMatrix2fv","gl",""],[5,"is_loaded","gl::UniformMatrix2fv",""],[5,"load_with","",""],[0,"UniformMatrix2x3dv","gl",""],[5,"is_loaded","gl::UniformMatrix2x3dv",""],[5,"load_with","",""],[0,"UniformMatrix2x3fv","gl",""],[5,"is_loaded","gl::UniformMatrix2x3fv",""],[5,"load_with","",""],[0,"UniformMatrix2x4dv","gl",""],[5,"is_loaded","gl::UniformMatrix2x4dv",""],[5,"load_with","",""],[0,"UniformMatrix2x4fv","gl",""],[5,"is_loaded","gl::UniformMatrix2x4fv",""],[5,"load_with","",""],[0,"UniformMatrix3dv","gl",""],[5,"is_loaded","gl::UniformMatrix3dv",""],[5,"load_with","",""],[0,"UniformMatrix3fv","gl",""],[5,"is_loaded","gl::UniformMatrix3fv",""],[5,"load_with","",""],[0,"UniformMatrix3x2dv","gl",""],[5,"is_loaded","gl::UniformMatrix3x2dv",""],[5,"load_with","",""],[0,"UniformMatrix3x2fv","gl",""],[5,"is_loaded","gl::UniformMatrix3x2fv",""],[5,"load_with","",""],[0,"UniformMatrix3x4dv","gl",""],[5,"is_loaded","gl::UniformMatrix3x4dv",""],[5,"load_with","",""],[0,"UniformMatrix3x4fv","gl",""],[5,"is_loaded","gl::UniformMatrix3x4fv",""],[5,"load_with","",""],[0,"UniformMatrix4dv","gl",""],[5,"is_loaded","gl::UniformMatrix4dv",""],[5,"load_with","",""],[0,"UniformMatrix4fv","gl",""],[5,"is_loaded","gl::UniformMatrix4fv",""],[5,"load_with","",""],[0,"UniformMatrix4x2dv","gl",""],[5,"is_loaded","gl::UniformMatrix4x2dv",""],[5,"load_with","",""],[0,"UniformMatrix4x2fv","gl",""],[5,"is_loaded","gl::UniformMatrix4x2fv",""],[5,"load_with","",""],[0,"UniformMatrix4x3dv","gl",""],[5,"is_loaded","gl::UniformMatrix4x3dv",""],[5,"load_with","",""],[0,"UniformMatrix4x3fv","gl",""],[5,"is_loaded","gl::UniformMatrix4x3fv",""],[5,"load_with","",""],[0,"UniformSubroutinesuiv","gl",""],[5,"is_loaded","gl::UniformSubroutinesuiv",""],[5,"load_with","",""],[0,"UnmapBuffer","gl",""],[5,"is_loaded","gl::UnmapBuffer",""],[5,"load_with","",""],[0,"UnmapNamedBuffer","gl",""],[5,"is_loaded","gl::UnmapNamedBuffer",""],[5,"load_with","",""],[0,"UseProgram","gl",""],[5,"is_loaded","gl::UseProgram",""],[5,"load_with","",""],[0,"UseProgramStages","gl",""],[5,"is_loaded","gl::UseProgramStages",""],[5,"load_with","",""],[0,"ValidateProgram","gl",""],[5,"is_loaded","gl::ValidateProgram",""],[5,"load_with","",""],[0,"ValidateProgramPipeline","gl",""],[5,"is_loaded","gl::ValidateProgramPipeline",""],[5,"load_with","",""],[0,"VertexArrayAttribBinding","gl",""],[5,"is_loaded","gl::VertexArrayAttribBinding",""],[5,"load_with","",""],[0,"VertexArrayAttribFormat","gl",""],[5,"is_loaded","gl::VertexArrayAttribFormat",""],[5,"load_with","",""],[0,"VertexArrayAttribIFormat","gl",""],[5,"is_loaded","gl::VertexArrayAttribIFormat",""],[5,"load_with","",""],[0,"VertexArrayAttribLFormat","gl",""],[5,"is_loaded","gl::VertexArrayAttribLFormat",""],[5,"load_with","",""],[0,"VertexArrayBindingDivisor","gl",""],[5,"is_loaded","gl::VertexArrayBindingDivisor",""],[5,"load_with","",""],[0,"VertexArrayElementBuffer","gl",""],[5,"is_loaded","gl::VertexArrayElementBuffer",""],[5,"load_with","",""],[0,"VertexArrayVertexBuffer","gl",""],[5,"is_loaded","gl::VertexArrayVertexBuffer",""],[5,"load_with","",""],[0,"VertexArrayVertexBuffers","gl",""],[5,"is_loaded","gl::VertexArrayVertexBuffers",""],[5,"load_with","",""],[0,"VertexAttrib1d","gl",""],[5,"is_loaded","gl::VertexAttrib1d",""],[5,"load_with","",""],[0,"VertexAttrib1dv","gl",""],[5,"is_loaded","gl::VertexAttrib1dv",""],[5,"load_with","",""],[0,"VertexAttrib1f","gl",""],[5,"is_loaded","gl::VertexAttrib1f",""],[5,"load_with","",""],[0,"VertexAttrib1fv","gl",""],[5,"is_loaded","gl::VertexAttrib1fv",""],[5,"load_with","",""],[0,"VertexAttrib1s","gl",""],[5,"is_loaded","gl::VertexAttrib1s",""],[5,"load_with","",""],[0,"VertexAttrib1sv","gl",""],[5,"is_loaded","gl::VertexAttrib1sv",""],[5,"load_with","",""],[0,"VertexAttrib2d","gl",""],[5,"is_loaded","gl::VertexAttrib2d",""],[5,"load_with","",""],[0,"VertexAttrib2dv","gl",""],[5,"is_loaded","gl::VertexAttrib2dv",""],[5,"load_with","",""],[0,"VertexAttrib2f","gl",""],[5,"is_loaded","gl::VertexAttrib2f",""],[5,"load_with","",""],[0,"VertexAttrib2fv","gl",""],[5,"is_loaded","gl::VertexAttrib2fv",""],[5,"load_with","",""],[0,"VertexAttrib2s","gl",""],[5,"is_loaded","gl::VertexAttrib2s",""],[5,"load_with","",""],[0,"VertexAttrib2sv","gl",""],[5,"is_loaded","gl::VertexAttrib2sv",""],[5,"load_with","",""],[0,"VertexAttrib3d","gl",""],[5,"is_loaded","gl::VertexAttrib3d",""],[5,"load_with","",""],[0,"VertexAttrib3dv","gl",""],[5,"is_loaded","gl::VertexAttrib3dv",""],[5,"load_with","",""],[0,"VertexAttrib3f","gl",""],[5,"is_loaded","gl::VertexAttrib3f",""],[5,"load_with","",""],[0,"VertexAttrib3fv","gl",""],[5,"is_loaded","gl::VertexAttrib3fv",""],[5,"load_with","",""],[0,"VertexAttrib3s","gl",""],[5,"is_loaded","gl::VertexAttrib3s",""],[5,"load_with","",""],[0,"VertexAttrib3sv","gl",""],[5,"is_loaded","gl::VertexAttrib3sv",""],[5,"load_with","",""],[0,"VertexAttrib4Nbv","gl",""],[5,"is_loaded","gl::VertexAttrib4Nbv",""],[5,"load_with","",""],[0,"VertexAttrib4Niv","gl",""],[5,"is_loaded","gl::VertexAttrib4Niv",""],[5,"load_with","",""],[0,"VertexAttrib4Nsv","gl",""],[5,"is_loaded","gl::VertexAttrib4Nsv",""],[5,"load_with","",""],[0,"VertexAttrib4Nub","gl",""],[5,"is_loaded","gl::VertexAttrib4Nub",""],[5,"load_with","",""],[0,"VertexAttrib4Nubv","gl",""],[5,"is_loaded","gl::VertexAttrib4Nubv",""],[5,"load_with","",""],[0,"VertexAttrib4Nuiv","gl",""],[5,"is_loaded","gl::VertexAttrib4Nuiv",""],[5,"load_with","",""],[0,"VertexAttrib4Nusv","gl",""],[5,"is_loaded","gl::VertexAttrib4Nusv",""],[5,"load_with","",""],[0,"VertexAttrib4bv","gl",""],[5,"is_loaded","gl::VertexAttrib4bv",""],[5,"load_with","",""],[0,"VertexAttrib4d","gl",""],[5,"is_loaded","gl::VertexAttrib4d",""],[5,"load_with","",""],[0,"VertexAttrib4dv","gl",""],[5,"is_loaded","gl::VertexAttrib4dv",""],[5,"load_with","",""],[0,"VertexAttrib4f","gl",""],[5,"is_loaded","gl::VertexAttrib4f",""],[5,"load_with","",""],[0,"VertexAttrib4fv","gl",""],[5,"is_loaded","gl::VertexAttrib4fv",""],[5,"load_with","",""],[0,"VertexAttrib4iv","gl",""],[5,"is_loaded","gl::VertexAttrib4iv",""],[5,"load_with","",""],[0,"VertexAttrib4s","gl",""],[5,"is_loaded","gl::VertexAttrib4s",""],[5,"load_with","",""],[0,"VertexAttrib4sv","gl",""],[5,"is_loaded","gl::VertexAttrib4sv",""],[5,"load_with","",""],[0,"VertexAttrib4ubv","gl",""],[5,"is_loaded","gl::VertexAttrib4ubv",""],[5,"load_with","",""],[0,"VertexAttrib4uiv","gl",""],[5,"is_loaded","gl::VertexAttrib4uiv",""],[5,"load_with","",""],[0,"VertexAttrib4usv","gl",""],[5,"is_loaded","gl::VertexAttrib4usv",""],[5,"load_with","",""],[0,"VertexAttribBinding","gl",""],[5,"is_loaded","gl::VertexAttribBinding",""],[5,"load_with","",""],[0,"VertexAttribDivisor","gl",""],[5,"is_loaded","gl::VertexAttribDivisor",""],[5,"load_with","",""],[0,"VertexAttribFormat","gl",""],[5,"is_loaded","gl::VertexAttribFormat",""],[5,"load_with","",""],[0,"VertexAttribI1i","gl",""],[5,"is_loaded","gl::VertexAttribI1i",""],[5,"load_with","",""],[0,"VertexAttribI1iv","gl",""],[5,"is_loaded","gl::VertexAttribI1iv",""],[5,"load_with","",""],[0,"VertexAttribI1ui","gl",""],[5,"is_loaded","gl::VertexAttribI1ui",""],[5,"load_with","",""],[0,"VertexAttribI1uiv","gl",""],[5,"is_loaded","gl::VertexAttribI1uiv",""],[5,"load_with","",""],[0,"VertexAttribI2i","gl",""],[5,"is_loaded","gl::VertexAttribI2i",""],[5,"load_with","",""],[0,"VertexAttribI2iv","gl",""],[5,"is_loaded","gl::VertexAttribI2iv",""],[5,"load_with","",""],[0,"VertexAttribI2ui","gl",""],[5,"is_loaded","gl::VertexAttribI2ui",""],[5,"load_with","",""],[0,"VertexAttribI2uiv","gl",""],[5,"is_loaded","gl::VertexAttribI2uiv",""],[5,"load_with","",""],[0,"VertexAttribI3i","gl",""],[5,"is_loaded","gl::VertexAttribI3i",""],[5,"load_with","",""],[0,"VertexAttribI3iv","gl",""],[5,"is_loaded","gl::VertexAttribI3iv",""],[5,"load_with","",""],[0,"VertexAttribI3ui","gl",""],[5,"is_loaded","gl::VertexAttribI3ui",""],[5,"load_with","",""],[0,"VertexAttribI3uiv","gl",""],[5,"is_loaded","gl::VertexAttribI3uiv",""],[5,"load_with","",""],[0,"VertexAttribI4bv","gl",""],[5,"is_loaded","gl::VertexAttribI4bv",""],[5,"load_with","",""],[0,"VertexAttribI4i","gl",""],[5,"is_loaded","gl::VertexAttribI4i",""],[5,"load_with","",""],[0,"VertexAttribI4iv","gl",""],[5,"is_loaded","gl::VertexAttribI4iv",""],[5,"load_with","",""],[0,"VertexAttribI4sv","gl",""],[5,"is_loaded","gl::VertexAttribI4sv",""],[5,"load_with","",""],[0,"VertexAttribI4ubv","gl",""],[5,"is_loaded","gl::VertexAttribI4ubv",""],[5,"load_with","",""],[0,"VertexAttribI4ui","gl",""],[5,"is_loaded","gl::VertexAttribI4ui",""],[5,"load_with","",""],[0,"VertexAttribI4uiv","gl",""],[5,"is_loaded","gl::VertexAttribI4uiv",""],[5,"load_with","",""],[0,"VertexAttribI4usv","gl",""],[5,"is_loaded","gl::VertexAttribI4usv",""],[5,"load_with","",""],[0,"VertexAttribIFormat","gl",""],[5,"is_loaded","gl::VertexAttribIFormat",""],[5,"load_with","",""],[0,"VertexAttribIPointer","gl",""],[5,"is_loaded","gl::VertexAttribIPointer",""],[5,"load_with","",""],[0,"VertexAttribL1d","gl",""],[5,"is_loaded","gl::VertexAttribL1d",""],[5,"load_with","",""],[0,"VertexAttribL1dv","gl",""],[5,"is_loaded","gl::VertexAttribL1dv",""],[5,"load_with","",""],[0,"VertexAttribL2d","gl",""],[5,"is_loaded","gl::VertexAttribL2d",""],[5,"load_with","",""],[0,"VertexAttribL2dv","gl",""],[5,"is_loaded","gl::VertexAttribL2dv",""],[5,"load_with","",""],[0,"VertexAttribL3d","gl",""],[5,"is_loaded","gl::VertexAttribL3d",""],[5,"load_with","",""],[0,"VertexAttribL3dv","gl",""],[5,"is_loaded","gl::VertexAttribL3dv",""],[5,"load_with","",""],[0,"VertexAttribL4d","gl",""],[5,"is_loaded","gl::VertexAttribL4d",""],[5,"load_with","",""],[0,"VertexAttribL4dv","gl",""],[5,"is_loaded","gl::VertexAttribL4dv",""],[5,"load_with","",""],[0,"VertexAttribLFormat","gl",""],[5,"is_loaded","gl::VertexAttribLFormat",""],[5,"load_with","",""],[0,"VertexAttribLPointer","gl",""],[5,"is_loaded","gl::VertexAttribLPointer",""],[5,"load_with","",""],[0,"VertexAttribP1ui","gl",""],[5,"is_loaded","gl::VertexAttribP1ui",""],[5,"load_with","",""],[0,"VertexAttribP1uiv","gl",""],[5,"is_loaded","gl::VertexAttribP1uiv",""],[5,"load_with","",""],[0,"VertexAttribP2ui","gl",""],[5,"is_loaded","gl::VertexAttribP2ui",""],[5,"load_with","",""],[0,"VertexAttribP2uiv","gl",""],[5,"is_loaded","gl::VertexAttribP2uiv",""],[5,"load_with","",""],[0,"VertexAttribP3ui","gl",""],[5,"is_loaded","gl::VertexAttribP3ui",""],[5,"load_with","",""],[0,"VertexAttribP3uiv","gl",""],[5,"is_loaded","gl::VertexAttribP3uiv",""],[5,"load_with","",""],[0,"VertexAttribP4ui","gl",""],[5,"is_loaded","gl::VertexAttribP4ui",""],[5,"load_with","",""],[0,"VertexAttribP4uiv","gl",""],[5,"is_loaded","gl::VertexAttribP4uiv",""],[5,"load_with","",""],[0,"VertexAttribPointer","gl",""],[5,"is_loaded","gl::VertexAttribPointer",""],[5,"load_with","",""],[0,"VertexBindingDivisor","gl",""],[5,"is_loaded","gl::VertexBindingDivisor",""],[5,"load_with","",""],[0,"VertexP2ui","gl",""],[5,"is_loaded","gl::VertexP2ui",""],[5,"load_with","",""],[0,"VertexP2uiv","gl",""],[5,"is_loaded","gl::VertexP2uiv",""],[5,"load_with","",""],[0,"VertexP3ui","gl",""],[5,"is_loaded","gl::VertexP3ui",""],[5,"load_with","",""],[0,"VertexP3uiv","gl",""],[5,"is_loaded","gl::VertexP3uiv",""],[5,"load_with","",""],[0,"VertexP4ui","gl",""],[5,"is_loaded","gl::VertexP4ui",""],[5,"load_with","",""],[0,"VertexP4uiv","gl",""],[5,"is_loaded","gl::VertexP4uiv",""],[5,"load_with","",""],[0,"Viewport","gl",""],[5,"is_loaded","gl::Viewport",""],[5,"load_with","",""],[0,"ViewportArrayv","gl",""],[5,"is_loaded","gl::ViewportArrayv",""],[5,"load_with","",""],[0,"ViewportIndexedf","gl",""],[5,"is_loaded","gl::ViewportIndexedf",""],[5,"load_with","",""],[0,"ViewportIndexedfv","gl",""],[5,"is_loaded","gl::ViewportIndexedfv",""],[5,"load_with","",""],[0,"WaitSync","gl",""],[5,"is_loaded","gl::WaitSync",""],[5,"load_with","",""],[17,"DEPTH_BUFFER_BIT","gl",""],[17,"STENCIL_BUFFER_BIT","",""],[17,"COLOR_BUFFER_BIT","",""],[17,"CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT","",""],[17,"CONTEXT_FLAG_DEBUG_BIT","",""],[17,"CONTEXT_FLAG_ROBUST_ACCESS_BIT","",""],[17,"CONTEXT_CORE_PROFILE_BIT","",""],[17,"CONTEXT_COMPATIBILITY_PROFILE_BIT","",""],[17,"MAP_READ_BIT","",""],[17,"MAP_WRITE_BIT","",""],[17,"MAP_INVALIDATE_RANGE_BIT","",""],[17,"MAP_INVALIDATE_BUFFER_BIT","",""],[17,"MAP_FLUSH_EXPLICIT_BIT","",""],[17,"MAP_UNSYNCHRONIZED_BIT","",""],[17,"MAP_PERSISTENT_BIT","",""],[17,"MAP_COHERENT_BIT","",""],[17,"DYNAMIC_STORAGE_BIT","",""],[17,"CLIENT_STORAGE_BIT","",""],[17,"VERTEX_ATTRIB_ARRAY_BARRIER_BIT","",""],[17,"ELEMENT_ARRAY_BARRIER_BIT","",""],[17,"UNIFORM_BARRIER_BIT","",""],[17,"TEXTURE_FETCH_BARRIER_BIT","",""],[17,"SHADER_IMAGE_ACCESS_BARRIER_BIT","",""],[17,"COMMAND_BARRIER_BIT","",""],[17,"PIXEL_BUFFER_BARRIER_BIT","",""],[17,"TEXTURE_UPDATE_BARRIER_BIT","",""],[17,"BUFFER_UPDATE_BARRIER_BIT","",""],[17,"FRAMEBUFFER_BARRIER_BIT","",""],[17,"TRANSFORM_FEEDBACK_BARRIER_BIT","",""],[17,"ATOMIC_COUNTER_BARRIER_BIT","",""],[17,"SHADER_STORAGE_BARRIER_BIT","",""],[17,"CLIENT_MAPPED_BUFFER_BARRIER_BIT","",""],[17,"QUERY_BUFFER_BARRIER_BIT","",""],[17,"ALL_BARRIER_BITS","",""],[17,"SYNC_FLUSH_COMMANDS_BIT","",""],[17,"VERTEX_SHADER_BIT","",""],[17,"FRAGMENT_SHADER_BIT","",""],[17,"GEOMETRY_SHADER_BIT","",""],[17,"TESS_CONTROL_SHADER_BIT","",""],[17,"TESS_EVALUATION_SHADER_BIT","",""],[17,"COMPUTE_SHADER_BIT","",""],[17,"ALL_SHADER_BITS","",""],[17,"FALSE","",""],[17,"NO_ERROR","",""],[17,"ZERO","",""],[17,"NONE","",""],[17,"TRUE","",""],[17,"ONE","",""],[17,"INVALID_INDEX","",""],[17,"TIMEOUT_IGNORED","",""],[17,"POINTS","",""],[17,"LINES","",""],[17,"LINE_LOOP","",""],[17,"LINE_STRIP","",""],[17,"TRIANGLES","",""],[17,"TRIANGLE_STRIP","",""],[17,"TRIANGLE_FAN","",""],[17,"LINES_ADJACENCY","",""],[17,"LINE_STRIP_ADJACENCY","",""],[17,"TRIANGLES_ADJACENCY","",""],[17,"TRIANGLE_STRIP_ADJACENCY","",""],[17,"PATCHES","",""],[17,"NEVER","",""],[17,"LESS","",""],[17,"EQUAL","",""],[17,"LEQUAL","",""],[17,"GREATER","",""],[17,"NOTEQUAL","",""],[17,"GEQUAL","",""],[17,"ALWAYS","",""],[17,"SRC_COLOR","",""],[17,"ONE_MINUS_SRC_COLOR","",""],[17,"SRC_ALPHA","",""],[17,"ONE_MINUS_SRC_ALPHA","",""],[17,"DST_ALPHA","",""],[17,"ONE_MINUS_DST_ALPHA","",""],[17,"DST_COLOR","",""],[17,"ONE_MINUS_DST_COLOR","",""],[17,"SRC_ALPHA_SATURATE","",""],[17,"FRONT_LEFT","",""],[17,"FRONT_RIGHT","",""],[17,"BACK_LEFT","",""],[17,"BACK_RIGHT","",""],[17,"FRONT","",""],[17,"BACK","",""],[17,"LEFT","",""],[17,"RIGHT","",""],[17,"FRONT_AND_BACK","",""],[17,"INVALID_ENUM","",""],[17,"INVALID_VALUE","",""],[17,"INVALID_OPERATION","",""],[17,"OUT_OF_MEMORY","",""],[17,"INVALID_FRAMEBUFFER_OPERATION","",""],[17,"CONTEXT_LOST","",""],[17,"CW","",""],[17,"CCW","",""],[17,"POINT_SIZE","",""],[17,"POINT_SIZE_RANGE","",""],[17,"SMOOTH_POINT_SIZE_RANGE","",""],[17,"POINT_SIZE_GRANULARITY","",""],[17,"SMOOTH_POINT_SIZE_GRANULARITY","",""],[17,"LINE_SMOOTH","",""],[17,"LINE_WIDTH","",""],[17,"LINE_WIDTH_RANGE","",""],[17,"SMOOTH_LINE_WIDTH_RANGE","",""],[17,"LINE_WIDTH_GRANULARITY","",""],[17,"SMOOTH_LINE_WIDTH_GRANULARITY","",""],[17,"POLYGON_MODE","",""],[17,"POLYGON_SMOOTH","",""],[17,"CULL_FACE","",""],[17,"CULL_FACE_MODE","",""],[17,"FRONT_FACE","",""],[17,"DEPTH_RANGE","",""],[17,"DEPTH_TEST","",""],[17,"DEPTH_WRITEMASK","",""],[17,"DEPTH_CLEAR_VALUE","",""],[17,"DEPTH_FUNC","",""],[17,"STENCIL_TEST","",""],[17,"STENCIL_CLEAR_VALUE","",""],[17,"STENCIL_FUNC","",""],[17,"STENCIL_VALUE_MASK","",""],[17,"STENCIL_FAIL","",""],[17,"STENCIL_PASS_DEPTH_FAIL","",""],[17,"STENCIL_PASS_DEPTH_PASS","",""],[17,"STENCIL_REF","",""],[17,"STENCIL_WRITEMASK","",""],[17,"VIEWPORT","",""],[17,"DITHER","",""],[17,"BLEND_DST","",""],[17,"BLEND_SRC","",""],[17,"BLEND","",""],[17,"LOGIC_OP_MODE","",""],[17,"COLOR_LOGIC_OP","",""],[17,"DRAW_BUFFER","",""],[17,"READ_BUFFER","",""],[17,"SCISSOR_BOX","",""],[17,"SCISSOR_TEST","",""],[17,"COLOR_CLEAR_VALUE","",""],[17,"COLOR_WRITEMASK","",""],[17,"DOUBLEBUFFER","",""],[17,"STEREO","",""],[17,"LINE_SMOOTH_HINT","",""],[17,"POLYGON_SMOOTH_HINT","",""],[17,"UNPACK_SWAP_BYTES","",""],[17,"UNPACK_LSB_FIRST","",""],[17,"UNPACK_ROW_LENGTH","",""],[17,"UNPACK_SKIP_ROWS","",""],[17,"UNPACK_SKIP_PIXELS","",""],[17,"UNPACK_ALIGNMENT","",""],[17,"PACK_SWAP_BYTES","",""],[17,"PACK_LSB_FIRST","",""],[17,"PACK_ROW_LENGTH","",""],[17,"PACK_SKIP_ROWS","",""],[17,"PACK_SKIP_PIXELS","",""],[17,"PACK_ALIGNMENT","",""],[17,"MAX_CLIP_DISTANCES","",""],[17,"MAX_TEXTURE_SIZE","",""],[17,"MAX_VIEWPORT_DIMS","",""],[17,"SUBPIXEL_BITS","",""],[17,"TEXTURE_1D","",""],[17,"TEXTURE_2D","",""],[17,"TEXTURE_WIDTH","",""],[17,"TEXTURE_HEIGHT","",""],[17,"TEXTURE_INTERNAL_FORMAT","",""],[17,"TEXTURE_BORDER_COLOR","",""],[17,"TEXTURE_TARGET","",""],[17,"DONT_CARE","",""],[17,"FASTEST","",""],[17,"NICEST","",""],[17,"BYTE","",""],[17,"UNSIGNED_BYTE","",""],[17,"SHORT","",""],[17,"UNSIGNED_SHORT","",""],[17,"INT","",""],[17,"UNSIGNED_INT","",""],[17,"FLOAT","",""],[17,"DOUBLE","",""],[17,"HALF_FLOAT","",""],[17,"FIXED","",""],[17,"CLEAR","",""],[17,"AND","",""],[17,"AND_REVERSE","",""],[17,"COPY","",""],[17,"AND_INVERTED","",""],[17,"NOOP","",""],[17,"XOR","",""],[17,"OR","",""],[17,"NOR","",""],[17,"EQUIV","",""],[17,"INVERT","",""],[17,"OR_REVERSE","",""],[17,"COPY_INVERTED","",""],[17,"OR_INVERTED","",""],[17,"NAND","",""],[17,"SET","",""],[17,"TEXTURE","",""],[17,"COLOR","",""],[17,"DEPTH","",""],[17,"STENCIL","",""],[17,"STENCIL_INDEX","",""],[17,"DEPTH_COMPONENT","",""],[17,"RED","",""],[17,"GREEN","",""],[17,"BLUE","",""],[17,"ALPHA","",""],[17,"RGB","",""],[17,"RGBA","",""],[17,"POINT","",""],[17,"LINE","",""],[17,"FILL","",""],[17,"KEEP","",""],[17,"REPLACE","",""],[17,"INCR","",""],[17,"DECR","",""],[17,"VENDOR","",""],[17,"RENDERER","",""],[17,"VERSION","",""],[17,"EXTENSIONS","",""],[17,"NEAREST","",""],[17,"LINEAR","",""],[17,"NEAREST_MIPMAP_NEAREST","",""],[17,"LINEAR_MIPMAP_NEAREST","",""],[17,"NEAREST_MIPMAP_LINEAR","",""],[17,"LINEAR_MIPMAP_LINEAR","",""],[17,"TEXTURE_MAG_FILTER","",""],[17,"TEXTURE_MIN_FILTER","",""],[17,"TEXTURE_WRAP_S","",""],[17,"TEXTURE_WRAP_T","",""],[17,"REPEAT","",""],[17,"POLYGON_OFFSET_UNITS","",""],[17,"POLYGON_OFFSET_POINT","",""],[17,"POLYGON_OFFSET_LINE","",""],[17,"R3_G3_B2","",""],[17,"CLIP_DISTANCE0","",""],[17,"CLIP_DISTANCE1","",""],[17,"CLIP_DISTANCE2","",""],[17,"CLIP_DISTANCE3","",""],[17,"CLIP_DISTANCE4","",""],[17,"CLIP_DISTANCE5","",""],[17,"CLIP_DISTANCE6","",""],[17,"CLIP_DISTANCE7","",""],[17,"CONSTANT_COLOR","",""],[17,"ONE_MINUS_CONSTANT_COLOR","",""],[17,"CONSTANT_ALPHA","",""],[17,"ONE_MINUS_CONSTANT_ALPHA","",""],[17,"FUNC_ADD","",""],[17,"MIN","",""],[17,"MAX","",""],[17,"BLEND_EQUATION_RGB","",""],[17,"FUNC_SUBTRACT","",""],[17,"FUNC_REVERSE_SUBTRACT","",""],[17,"UNSIGNED_BYTE_3_3_2","",""],[17,"UNSIGNED_SHORT_4_4_4_4","",""],[17,"UNSIGNED_SHORT_5_5_5_1","",""],[17,"UNSIGNED_INT_8_8_8_8","",""],[17,"UNSIGNED_INT_10_10_10_2","",""],[17,"POLYGON_OFFSET_FILL","",""],[17,"POLYGON_OFFSET_FACTOR","",""],[17,"RGB4","",""],[17,"RGB5","",""],[17,"RGB8","",""],[17,"RGB10","",""],[17,"RGB12","",""],[17,"RGB16","",""],[17,"RGBA2","",""],[17,"RGBA4","",""],[17,"RGB5_A1","",""],[17,"RGBA8","",""],[17,"RGB10_A2","",""],[17,"RGBA12","",""],[17,"RGBA16","",""],[17,"TEXTURE_RED_SIZE","",""],[17,"TEXTURE_GREEN_SIZE","",""],[17,"TEXTURE_BLUE_SIZE","",""],[17,"TEXTURE_ALPHA_SIZE","",""],[17,"PROXY_TEXTURE_1D","",""],[17,"PROXY_TEXTURE_2D","",""],[17,"TEXTURE_BINDING_1D","",""],[17,"TEXTURE_BINDING_2D","",""],[17,"TEXTURE_BINDING_3D","",""],[17,"PACK_SKIP_IMAGES","",""],[17,"PACK_IMAGE_HEIGHT","",""],[17,"UNPACK_SKIP_IMAGES","",""],[17,"UNPACK_IMAGE_HEIGHT","",""],[17,"TEXTURE_3D","",""],[17,"PROXY_TEXTURE_3D","",""],[17,"TEXTURE_DEPTH","",""],[17,"TEXTURE_WRAP_R","",""],[17,"MAX_3D_TEXTURE_SIZE","",""],[17,"MULTISAMPLE","",""],[17,"SAMPLE_ALPHA_TO_COVERAGE","",""],[17,"SAMPLE_ALPHA_TO_ONE","",""],[17,"SAMPLE_COVERAGE","",""],[17,"SAMPLE_BUFFERS","",""],[17,"SAMPLES","",""],[17,"SAMPLE_COVERAGE_VALUE","",""],[17,"SAMPLE_COVERAGE_INVERT","",""],[17,"BLEND_DST_RGB","",""],[17,"BLEND_SRC_RGB","",""],[17,"BLEND_DST_ALPHA","",""],[17,"BLEND_SRC_ALPHA","",""],[17,"BGR","",""],[17,"BGRA","",""],[17,"MAX_ELEMENTS_VERTICES","",""],[17,"MAX_ELEMENTS_INDICES","",""],[17,"POINT_FADE_THRESHOLD_SIZE","",""],[17,"CLAMP_TO_BORDER","",""],[17,"CLAMP_TO_EDGE","",""],[17,"TEXTURE_MIN_LOD","",""],[17,"TEXTURE_MAX_LOD","",""],[17,"TEXTURE_BASE_LEVEL","",""],[17,"TEXTURE_MAX_LEVEL","",""],[17,"DEPTH_COMPONENT16","",""],[17,"DEPTH_COMPONENT24","",""],[17,"DEPTH_COMPONENT32","",""],[17,"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING","",""],[17,"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE","",""],[17,"FRAMEBUFFER_ATTACHMENT_RED_SIZE","",""],[17,"FRAMEBUFFER_ATTACHMENT_GREEN_SIZE","",""],[17,"FRAMEBUFFER_ATTACHMENT_BLUE_SIZE","",""],[17,"FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE","",""],[17,"FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE","",""],[17,"FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE","",""],[17,"FRAMEBUFFER_DEFAULT","",""],[17,"FRAMEBUFFER_UNDEFINED","",""],[17,"DEPTH_STENCIL_ATTACHMENT","",""],[17,"MAJOR_VERSION","",""],[17,"MINOR_VERSION","",""],[17,"NUM_EXTENSIONS","",""],[17,"CONTEXT_FLAGS","",""],[17,"BUFFER_IMMUTABLE_STORAGE","",""],[17,"BUFFER_STORAGE_FLAGS","",""],[17,"PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED","",""],[17,"INDEX","",""],[17,"COMPRESSED_RED","",""],[17,"COMPRESSED_RG","",""],[17,"RG","",""],[17,"RG_INTEGER","",""],[17,"R8","",""],[17,"R16","",""],[17,"RG8","",""],[17,"RG16","",""],[17,"R16F","",""],[17,"R32F","",""],[17,"RG16F","",""],[17,"RG32F","",""],[17,"R8I","",""],[17,"R8UI","",""],[17,"R16I","",""],[17,"R16UI","",""],[17,"R32I","",""],[17,"R32UI","",""],[17,"RG8I","",""],[17,"RG8UI","",""],[17,"RG16I","",""],[17,"RG16UI","",""],[17,"RG32I","",""],[17,"RG32UI","",""],[17,"DEBUG_OUTPUT_SYNCHRONOUS","",""],[17,"DEBUG_NEXT_LOGGED_MESSAGE_LENGTH","",""],[17,"DEBUG_CALLBACK_FUNCTION","",""],[17,"DEBUG_CALLBACK_USER_PARAM","",""],[17,"DEBUG_SOURCE_API","",""],[17,"DEBUG_SOURCE_WINDOW_SYSTEM","",""],[17,"DEBUG_SOURCE_SHADER_COMPILER","",""],[17,"DEBUG_SOURCE_THIRD_PARTY","",""],[17,"DEBUG_SOURCE_APPLICATION","",""],[17,"DEBUG_SOURCE_OTHER","",""],[17,"DEBUG_TYPE_ERROR","",""],[17,"DEBUG_TYPE_DEPRECATED_BEHAVIOR","",""],[17,"DEBUG_TYPE_UNDEFINED_BEHAVIOR","",""],[17,"DEBUG_TYPE_PORTABILITY","",""],[17,"DEBUG_TYPE_PERFORMANCE","",""],[17,"DEBUG_TYPE_OTHER","",""],[17,"LOSE_CONTEXT_ON_RESET","",""],[17,"GUILTY_CONTEXT_RESET","",""],[17,"INNOCENT_CONTEXT_RESET","",""],[17,"UNKNOWN_CONTEXT_RESET","",""],[17,"RESET_NOTIFICATION_STRATEGY","",""],[17,"PROGRAM_BINARY_RETRIEVABLE_HINT","",""],[17,"PROGRAM_SEPARABLE","",""],[17,"ACTIVE_PROGRAM","",""],[17,"PROGRAM_PIPELINE_BINDING","",""],[17,"MAX_VIEWPORTS","",""],[17,"VIEWPORT_SUBPIXEL_BITS","",""],[17,"VIEWPORT_BOUNDS_RANGE","",""],[17,"LAYER_PROVOKING_VERTEX","",""],[17,"VIEWPORT_INDEX_PROVOKING_VERTEX","",""],[17,"UNDEFINED_VERTEX","",""],[17,"NO_RESET_NOTIFICATION","",""],[17,"MAX_COMPUTE_SHARED_MEMORY_SIZE","",""],[17,"MAX_COMPUTE_UNIFORM_COMPONENTS","",""],[17,"MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS","",""],[17,"MAX_COMPUTE_ATOMIC_COUNTERS","",""],[17,"MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS","",""],[17,"COMPUTE_WORK_GROUP_SIZE","",""],[17,"DEBUG_TYPE_MARKER","",""],[17,"DEBUG_TYPE_PUSH_GROUP","",""],[17,"DEBUG_TYPE_POP_GROUP","",""],[17,"DEBUG_SEVERITY_NOTIFICATION","",""],[17,"MAX_DEBUG_GROUP_STACK_DEPTH","",""],[17,"DEBUG_GROUP_STACK_DEPTH","",""],[17,"MAX_UNIFORM_LOCATIONS","",""],[17,"INTERNALFORMAT_SUPPORTED","",""],[17,"INTERNALFORMAT_PREFERRED","",""],[17,"INTERNALFORMAT_RED_SIZE","",""],[17,"INTERNALFORMAT_GREEN_SIZE","",""],[17,"INTERNALFORMAT_BLUE_SIZE","",""],[17,"INTERNALFORMAT_ALPHA_SIZE","",""],[17,"INTERNALFORMAT_DEPTH_SIZE","",""],[17,"INTERNALFORMAT_STENCIL_SIZE","",""],[17,"INTERNALFORMAT_SHARED_SIZE","",""],[17,"INTERNALFORMAT_RED_TYPE","",""],[17,"INTERNALFORMAT_GREEN_TYPE","",""],[17,"INTERNALFORMAT_BLUE_TYPE","",""],[17,"INTERNALFORMAT_ALPHA_TYPE","",""],[17,"INTERNALFORMAT_DEPTH_TYPE","",""],[17,"INTERNALFORMAT_STENCIL_TYPE","",""],[17,"MAX_WIDTH","",""],[17,"MAX_HEIGHT","",""],[17,"MAX_DEPTH","",""],[17,"MAX_LAYERS","",""],[17,"MAX_COMBINED_DIMENSIONS","",""],[17,"COLOR_COMPONENTS","",""],[17,"DEPTH_COMPONENTS","",""],[17,"STENCIL_COMPONENTS","",""],[17,"COLOR_RENDERABLE","",""],[17,"DEPTH_RENDERABLE","",""],[17,"STENCIL_RENDERABLE","",""],[17,"FRAMEBUFFER_RENDERABLE","",""],[17,"FRAMEBUFFER_RENDERABLE_LAYERED","",""],[17,"FRAMEBUFFER_BLEND","",""],[17,"READ_PIXELS","",""],[17,"READ_PIXELS_FORMAT","",""],[17,"READ_PIXELS_TYPE","",""],[17,"TEXTURE_IMAGE_FORMAT","",""],[17,"TEXTURE_IMAGE_TYPE","",""],[17,"GET_TEXTURE_IMAGE_FORMAT","",""],[17,"GET_TEXTURE_IMAGE_TYPE","",""],[17,"MIPMAP","",""],[17,"MANUAL_GENERATE_MIPMAP","",""],[17,"AUTO_GENERATE_MIPMAP","",""],[17,"COLOR_ENCODING","",""],[17,"SRGB_READ","",""],[17,"SRGB_WRITE","",""],[17,"FILTER","",""],[17,"VERTEX_TEXTURE","",""],[17,"TESS_CONTROL_TEXTURE","",""],[17,"TESS_EVALUATION_TEXTURE","",""],[17,"GEOMETRY_TEXTURE","",""],[17,"FRAGMENT_TEXTURE","",""],[17,"COMPUTE_TEXTURE","",""],[17,"TEXTURE_SHADOW","",""],[17,"TEXTURE_GATHER","",""],[17,"TEXTURE_GATHER_SHADOW","",""],[17,"SHADER_IMAGE_LOAD","",""],[17,"SHADER_IMAGE_STORE","",""],[17,"SHADER_IMAGE_ATOMIC","",""],[17,"IMAGE_TEXEL_SIZE","",""],[17,"IMAGE_COMPATIBILITY_CLASS","",""],[17,"IMAGE_PIXEL_FORMAT","",""],[17,"IMAGE_PIXEL_TYPE","",""],[17,"SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST","",""],[17,"SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST","",""],[17,"SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE","",""],[17,"SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE","",""],[17,"TEXTURE_COMPRESSED_BLOCK_WIDTH","",""],[17,"TEXTURE_COMPRESSED_BLOCK_HEIGHT","",""],[17,"TEXTURE_COMPRESSED_BLOCK_SIZE","",""],[17,"CLEAR_BUFFER","",""],[17,"TEXTURE_VIEW","",""],[17,"VIEW_COMPATIBILITY_CLASS","",""],[17,"FULL_SUPPORT","",""],[17,"CAVEAT_SUPPORT","",""],[17,"IMAGE_CLASS_4_X_32","",""],[17,"IMAGE_CLASS_2_X_32","",""],[17,"IMAGE_CLASS_1_X_32","",""],[17,"IMAGE_CLASS_4_X_16","",""],[17,"IMAGE_CLASS_2_X_16","",""],[17,"IMAGE_CLASS_1_X_16","",""],[17,"IMAGE_CLASS_4_X_8","",""],[17,"IMAGE_CLASS_2_X_8","",""],[17,"IMAGE_CLASS_1_X_8","",""],[17,"IMAGE_CLASS_11_11_10","",""],[17,"IMAGE_CLASS_10_10_10_2","",""],[17,"VIEW_CLASS_128_BITS","",""],[17,"VIEW_CLASS_96_BITS","",""],[17,"VIEW_CLASS_64_BITS","",""],[17,"VIEW_CLASS_48_BITS","",""],[17,"VIEW_CLASS_32_BITS","",""],[17,"VIEW_CLASS_24_BITS","",""],[17,"VIEW_CLASS_16_BITS","",""],[17,"VIEW_CLASS_8_BITS","",""],[17,"VIEW_CLASS_S3TC_DXT1_RGB","",""],[17,"VIEW_CLASS_S3TC_DXT1_RGBA","",""],[17,"VIEW_CLASS_S3TC_DXT3_RGBA","",""],[17,"VIEW_CLASS_S3TC_DXT5_RGBA","",""],[17,"VIEW_CLASS_RGTC1_RED","",""],[17,"VIEW_CLASS_RGTC2_RG","",""],[17,"VIEW_CLASS_BPTC_UNORM","",""],[17,"VIEW_CLASS_BPTC_FLOAT","",""],[17,"VERTEX_ATTRIB_BINDING","",""],[17,"VERTEX_ATTRIB_RELATIVE_OFFSET","",""],[17,"VERTEX_BINDING_DIVISOR","",""],[17,"VERTEX_BINDING_OFFSET","",""],[17,"VERTEX_BINDING_STRIDE","",""],[17,"MAX_VERTEX_ATTRIB_RELATIVE_OFFSET","",""],[17,"MAX_VERTEX_ATTRIB_BINDINGS","",""],[17,"TEXTURE_VIEW_MIN_LEVEL","",""],[17,"TEXTURE_VIEW_NUM_LEVELS","",""],[17,"TEXTURE_VIEW_MIN_LAYER","",""],[17,"TEXTURE_VIEW_NUM_LAYERS","",""],[17,"TEXTURE_IMMUTABLE_LEVELS","",""],[17,"BUFFER","",""],[17,"SHADER","",""],[17,"PROGRAM","",""],[17,"QUERY","",""],[17,"PROGRAM_PIPELINE","",""],[17,"MAX_VERTEX_ATTRIB_STRIDE","",""],[17,"SAMPLER","",""],[17,"DISPLAY_LIST","",""],[17,"MAX_LABEL_LENGTH","",""],[17,"NUM_SHADING_LANGUAGE_VERSIONS","",""],[17,"QUERY_TARGET","",""],[17,"TEXTURE_BINDING","",""],[17,"MAX_CULL_DISTANCES","",""],[17,"MAX_COMBINED_CLIP_AND_CULL_DISTANCES","",""],[17,"CONTEXT_RELEASE_BEHAVIOR","",""],[17,"CONTEXT_RELEASE_BEHAVIOR_FLUSH","",""],[17,"UNSIGNED_BYTE_2_3_3_REV","",""],[17,"UNSIGNED_SHORT_5_6_5","",""],[17,"UNSIGNED_SHORT_5_6_5_REV","",""],[17,"UNSIGNED_SHORT_4_4_4_4_REV","",""],[17,"UNSIGNED_SHORT_1_5_5_5_REV","",""],[17,"UNSIGNED_INT_8_8_8_8_REV","",""],[17,"UNSIGNED_INT_2_10_10_10_REV","",""],[17,"MIRRORED_REPEAT","",""],[17,"ALIASED_LINE_WIDTH_RANGE","",""],[17,"TEXTURE0","",""],[17,"TEXTURE1","",""],[17,"TEXTURE2","",""],[17,"TEXTURE3","",""],[17,"TEXTURE4","",""],[17,"TEXTURE5","",""],[17,"TEXTURE6","",""],[17,"TEXTURE7","",""],[17,"TEXTURE8","",""],[17,"TEXTURE9","",""],[17,"TEXTURE10","",""],[17,"TEXTURE11","",""],[17,"TEXTURE12","",""],[17,"TEXTURE13","",""],[17,"TEXTURE14","",""],[17,"TEXTURE15","",""],[17,"TEXTURE16","",""],[17,"TEXTURE17","",""],[17,"TEXTURE18","",""],[17,"TEXTURE19","",""],[17,"TEXTURE20","",""],[17,"TEXTURE21","",""],[17,"TEXTURE22","",""],[17,"TEXTURE23","",""],[17,"TEXTURE24","",""],[17,"TEXTURE25","",""],[17,"TEXTURE26","",""],[17,"TEXTURE27","",""],[17,"TEXTURE28","",""],[17,"TEXTURE29","",""],[17,"TEXTURE30","",""],[17,"TEXTURE31","",""],[17,"ACTIVE_TEXTURE","",""],[17,"MAX_RENDERBUFFER_SIZE","",""],[17,"COMPRESSED_RGB","",""],[17,"COMPRESSED_RGBA","",""],[17,"TEXTURE_COMPRESSION_HINT","",""],[17,"UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER","",""],[17,"UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER","",""],[17,"TEXTURE_RECTANGLE","",""],[17,"TEXTURE_BINDING_RECTANGLE","",""],[17,"PROXY_TEXTURE_RECTANGLE","",""],[17,"MAX_RECTANGLE_TEXTURE_SIZE","",""],[17,"DEPTH_STENCIL","",""],[17,"UNSIGNED_INT_24_8","",""],[17,"MAX_TEXTURE_LOD_BIAS","",""],[17,"TEXTURE_LOD_BIAS","",""],[17,"INCR_WRAP","",""],[17,"DECR_WRAP","",""],[17,"TEXTURE_CUBE_MAP","",""],[17,"TEXTURE_BINDING_CUBE_MAP","",""],[17,"TEXTURE_CUBE_MAP_POSITIVE_X","",""],[17,"TEXTURE_CUBE_MAP_NEGATIVE_X","",""],[17,"TEXTURE_CUBE_MAP_POSITIVE_Y","",""],[17,"TEXTURE_CUBE_MAP_NEGATIVE_Y","",""],[17,"TEXTURE_CUBE_MAP_POSITIVE_Z","",""],[17,"TEXTURE_CUBE_MAP_NEGATIVE_Z","",""],[17,"PROXY_TEXTURE_CUBE_MAP","",""],[17,"MAX_CUBE_MAP_TEXTURE_SIZE","",""],[17,"SRC1_ALPHA","",""],[17,"VERTEX_ARRAY_BINDING","",""],[17,"VERTEX_ATTRIB_ARRAY_ENABLED","",""],[17,"VERTEX_ATTRIB_ARRAY_SIZE","",""],[17,"VERTEX_ATTRIB_ARRAY_STRIDE","",""],[17,"VERTEX_ATTRIB_ARRAY_TYPE","",""],[17,"CURRENT_VERTEX_ATTRIB","",""],[17,"VERTEX_PROGRAM_POINT_SIZE","",""],[17,"PROGRAM_POINT_SIZE","",""],[17,"VERTEX_ATTRIB_ARRAY_POINTER","",""],[17,"DEPTH_CLAMP","",""],[17,"TEXTURE_COMPRESSED_IMAGE_SIZE","",""],[17,"TEXTURE_COMPRESSED","",""],[17,"NUM_COMPRESSED_TEXTURE_FORMATS","",""],[17,"COMPRESSED_TEXTURE_FORMATS","",""],[17,"PROGRAM_BINARY_LENGTH","",""],[17,"MIRROR_CLAMP_TO_EDGE","",""],[17,"VERTEX_ATTRIB_ARRAY_LONG","",""],[17,"BUFFER_SIZE","",""],[17,"BUFFER_USAGE","",""],[17,"NUM_PROGRAM_BINARY_FORMATS","",""],[17,"PROGRAM_BINARY_FORMATS","",""],[17,"STENCIL_BACK_FUNC","",""],[17,"STENCIL_BACK_FAIL","",""],[17,"STENCIL_BACK_PASS_DEPTH_FAIL","",""],[17,"STENCIL_BACK_PASS_DEPTH_PASS","",""],[17,"RGBA32F","",""],[17,"RGB32F","",""],[17,"RGBA16F","",""],[17,"RGB16F","",""],[17,"MAX_DRAW_BUFFERS","",""],[17,"DRAW_BUFFER0","",""],[17,"DRAW_BUFFER1","",""],[17,"DRAW_BUFFER2","",""],[17,"DRAW_BUFFER3","",""],[17,"DRAW_BUFFER4","",""],[17,"DRAW_BUFFER5","",""],[17,"DRAW_BUFFER6","",""],[17,"DRAW_BUFFER7","",""],[17,"DRAW_BUFFER8","",""],[17,"DRAW_BUFFER9","",""],[17,"DRAW_BUFFER10","",""],[17,"DRAW_BUFFER11","",""],[17,"DRAW_BUFFER12","",""],[17,"DRAW_BUFFER13","",""],[17,"DRAW_BUFFER14","",""],[17,"DRAW_BUFFER15","",""],[17,"BLEND_EQUATION_ALPHA","",""],[17,"TEXTURE_DEPTH_SIZE","",""],[17,"TEXTURE_COMPARE_MODE","",""],[17,"TEXTURE_COMPARE_FUNC","",""],[17,"COMPARE_REF_TO_TEXTURE","",""],[17,"TEXTURE_CUBE_MAP_SEAMLESS","",""],[17,"QUERY_COUNTER_BITS","",""],[17,"CURRENT_QUERY","",""],[17,"QUERY_RESULT","",""],[17,"QUERY_RESULT_AVAILABLE","",""],[17,"MAX_VERTEX_ATTRIBS","",""],[17,"VERTEX_ATTRIB_ARRAY_NORMALIZED","",""],[17,"MAX_TESS_CONTROL_INPUT_COMPONENTS","",""],[17,"MAX_TESS_EVALUATION_INPUT_COMPONENTS","",""],[17,"MAX_TEXTURE_IMAGE_UNITS","",""],[17,"GEOMETRY_SHADER_INVOCATIONS","",""],[17,"ARRAY_BUFFER","",""],[17,"ELEMENT_ARRAY_BUFFER","",""],[17,"ARRAY_BUFFER_BINDING","",""],[17,"ELEMENT_ARRAY_BUFFER_BINDING","",""],[17,"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","",""],[17,"READ_ONLY","",""],[17,"WRITE_ONLY","",""],[17,"READ_WRITE","",""],[17,"BUFFER_ACCESS","",""],[17,"BUFFER_MAPPED","",""],[17,"BUFFER_MAP_POINTER","",""],[17,"TIME_ELAPSED","",""],[17,"STREAM_DRAW","",""],[17,"STREAM_READ","",""],[17,"STREAM_COPY","",""],[17,"STATIC_DRAW","",""],[17,"STATIC_READ","",""],[17,"STATIC_COPY","",""],[17,"DYNAMIC_DRAW","",""],[17,"DYNAMIC_READ","",""],[17,"DYNAMIC_COPY","",""],[17,"PIXEL_PACK_BUFFER","",""],[17,"PIXEL_UNPACK_BUFFER","",""],[17,"PIXEL_PACK_BUFFER_BINDING","",""],[17,"PIXEL_UNPACK_BUFFER_BINDING","",""],[17,"DEPTH24_STENCIL8","",""],[17,"TEXTURE_STENCIL_SIZE","",""],[17,"SRC1_COLOR","",""],[17,"ONE_MINUS_SRC1_COLOR","",""],[17,"ONE_MINUS_SRC1_ALPHA","",""],[17,"MAX_DUAL_SOURCE_DRAW_BUFFERS","",""],[17,"VERTEX_ATTRIB_ARRAY_INTEGER","",""],[17,"VERTEX_ATTRIB_ARRAY_DIVISOR","",""],[17,"MAX_ARRAY_TEXTURE_LAYERS","",""],[17,"MIN_PROGRAM_TEXEL_OFFSET","",""],[17,"MAX_PROGRAM_TEXEL_OFFSET","",""],[17,"SAMPLES_PASSED","",""],[17,"GEOMETRY_VERTICES_OUT","",""],[17,"GEOMETRY_INPUT_TYPE","",""],[17,"GEOMETRY_OUTPUT_TYPE","",""],[17,"SAMPLER_BINDING","",""],[17,"CLAMP_READ_COLOR","",""],[17,"FIXED_ONLY","",""],[17,"UNIFORM_BUFFER","",""],[17,"UNIFORM_BUFFER_BINDING","",""],[17,"UNIFORM_BUFFER_START","",""],[17,"UNIFORM_BUFFER_SIZE","",""],[17,"MAX_VERTEX_UNIFORM_BLOCKS","",""],[17,"MAX_GEOMETRY_UNIFORM_BLOCKS","",""],[17,"MAX_FRAGMENT_UNIFORM_BLOCKS","",""],[17,"MAX_COMBINED_UNIFORM_BLOCKS","",""],[17,"MAX_UNIFORM_BUFFER_BINDINGS","",""],[17,"MAX_UNIFORM_BLOCK_SIZE","",""],[17,"MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","",""],[17,"MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS","",""],[17,"MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","",""],[17,"UNIFORM_BUFFER_OFFSET_ALIGNMENT","",""],[17,"ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH","",""],[17,"ACTIVE_UNIFORM_BLOCKS","",""],[17,"UNIFORM_TYPE","",""],[17,"UNIFORM_SIZE","",""],[17,"UNIFORM_NAME_LENGTH","",""],[17,"UNIFORM_BLOCK_INDEX","",""],[17,"UNIFORM_OFFSET","",""],[17,"UNIFORM_ARRAY_STRIDE","",""],[17,"UNIFORM_MATRIX_STRIDE","",""],[17,"UNIFORM_IS_ROW_MAJOR","",""],[17,"UNIFORM_BLOCK_BINDING","",""],[17,"UNIFORM_BLOCK_DATA_SIZE","",""],[17,"UNIFORM_BLOCK_NAME_LENGTH","",""],[17,"UNIFORM_BLOCK_ACTIVE_UNIFORMS","",""],[17,"UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","",""],[17,"UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","",""],[17,"UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER","",""],[17,"UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","",""],[17,"FRAGMENT_SHADER","",""],[17,"VERTEX_SHADER","",""],[17,"MAX_FRAGMENT_UNIFORM_COMPONENTS","",""],[17,"MAX_VERTEX_UNIFORM_COMPONENTS","",""],[17,"MAX_VARYING_FLOATS","",""],[17,"MAX_VARYING_COMPONENTS","",""],[17,"MAX_VERTEX_TEXTURE_IMAGE_UNITS","",""],[17,"MAX_COMBINED_TEXTURE_IMAGE_UNITS","",""],[17,"SHADER_TYPE","",""],[17,"FLOAT_VEC2","",""],[17,"FLOAT_VEC3","",""],[17,"FLOAT_VEC4","",""],[17,"INT_VEC2","",""],[17,"INT_VEC3","",""],[17,"INT_VEC4","",""],[17,"BOOL","",""],[17,"BOOL_VEC2","",""],[17,"BOOL_VEC3","",""],[17,"BOOL_VEC4","",""],[17,"FLOAT_MAT2","",""],[17,"FLOAT_MAT3","",""],[17,"FLOAT_MAT4","",""],[17,"SAMPLER_1D","",""],[17,"SAMPLER_2D","",""],[17,"SAMPLER_3D","",""],[17,"SAMPLER_CUBE","",""],[17,"SAMPLER_1D_SHADOW","",""],[17,"SAMPLER_2D_SHADOW","",""],[17,"SAMPLER_2D_RECT","",""],[17,"SAMPLER_2D_RECT_SHADOW","",""],[17,"FLOAT_MAT2x3","",""],[17,"FLOAT_MAT2x4","",""],[17,"FLOAT_MAT3x2","",""],[17,"FLOAT_MAT3x4","",""],[17,"FLOAT_MAT4x2","",""],[17,"FLOAT_MAT4x3","",""],[17,"DELETE_STATUS","",""],[17,"COMPILE_STATUS","",""],[17,"LINK_STATUS","",""],[17,"VALIDATE_STATUS","",""],[17,"INFO_LOG_LENGTH","",""],[17,"ATTACHED_SHADERS","",""],[17,"ACTIVE_UNIFORMS","",""],[17,"ACTIVE_UNIFORM_MAX_LENGTH","",""],[17,"SHADER_SOURCE_LENGTH","",""],[17,"ACTIVE_ATTRIBUTES","",""],[17,"ACTIVE_ATTRIBUTE_MAX_LENGTH","",""],[17,"FRAGMENT_SHADER_DERIVATIVE_HINT","",""],[17,"SHADING_LANGUAGE_VERSION","",""],[17,"CURRENT_PROGRAM","",""],[17,"IMPLEMENTATION_COLOR_READ_TYPE","",""],[17,"IMPLEMENTATION_COLOR_READ_FORMAT","",""],[17,"TEXTURE_RED_TYPE","",""],[17,"TEXTURE_GREEN_TYPE","",""],[17,"TEXTURE_BLUE_TYPE","",""],[17,"TEXTURE_ALPHA_TYPE","",""],[17,"TEXTURE_DEPTH_TYPE","",""],[17,"UNSIGNED_NORMALIZED","",""],[17,"TEXTURE_1D_ARRAY","",""],[17,"PROXY_TEXTURE_1D_ARRAY","",""],[17,"TEXTURE_2D_ARRAY","",""],[17,"PROXY_TEXTURE_2D_ARRAY","",""],[17,"TEXTURE_BINDING_1D_ARRAY","",""],[17,"TEXTURE_BINDING_2D_ARRAY","",""],[17,"MAX_GEOMETRY_TEXTURE_IMAGE_UNITS","",""],[17,"TEXTURE_BUFFER","",""],[17,"TEXTURE_BUFFER_BINDING","",""],[17,"MAX_TEXTURE_BUFFER_SIZE","",""],[17,"TEXTURE_BINDING_BUFFER","",""],[17,"TEXTURE_BUFFER_DATA_STORE_BINDING","",""],[17,"ANY_SAMPLES_PASSED","",""],[17,"SAMPLE_SHADING","",""],[17,"MIN_SAMPLE_SHADING_VALUE","",""],[17,"R11F_G11F_B10F","",""],[17,"UNSIGNED_INT_10F_11F_11F_REV","",""],[17,"RGB9_E5","",""],[17,"UNSIGNED_INT_5_9_9_9_REV","",""],[17,"TEXTURE_SHARED_SIZE","",""],[17,"SRGB","",""],[17,"SRGB8","",""],[17,"SRGB_ALPHA","",""],[17,"SRGB8_ALPHA8","",""],[17,"COMPRESSED_SRGB","",""],[17,"COMPRESSED_SRGB_ALPHA","",""],[17,"TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH","",""],[17,"TRANSFORM_FEEDBACK_BUFFER_MODE","",""],[17,"MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","",""],[17,"TRANSFORM_FEEDBACK_VARYINGS","",""],[17,"TRANSFORM_FEEDBACK_BUFFER_START","",""],[17,"TRANSFORM_FEEDBACK_BUFFER_SIZE","",""],[17,"PRIMITIVES_GENERATED","",""],[17,"TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN","",""],[17,"RASTERIZER_DISCARD","",""],[17,"MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","",""],[17,"MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","",""],[17,"INTERLEAVED_ATTRIBS","",""],[17,"SEPARATE_ATTRIBS","",""],[17,"TRANSFORM_FEEDBACK_BUFFER","",""],[17,"TRANSFORM_FEEDBACK_BUFFER_BINDING","",""],[17,"POINT_SPRITE_COORD_ORIGIN","",""],[17,"LOWER_LEFT","",""],[17,"UPPER_LEFT","",""],[17,"STENCIL_BACK_REF","",""],[17,"STENCIL_BACK_VALUE_MASK","",""],[17,"STENCIL_BACK_WRITEMASK","",""],[17,"DRAW_FRAMEBUFFER_BINDING","",""],[17,"FRAMEBUFFER_BINDING","",""],[17,"RENDERBUFFER_BINDING","",""],[17,"READ_FRAMEBUFFER","",""],[17,"DRAW_FRAMEBUFFER","",""],[17,"READ_FRAMEBUFFER_BINDING","",""],[17,"RENDERBUFFER_SAMPLES","",""],[17,"DEPTH_COMPONENT32F","",""],[17,"DEPTH32F_STENCIL8","",""],[17,"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","",""],[17,"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","",""],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","",""],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","",""],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER","",""],[17,"FRAMEBUFFER_COMPLETE","",""],[17,"FRAMEBUFFER_INCOMPLETE_ATTACHMENT","",""],[17,"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","",""],[17,"FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER","",""],[17,"FRAMEBUFFER_INCOMPLETE_READ_BUFFER","",""],[17,"FRAMEBUFFER_UNSUPPORTED","",""],[17,"MAX_COLOR_ATTACHMENTS","",""],[17,"COLOR_ATTACHMENT0","",""],[17,"COLOR_ATTACHMENT1","",""],[17,"COLOR_ATTACHMENT2","",""],[17,"COLOR_ATTACHMENT3","",""],[17,"COLOR_ATTACHMENT4","",""],[17,"COLOR_ATTACHMENT5","",""],[17,"COLOR_ATTACHMENT6","",""],[17,"COLOR_ATTACHMENT7","",""],[17,"COLOR_ATTACHMENT8","",""],[17,"COLOR_ATTACHMENT9","",""],[17,"COLOR_ATTACHMENT10","",""],[17,"COLOR_ATTACHMENT11","",""],[17,"COLOR_ATTACHMENT12","",""],[17,"COLOR_ATTACHMENT13","",""],[17,"COLOR_ATTACHMENT14","",""],[17,"COLOR_ATTACHMENT15","",""],[17,"DEPTH_ATTACHMENT","",""],[17,"STENCIL_ATTACHMENT","",""],[17,"FRAMEBUFFER","",""],[17,"RENDERBUFFER","",""],[17,"RENDERBUFFER_WIDTH","",""],[17,"RENDERBUFFER_HEIGHT","",""],[17,"RENDERBUFFER_INTERNAL_FORMAT","",""],[17,"STENCIL_INDEX1","",""],[17,"STENCIL_INDEX4","",""],[17,"STENCIL_INDEX8","",""],[17,"STENCIL_INDEX16","",""],[17,"RENDERBUFFER_RED_SIZE","",""],[17,"RENDERBUFFER_GREEN_SIZE","",""],[17,"RENDERBUFFER_BLUE_SIZE","",""],[17,"RENDERBUFFER_ALPHA_SIZE","",""],[17,"RENDERBUFFER_DEPTH_SIZE","",""],[17,"RENDERBUFFER_STENCIL_SIZE","",""],[17,"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","",""],[17,"MAX_SAMPLES","",""],[17,"RGB565","",""],[17,"PRIMITIVE_RESTART_FIXED_INDEX","",""],[17,"ANY_SAMPLES_PASSED_CONSERVATIVE","",""],[17,"MAX_ELEMENT_INDEX","",""],[17,"RGBA32UI","",""],[17,"RGB32UI","",""],[17,"RGBA16UI","",""],[17,"RGB16UI","",""],[17,"RGBA8UI","",""],[17,"RGB8UI","",""],[17,"RGBA32I","",""],[17,"RGB32I","",""],[17,"RGBA16I","",""],[17,"RGB16I","",""],[17,"RGBA8I","",""],[17,"RGB8I","",""],[17,"RED_INTEGER","",""],[17,"GREEN_INTEGER","",""],[17,"BLUE_INTEGER","",""],[17,"RGB_INTEGER","",""],[17,"RGBA_INTEGER","",""],[17,"BGR_INTEGER","",""],[17,"BGRA_INTEGER","",""],[17,"INT_2_10_10_10_REV","",""],[17,"FRAMEBUFFER_ATTACHMENT_LAYERED","",""],[17,"FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS","",""],[17,"FLOAT_32_UNSIGNED_INT_24_8_REV","",""],[17,"FRAMEBUFFER_SRGB","",""],[17,"COMPRESSED_RED_RGTC1","",""],[17,"COMPRESSED_SIGNED_RED_RGTC1","",""],[17,"COMPRESSED_RG_RGTC2","",""],[17,"COMPRESSED_SIGNED_RG_RGTC2","",""],[17,"SAMPLER_1D_ARRAY","",""],[17,"SAMPLER_2D_ARRAY","",""],[17,"SAMPLER_BUFFER","",""],[17,"SAMPLER_1D_ARRAY_SHADOW","",""],[17,"SAMPLER_2D_ARRAY_SHADOW","",""],[17,"SAMPLER_CUBE_SHADOW","",""],[17,"UNSIGNED_INT_VEC2","",""],[17,"UNSIGNED_INT_VEC3","",""],[17,"UNSIGNED_INT_VEC4","",""],[17,"INT_SAMPLER_1D","",""],[17,"INT_SAMPLER_2D","",""],[17,"INT_SAMPLER_3D","",""],[17,"INT_SAMPLER_CUBE","",""],[17,"INT_SAMPLER_2D_RECT","",""],[17,"INT_SAMPLER_1D_ARRAY","",""],[17,"INT_SAMPLER_2D_ARRAY","",""],[17,"INT_SAMPLER_BUFFER","",""],[17,"UNSIGNED_INT_SAMPLER_1D","",""],[17,"UNSIGNED_INT_SAMPLER_2D","",""],[17,"UNSIGNED_INT_SAMPLER_3D","",""],[17,"UNSIGNED_INT_SAMPLER_CUBE","",""],[17,"UNSIGNED_INT_SAMPLER_2D_RECT","",""],[17,"UNSIGNED_INT_SAMPLER_1D_ARRAY","",""],[17,"UNSIGNED_INT_SAMPLER_2D_ARRAY","",""],[17,"UNSIGNED_INT_SAMPLER_BUFFER","",""],[17,"GEOMETRY_SHADER","",""],[17,"MAX_GEOMETRY_UNIFORM_COMPONENTS","",""],[17,"MAX_GEOMETRY_OUTPUT_VERTICES","",""],[17,"MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS","",""],[17,"ACTIVE_SUBROUTINES","",""],[17,"ACTIVE_SUBROUTINE_UNIFORMS","",""],[17,"MAX_SUBROUTINES","",""],[17,"MAX_SUBROUTINE_UNIFORM_LOCATIONS","",""],[17,"LOW_FLOAT","",""],[17,"MEDIUM_FLOAT","",""],[17,"HIGH_FLOAT","",""],[17,"LOW_INT","",""],[17,"MEDIUM_INT","",""],[17,"HIGH_INT","",""],[17,"SHADER_BINARY_FORMATS","",""],[17,"NUM_SHADER_BINARY_FORMATS","",""],[17,"SHADER_COMPILER","",""],[17,"MAX_VERTEX_UNIFORM_VECTORS","",""],[17,"MAX_VARYING_VECTORS","",""],[17,"MAX_FRAGMENT_UNIFORM_VECTORS","",""],[17,"QUERY_WAIT","",""],[17,"QUERY_NO_WAIT","",""],[17,"QUERY_BY_REGION_WAIT","",""],[17,"QUERY_BY_REGION_NO_WAIT","",""],[17,"QUERY_WAIT_INVERTED","",""],[17,"QUERY_NO_WAIT_INVERTED","",""],[17,"QUERY_BY_REGION_WAIT_INVERTED","",""],[17,"QUERY_BY_REGION_NO_WAIT_INVERTED","",""],[17,"MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS","",""],[17,"MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS","",""],[17,"TRANSFORM_FEEDBACK","",""],[17,"TRANSFORM_FEEDBACK_BUFFER_PAUSED","",""],[17,"TRANSFORM_FEEDBACK_PAUSED","",""],[17,"TRANSFORM_FEEDBACK_BUFFER_ACTIVE","",""],[17,"TRANSFORM_FEEDBACK_ACTIVE","",""],[17,"TRANSFORM_FEEDBACK_BINDING","",""],[17,"TIMESTAMP","",""],[17,"TEXTURE_SWIZZLE_R","",""],[17,"TEXTURE_SWIZZLE_G","",""],[17,"TEXTURE_SWIZZLE_B","",""],[17,"TEXTURE_SWIZZLE_A","",""],[17,"TEXTURE_SWIZZLE_RGBA","",""],[17,"ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS","",""],[17,"ACTIVE_SUBROUTINE_MAX_LENGTH","",""],[17,"ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH","",""],[17,"NUM_COMPATIBLE_SUBROUTINES","",""],[17,"COMPATIBLE_SUBROUTINES","",""],[17,"QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION","",""],[17,"FIRST_VERTEX_CONVENTION","",""],[17,"LAST_VERTEX_CONVENTION","",""],[17,"PROVOKING_VERTEX","",""],[17,"SAMPLE_POSITION","",""],[17,"SAMPLE_MASK","",""],[17,"SAMPLE_MASK_VALUE","",""],[17,"MAX_SAMPLE_MASK_WORDS","",""],[17,"MAX_GEOMETRY_SHADER_INVOCATIONS","",""],[17,"MIN_FRAGMENT_INTERPOLATION_OFFSET","",""],[17,"MAX_FRAGMENT_INTERPOLATION_OFFSET","",""],[17,"FRAGMENT_INTERPOLATION_OFFSET_BITS","",""],[17,"MIN_PROGRAM_TEXTURE_GATHER_OFFSET","",""],[17,"MAX_PROGRAM_TEXTURE_GATHER_OFFSET","",""],[17,"MAX_TRANSFORM_FEEDBACK_BUFFERS","",""],[17,"MAX_VERTEX_STREAMS","",""],[17,"PATCH_VERTICES","",""],[17,"PATCH_DEFAULT_INNER_LEVEL","",""],[17,"PATCH_DEFAULT_OUTER_LEVEL","",""],[17,"TESS_CONTROL_OUTPUT_VERTICES","",""],[17,"TESS_GEN_MODE","",""],[17,"TESS_GEN_SPACING","",""],[17,"TESS_GEN_VERTEX_ORDER","",""],[17,"TESS_GEN_POINT_MODE","",""],[17,"ISOLINES","",""],[17,"FRACTIONAL_ODD","",""],[17,"FRACTIONAL_EVEN","",""],[17,"MAX_PATCH_VERTICES","",""],[17,"MAX_TESS_GEN_LEVEL","",""],[17,"MAX_TESS_CONTROL_UNIFORM_COMPONENTS","",""],[17,"MAX_TESS_EVALUATION_UNIFORM_COMPONENTS","",""],[17,"MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS","",""],[17,"MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS","",""],[17,"MAX_TESS_CONTROL_OUTPUT_COMPONENTS","",""],[17,"MAX_TESS_PATCH_COMPONENTS","",""],[17,"MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS","",""],[17,"MAX_TESS_EVALUATION_OUTPUT_COMPONENTS","",""],[17,"TESS_EVALUATION_SHADER","",""],[17,"TESS_CONTROL_SHADER","",""],[17,"MAX_TESS_CONTROL_UNIFORM_BLOCKS","",""],[17,"MAX_TESS_EVALUATION_UNIFORM_BLOCKS","",""],[17,"COMPRESSED_RGBA_BPTC_UNORM","",""],[17,"COMPRESSED_SRGB_ALPHA_BPTC_UNORM","",""],[17,"COMPRESSED_RGB_BPTC_SIGNED_FLOAT","",""],[17,"COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT","",""],[17,"COPY_READ_BUFFER","",""],[17,"COPY_READ_BUFFER_BINDING","",""],[17,"COPY_WRITE_BUFFER","",""],[17,"COPY_WRITE_BUFFER_BINDING","",""],[17,"MAX_IMAGE_UNITS","",""],[17,"MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS","",""],[17,"MAX_COMBINED_SHADER_OUTPUT_RESOURCES","",""],[17,"IMAGE_BINDING_NAME","",""],[17,"IMAGE_BINDING_LEVEL","",""],[17,"IMAGE_BINDING_LAYERED","",""],[17,"IMAGE_BINDING_LAYER","",""],[17,"IMAGE_BINDING_ACCESS","",""],[17,"DRAW_INDIRECT_BUFFER","",""],[17,"DRAW_INDIRECT_BUFFER_BINDING","",""],[17,"DOUBLE_MAT2","",""],[17,"DOUBLE_MAT3","",""],[17,"DOUBLE_MAT4","",""],[17,"DOUBLE_MAT2x3","",""],[17,"DOUBLE_MAT2x4","",""],[17,"DOUBLE_MAT3x2","",""],[17,"DOUBLE_MAT3x4","",""],[17,"DOUBLE_MAT4x2","",""],[17,"DOUBLE_MAT4x3","",""],[17,"VERTEX_BINDING_BUFFER","",""],[17,"R8_SNORM","",""],[17,"RG8_SNORM","",""],[17,"RGB8_SNORM","",""],[17,"RGBA8_SNORM","",""],[17,"R16_SNORM","",""],[17,"RG16_SNORM","",""],[17,"RGB16_SNORM","",""],[17,"RGBA16_SNORM","",""],[17,"SIGNED_NORMALIZED","",""],[17,"PRIMITIVE_RESTART","",""],[17,"PRIMITIVE_RESTART_INDEX","",""],[17,"DOUBLE_VEC2","",""],[17,"DOUBLE_VEC3","",""],[17,"DOUBLE_VEC4","",""],[17,"TEXTURE_CUBE_MAP_ARRAY","",""],[17,"TEXTURE_BINDING_CUBE_MAP_ARRAY","",""],[17,"PROXY_TEXTURE_CUBE_MAP_ARRAY","",""],[17,"SAMPLER_CUBE_MAP_ARRAY","",""],[17,"SAMPLER_CUBE_MAP_ARRAY_SHADOW","",""],[17,"INT_SAMPLER_CUBE_MAP_ARRAY","",""],[17,"UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY","",""],[17,"IMAGE_1D","",""],[17,"IMAGE_2D","",""],[17,"IMAGE_3D","",""],[17,"IMAGE_2D_RECT","",""],[17,"IMAGE_CUBE","",""],[17,"IMAGE_BUFFER","",""],[17,"IMAGE_1D_ARRAY","",""],[17,"IMAGE_2D_ARRAY","",""],[17,"IMAGE_CUBE_MAP_ARRAY","",""],[17,"IMAGE_2D_MULTISAMPLE","",""],[17,"IMAGE_2D_MULTISAMPLE_ARRAY","",""],[17,"INT_IMAGE_1D","",""],[17,"INT_IMAGE_2D","",""],[17,"INT_IMAGE_3D","",""],[17,"INT_IMAGE_2D_RECT","",""],[17,"INT_IMAGE_CUBE","",""],[17,"INT_IMAGE_BUFFER","",""],[17,"INT_IMAGE_1D_ARRAY","",""],[17,"INT_IMAGE_2D_ARRAY","",""],[17,"INT_IMAGE_CUBE_MAP_ARRAY","",""],[17,"INT_IMAGE_2D_MULTISAMPLE","",""],[17,"INT_IMAGE_2D_MULTISAMPLE_ARRAY","",""],[17,"UNSIGNED_INT_IMAGE_1D","",""],[17,"UNSIGNED_INT_IMAGE_2D","",""],[17,"UNSIGNED_INT_IMAGE_3D","",""],[17,"UNSIGNED_INT_IMAGE_2D_RECT","",""],[17,"UNSIGNED_INT_IMAGE_CUBE","",""],[17,"UNSIGNED_INT_IMAGE_BUFFER","",""],[17,"UNSIGNED_INT_IMAGE_1D_ARRAY","",""],[17,"UNSIGNED_INT_IMAGE_2D_ARRAY","",""],[17,"UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY","",""],[17,"UNSIGNED_INT_IMAGE_2D_MULTISAMPLE","",""],[17,"UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY","",""],[17,"MAX_IMAGE_SAMPLES","",""],[17,"IMAGE_BINDING_FORMAT","",""],[17,"RGB10_A2UI","",""],[17,"MIN_MAP_BUFFER_ALIGNMENT","",""],[17,"IMAGE_FORMAT_COMPATIBILITY_TYPE","",""],[17,"IMAGE_FORMAT_COMPATIBILITY_BY_SIZE","",""],[17,"IMAGE_FORMAT_COMPATIBILITY_BY_CLASS","",""],[17,"MAX_VERTEX_IMAGE_UNIFORMS","",""],[17,"MAX_TESS_CONTROL_IMAGE_UNIFORMS","",""],[17,"MAX_TESS_EVALUATION_IMAGE_UNIFORMS","",""],[17,"MAX_GEOMETRY_IMAGE_UNIFORMS","",""],[17,"MAX_FRAGMENT_IMAGE_UNIFORMS","",""],[17,"MAX_COMBINED_IMAGE_UNIFORMS","",""],[17,"SHADER_STORAGE_BUFFER","",""],[17,"SHADER_STORAGE_BUFFER_BINDING","",""],[17,"SHADER_STORAGE_BUFFER_START","",""],[17,"SHADER_STORAGE_BUFFER_SIZE","",""],[17,"MAX_VERTEX_SHADER_STORAGE_BLOCKS","",""],[17,"MAX_GEOMETRY_SHADER_STORAGE_BLOCKS","",""],[17,"MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS","",""],[17,"MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS","",""],[17,"MAX_FRAGMENT_SHADER_STORAGE_BLOCKS","",""],[17,"MAX_COMPUTE_SHADER_STORAGE_BLOCKS","",""],[17,"MAX_COMBINED_SHADER_STORAGE_BLOCKS","",""],[17,"MAX_SHADER_STORAGE_BUFFER_BINDINGS","",""],[17,"MAX_SHADER_STORAGE_BLOCK_SIZE","",""],[17,"SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT","",""],[17,"DEPTH_STENCIL_TEXTURE_MODE","",""],[17,"MAX_COMPUTE_WORK_GROUP_INVOCATIONS","",""],[17,"UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER","",""],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER","",""],[17,"DISPATCH_INDIRECT_BUFFER","",""],[17,"DISPATCH_INDIRECT_BUFFER_BINDING","",""],[17,"TEXTURE_2D_MULTISAMPLE","",""],[17,"PROXY_TEXTURE_2D_MULTISAMPLE","",""],[17,"TEXTURE_2D_MULTISAMPLE_ARRAY","",""],[17,"PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY","",""],[17,"TEXTURE_BINDING_2D_MULTISAMPLE","",""],[17,"TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY","",""],[17,"TEXTURE_SAMPLES","",""],[17,"TEXTURE_FIXED_SAMPLE_LOCATIONS","",""],[17,"SAMPLER_2D_MULTISAMPLE","",""],[17,"INT_SAMPLER_2D_MULTISAMPLE","",""],[17,"UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE","",""],[17,"SAMPLER_2D_MULTISAMPLE_ARRAY","",""],[17,"INT_SAMPLER_2D_MULTISAMPLE_ARRAY","",""],[17,"UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY","",""],[17,"MAX_COLOR_TEXTURE_SAMPLES","",""],[17,"MAX_DEPTH_TEXTURE_SAMPLES","",""],[17,"MAX_INTEGER_SAMPLES","",""],[17,"MAX_SERVER_WAIT_TIMEOUT","",""],[17,"OBJECT_TYPE","",""],[17,"SYNC_CONDITION","",""],[17,"SYNC_STATUS","",""],[17,"SYNC_FLAGS","",""],[17,"SYNC_FENCE","",""],[17,"SYNC_GPU_COMMANDS_COMPLETE","",""],[17,"UNSIGNALED","",""],[17,"SIGNALED","",""],[17,"ALREADY_SIGNALED","",""],[17,"TIMEOUT_EXPIRED","",""],[17,"CONDITION_SATISFIED","",""],[17,"WAIT_FAILED","",""],[17,"BUFFER_ACCESS_FLAGS","",""],[17,"BUFFER_MAP_LENGTH","",""],[17,"BUFFER_MAP_OFFSET","",""],[17,"MAX_VERTEX_OUTPUT_COMPONENTS","",""],[17,"MAX_GEOMETRY_INPUT_COMPONENTS","",""],[17,"MAX_GEOMETRY_OUTPUT_COMPONENTS","",""],[17,"MAX_FRAGMENT_INPUT_COMPONENTS","",""],[17,"CONTEXT_PROFILE_MASK","",""],[17,"UNPACK_COMPRESSED_BLOCK_WIDTH","",""],[17,"UNPACK_COMPRESSED_BLOCK_HEIGHT","",""],[17,"UNPACK_COMPRESSED_BLOCK_DEPTH","",""],[17,"UNPACK_COMPRESSED_BLOCK_SIZE","",""],[17,"PACK_COMPRESSED_BLOCK_WIDTH","",""],[17,"PACK_COMPRESSED_BLOCK_HEIGHT","",""],[17,"PACK_COMPRESSED_BLOCK_DEPTH","",""],[17,"PACK_COMPRESSED_BLOCK_SIZE","",""],[17,"TEXTURE_IMMUTABLE_FORMAT","",""],[17,"MAX_DEBUG_MESSAGE_LENGTH","",""],[17,"MAX_DEBUG_LOGGED_MESSAGES","",""],[17,"DEBUG_LOGGED_MESSAGES","",""],[17,"DEBUG_SEVERITY_HIGH","",""],[17,"DEBUG_SEVERITY_MEDIUM","",""],[17,"DEBUG_SEVERITY_LOW","",""],[17,"QUERY_BUFFER","",""],[17,"QUERY_BUFFER_BINDING","",""],[17,"QUERY_RESULT_NO_WAIT","",""],[17,"TEXTURE_BUFFER_OFFSET","",""],[17,"TEXTURE_BUFFER_SIZE","",""],[17,"TEXTURE_BUFFER_OFFSET_ALIGNMENT","",""],[17,"COMPUTE_SHADER","",""],[17,"MAX_COMPUTE_UNIFORM_BLOCKS","",""],[17,"MAX_COMPUTE_TEXTURE_IMAGE_UNITS","",""],[17,"MAX_COMPUTE_IMAGE_UNIFORMS","",""],[17,"MAX_COMPUTE_WORK_GROUP_COUNT","",""],[17,"MAX_COMPUTE_WORK_GROUP_SIZE","",""],[17,"COMPRESSED_R11_EAC","",""],[17,"COMPRESSED_SIGNED_R11_EAC","",""],[17,"COMPRESSED_RG11_EAC","",""],[17,"COMPRESSED_SIGNED_RG11_EAC","",""],[17,"COMPRESSED_RGB8_ETC2","",""],[17,"COMPRESSED_SRGB8_ETC2","",""],[17,"COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","",""],[17,"COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","",""],[17,"COMPRESSED_RGBA8_ETC2_EAC","",""],[17,"COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","",""],[17,"ATOMIC_COUNTER_BUFFER","",""],[17,"ATOMIC_COUNTER_BUFFER_BINDING","",""],[17,"ATOMIC_COUNTER_BUFFER_START","",""],[17,"ATOMIC_COUNTER_BUFFER_SIZE","",""],[17,"ATOMIC_COUNTER_BUFFER_DATA_SIZE","",""],[17,"ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS","",""],[17,"ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES","",""],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER","",""],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER","",""],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER","",""],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER","",""],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER","",""],[17,"MAX_VERTEX_ATOMIC_COUNTER_BUFFERS","",""],[17,"MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS","",""],[17,"MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS","",""],[17,"MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS","",""],[17,"MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS","",""],[17,"MAX_COMBINED_ATOMIC_COUNTER_BUFFERS","",""],[17,"MAX_VERTEX_ATOMIC_COUNTERS","",""],[17,"MAX_TESS_CONTROL_ATOMIC_COUNTERS","",""],[17,"MAX_TESS_EVALUATION_ATOMIC_COUNTERS","",""],[17,"MAX_GEOMETRY_ATOMIC_COUNTERS","",""],[17,"MAX_FRAGMENT_ATOMIC_COUNTERS","",""],[17,"MAX_COMBINED_ATOMIC_COUNTERS","",""],[17,"MAX_ATOMIC_COUNTER_BUFFER_SIZE","",""],[17,"ACTIVE_ATOMIC_COUNTER_BUFFERS","",""],[17,"UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX","",""],[17,"UNSIGNED_INT_ATOMIC_COUNTER","",""],[17,"MAX_ATOMIC_COUNTER_BUFFER_BINDINGS","",""],[17,"DEBUG_OUTPUT","",""],[17,"UNIFORM","",""],[17,"UNIFORM_BLOCK","",""],[17,"PROGRAM_INPUT","",""],[17,"PROGRAM_OUTPUT","",""],[17,"BUFFER_VARIABLE","",""],[17,"SHADER_STORAGE_BLOCK","",""],[17,"IS_PER_PATCH","",""],[17,"VERTEX_SUBROUTINE","",""],[17,"TESS_CONTROL_SUBROUTINE","",""],[17,"TESS_EVALUATION_SUBROUTINE","",""],[17,"GEOMETRY_SUBROUTINE","",""],[17,"FRAGMENT_SUBROUTINE","",""],[17,"COMPUTE_SUBROUTINE","",""],[17,"VERTEX_SUBROUTINE_UNIFORM","",""],[17,"TESS_CONTROL_SUBROUTINE_UNIFORM","",""],[17,"TESS_EVALUATION_SUBROUTINE_UNIFORM","",""],[17,"GEOMETRY_SUBROUTINE_UNIFORM","",""],[17,"FRAGMENT_SUBROUTINE_UNIFORM","",""],[17,"COMPUTE_SUBROUTINE_UNIFORM","",""],[17,"TRANSFORM_FEEDBACK_VARYING","",""],[17,"ACTIVE_RESOURCES","",""],[17,"MAX_NAME_LENGTH","",""],[17,"MAX_NUM_ACTIVE_VARIABLES","",""],[17,"MAX_NUM_COMPATIBLE_SUBROUTINES","",""],[17,"NAME_LENGTH","",""],[17,"TYPE","",""],[17,"ARRAY_SIZE","",""],[17,"OFFSET","",""],[17,"BLOCK_INDEX","",""],[17,"ARRAY_STRIDE","",""],[17,"MATRIX_STRIDE","",""],[17,"IS_ROW_MAJOR","",""],[17,"ATOMIC_COUNTER_BUFFER_INDEX","",""],[17,"BUFFER_BINDING","",""],[17,"BUFFER_DATA_SIZE","",""],[17,"NUM_ACTIVE_VARIABLES","",""],[17,"ACTIVE_VARIABLES","",""],[17,"REFERENCED_BY_VERTEX_SHADER","",""],[17,"REFERENCED_BY_TESS_CONTROL_SHADER","",""],[17,"REFERENCED_BY_TESS_EVALUATION_SHADER","",""],[17,"REFERENCED_BY_GEOMETRY_SHADER","",""],[17,"REFERENCED_BY_FRAGMENT_SHADER","",""],[17,"REFERENCED_BY_COMPUTE_SHADER","",""],[17,"TOP_LEVEL_ARRAY_SIZE","",""],[17,"TOP_LEVEL_ARRAY_STRIDE","",""],[17,"LOCATION","",""],[17,"LOCATION_INDEX","",""],[17,"FRAMEBUFFER_DEFAULT_WIDTH","",""],[17,"FRAMEBUFFER_DEFAULT_HEIGHT","",""],[17,"FRAMEBUFFER_DEFAULT_LAYERS","",""],[17,"FRAMEBUFFER_DEFAULT_SAMPLES","",""],[17,"FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS","",""],[17,"MAX_FRAMEBUFFER_WIDTH","",""],[17,"MAX_FRAMEBUFFER_HEIGHT","",""],[17,"MAX_FRAMEBUFFER_LAYERS","",""],[17,"MAX_FRAMEBUFFER_SAMPLES","",""],[17,"LOCATION_COMPONENT","",""],[17,"TRANSFORM_FEEDBACK_BUFFER_INDEX","",""],[17,"TRANSFORM_FEEDBACK_BUFFER_STRIDE","",""],[17,"CLIP_ORIGIN","",""],[17,"CLIP_DEPTH_MODE","",""],[17,"NEGATIVE_ONE_TO_ONE","",""],[17,"ZERO_TO_ONE","",""],[17,"CLEAR_TEXTURE","",""],[17,"NUM_SAMPLE_COUNTS","",""],[11,"new","","Creates a `FnPtr` from a load attempt.",0]],"paths":[[3,"FnPtr"]]};

searchIndex['image'] = {"items":[[0,"","image","This crate provides native rust implementations of\nImage encoders and decoders and basic image manipulation\nfunctions."],[3,"Luma","","Grayscale colors"],[3,"LumaA","","Grayscale colors + alpha channel"],[3,"Rgb","","RGB colors"],[3,"Rgba","","RGB colors + alpha channel"],[3,"SubImage","","A View into another image"],[3,"ImageBuffer","","Generic image buffer"],[3,"Pixels","","Immutable pixel iterator"],[3,"MutPixels","","Mutable pixel iterator"],[3,"Frame","","A single animation frame"],[3,"Frames","","Hold the frames of the animated image"],[4,"ColorType","","An enumeration over supported color types and their bit depths"],[13,"Gray","","Pixel is grayscale",0],[13,"RGB","","Pixel contains R, G and B channels",0],[13,"Palette","","Pixel is an index into a color palette",0],[13,"GrayA","","Pixel is grayscale with an alpha channel",0],[13,"RGBA","","Pixel is RGB with an alpha channel",0],[4,"ImageError","","An enumeration of Image Errors"],[13,"FormatError","","The Image is not formatted properly",1],[13,"DimensionError","","The Image's dimensions are either too small or too large",1],[13,"UnsupportedError","","The Decoder does not support this image format",1],[13,"UnsupportedColor","","The Decoder does not support this color type",1],[13,"NotEnoughData","","Not enough data was provided to the Decoder\nto decode the image",1],[13,"IoError","","An I/O Error occurred while decoding the image",1],[13,"ImageEnd","","The end of the image has been reached",1],[4,"ImageFormat","","An enumeration of supported image formats.\nNot all formats support both encoding and decoding."],[13,"PNG","","An Image in PNG Format",2],[13,"JPEG","","An Image in JPEG Format",2],[13,"GIF","","An Image in GIF Format",2],[13,"WEBP","","An Image in WEBP Format",2],[13,"PPM","","An Image in PPM Format",2],[13,"TIFF","","An Image in TIFF Format",2],[13,"TGA","","An Image in TGA Format",2],[4,"FilterType","","Available Sampling Filters"],[13,"Nearest","","Nearest Neighbor",3],[13,"Triangle","","Linear Filter",3],[13,"CatmullRom","","Cubic Filter",3],[13,"Gaussian","","Gaussian Filter",3],[13,"Lanczos3","","Lanczos with window 3",3],[4,"DynamicImage","","A Dynamic Image"],[13,"ImageLuma8","","Each pixel in this image is 8-bit Luma",4],[13,"ImageLumaA8","","Each pixel in this image is 8-bit Luma with alpha",4],[13,"ImageRgb8","","Each pixel in this image is 8-bit Rgb",4],[13,"ImageRgba8","","Each pixel in this image is 8-bit Rgb with alpha",4],[5,"open","","Open the image located at the path specified.\nThe image's format is determined from the path's file extension."],[5,"load","","Create a new image from a Reader"],[5,"load_from_memory","","Create a new image from a byte slice\nMakes an educated guess about the image format.\nTGA is not supported by this function."],[5,"load_from_memory_with_format","","Create a new image from a byte slice"],[5,"save_buffer","","Saves the supplied buffer to a file at the path specified."],[0,"math","","Mathematical helper functions and types."],[0,"utils","image::math","Shared mathematical utility functions."],[5,"clamp","image::math::utils","Cut value to be inside given range"],[0,"nq","image::math","NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.\nSee \"Kohonen neural networks for optimal colour quantization\"\nin \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367.\nfor a discussion of the algorithm.\nSee also  http://www.acm.org/~dekker/NEUQUANT.HTML"],[3,"NeuQuant","image::math::nq","Neural network color quantizer"],[11,"new","","Creates a new neuronal network and trains it with the supplied data",5],[11,"init","","Initializes the neuronal network and trains it with the supplied data",5],[11,"map_pixel","","Maps the pixel in-place to the best-matching color in the color map",5],[11,"index_of","","Finds the best-matching index in the color map for `pixel`",5],[0,"imageops","image","Image Processing Functions"],[5,"rotate90","image::imageops","Rotate an image 90 degrees clockwise."],[5,"rotate180","","Rotate an image 180 degrees clockwise."],[5,"rotate270","","Rotate an image 270 degrees clockwise."],[5,"flip_horizontal","","Flip an image horizontally"],[5,"flip_vertical","","Flip an image vertically"],[5,"filter3x3","","Perform a 3x3 box filter on the supplied image.\n```kernel``` is an array of the filter weights of length 9."],[5,"resize","","Resize the supplied image to the specified dimensions\n```nwidth``` and ```nheight``` are the new dimensions.\n```filter``` is the sampling filter to use."],[5,"blur","","Performs a Gaussian blur on the supplied image.\n```sigma``` is a measure of how much to blur by."],[5,"unsharpen","","Performs an unsharpen mask on the supplied image\n```sigma``` is the amount to blur the image by.\n```threshold``` is the threshold for the difference between\nsee https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking"],[5,"crop","","Return a mutable view into an image"],[5,"overlay","","Overlay an image at a given coordinate (x, y)"],[0,"colorops","","Public only because of Rust bug:\nhttps://github.com/rust-lang/rust/issues/18241\nFunctions for altering and converting the color of pixelbufs"],[3,"BiLevel","image::imageops::colorops","A bi-level color map"],[5,"grayscale","","Convert the supplied image to grayscale"],[5,"invert","","Invert each pixel within the supplied image\nThis function operates in place."],[5,"contrast","","Adjust the contrast of the supplied image\n```contrast``` is the amount to adjust the contrast by.\nNegative values decrease the contrast and positive values increase the contrast."],[5,"brighten","","Brighten the supplied image\n```value``` is the amount to brighten each pixel by.\nNegative values decrease the brightness and positive values increase it."],[5,"dither","","Reduces the colors of the image using the supplied `color_map` while applying\nFloyd-Steinberg dithering to improve the visual conception "],[5,"index_colors","","Reduces the colors using the supplied `color_map` and returns an image of the indices"],[8,"ColorMap","","A color map"],[16,"Color","image::imageops::colorops::ColorMap","The color type on which the map operates on"],[10,"index_of","image::imageops::colorops","Returns the index of the closed match of `color`\nin the color map.",6],[10,"map_color","","Maps `color` to the closes color in the color map.",6],[6,"Color","",""],[11,"index_of","","",7],[11,"map_color","","",7],[6,"Color","",""],[11,"index_of","image::math::nq","",5],[11,"map_color","","",5],[0,"webp","image","Decoding of Webp Images"],[3,"WebpDecoder","image::webp","A Representation of a Webp Image format decoder."],[11,"new","","Create a new WebpDecoder from the Reader ```r```.\nThis function takes ownership of the Reader.",8],[11,"dimensions","","",8],[11,"colortype","","",8],[11,"row_len","","",8],[11,"read_scanline","","",8],[11,"read_image","","",8],[0,"vp8","","An implementation of the VP8 Video Codec"],[3,"Frame","image::webp::vp8","A Representation of the last decoded video frame"],[12,"width","","The width of the luma plane",9],[12,"height","","The height of the luma plane",9],[12,"ybuf","","The luma plane of the frame",9],[12,"keyframe","","Indicates whether this frame is a keyframe",9],[12,"for_display","","Indicates whether this frame is intended for display",9],[12,"pixel_type","","The pixel type of the frame as defined by Section 9.2\nof the VP8 Specification",9],[3,"VP8Decoder","","VP8 Decoder\nOnly decodes keyframes"],[11,"clone","","",9],[11,"fmt","","",9],[11,"default","","",9],[11,"new","","Create a new decoder.\nThe reader must present a raw vp8 bitstream to the decoder",10],[11,"decode_frame","","Decodes the current frame and returns a reference to it",10],[0,"ppm","image","Encoding of portable pixmap Images"],[3,"PPMEncoder","image::ppm","A representation of a PPM encoder."],[11,"new","","Create a new PPMEncoder from the Writer ```w```.\nThis function takes ownership of the Writer.",11],[11,"encode","","Encode the buffer ```im``` as a PPM image.\n```width``` and ```height``` are the dimensions of the buffer.\n```color``` is the buffers ColorType.",11],[0,"png","image","Decoding and Encoding of PNG Images"],[3,"PNGDecoder","image::png","The representation of a PNG decoder"],[3,"PNGEncoder","","The representation of a PNG encoder"],[11,"new","","Create a new decoder that decodes from the stream ```r```",12],[11,"palette","","Returns a reference to the color palette used for indexed\ncolor images.\nEach array element is a tuple of RGB values.",12],[11,"dimensions","","",12],[11,"colortype","","",12],[11,"row_len","","",12],[11,"read_scanline","","",12],[11,"read_image","","",12],[11,"new","","Create a new encoder that writes its output to ```w```",13],[11,"encode","","Encodes the image ```image```\nthat has dimensions ```width``` and ```height```\nand ```ColorType``` ```c```",13],[0,"zlib","","An Implementation of RFC 1950"],[3,"ZlibDecoder","image::png::zlib","A Zlib compressed stream decoder."],[11,"new","","Create a new decoder that decodes from a Reader",14],[11,"inner","","Return a mutable reference to the wrapped Reader",14],[11,"read","","",14],[0,"deflate","image::png","An Implementation of RFC 1951"],[3,"Inflater","image::png::deflate","A DEFLATE compressed stream decoder."],[11,"new","","Create a new decoder that decodes from a Reader",15],[11,"eof","","Indicate whether the end of the stream has been reached.",15],[11,"inner","","Return a mutable reference to the wrapped Reader",15],[11,"read","","",15],[0,"hash","image::png","This module provides implementations of common hashing algorithms."],[3,"Adler32","image::png::hash","An Implementation of the Adler-32 checksum"],[3,"Crc32","","An Implementation of the Crc-32 checksum"],[11,"new","","Create a new hasher.",16],[11,"update","","Update the internal hasher with the bytes from ```buf```",16],[11,"checksum","","Return the computed hash.",16],[11,"reset","","Reset this hasher to its initial state.",16],[11,"new","","Create a new hasher.",17],[11,"update","","Update the internal hasher with the bytes from ```buf```",17],[11,"checksum","","Return the computed hash.",17],[11,"reset","","Reset this hasher to its initial state.",17],[0,"jpeg","image","Decoding and Encoding of JPEG Images"],[3,"JPEGDecoder","image::jpeg","The representation of a JPEG decoder"],[3,"JPEGEncoder","","The representation of a JPEG encoder"],[3,"Component","","A representation of a JPEG component"],[12,"id","","The Component's identifier",18],[12,"h","","Horizontal sampling factor",18],[12,"v","","Vertical sampling factor",18],[12,"tq","","The quantization table selector",18],[12,"dc_table","","Index to the Huffman DC Table",18],[12,"ac_table","","Index to the AC Huffman Table",18],[12,"dc_pred","","The dc prediction of the component",18],[11,"new","","Create a new encoder that writes its output to ```w```",19],[11,"encode","","Encodes the image ```image```\nthat has dimensions ```width``` and ```height```\nand ```ColorType``` ```c```\nThe Image in encoded with subsampling ratio 4:2:2",19],[11,"clone","","",18],[11,"new","","Create a new decoder that decodes from the stream ```r```",20],[11,"dimensions","","",20],[11,"colortype","","",20],[11,"row_len","","",20],[11,"read_scanline","","",20],[11,"read_image","","",20],[0,"gif","image","Decoding of GIF Images"],[3,"GIFDecoder","image::gif","A gif decoder"],[3,"GIFEncoder","","A GIF encoder."],[4,"ColorMode","","The color mode the encoder will use to encode the image."],[13,"TrueColor","","Image will be encoded in multiple frames if more than 256 colors are present",21],[13,"Indexed","","Number of colors will be reduced",21],[11,"new","","Creates a new GIF decoder",22],[11,"dimensions","","",22],[11,"colortype","","",22],[11,"row_len","","",22],[11,"read_scanline","","",22],[11,"read_image","","",22],[11,"fmt","","",21],[11,"new","","Creates a new GIF encoder",23],[11,"encode","","Encodes the image",23],[0,"tiff","image","Decoding and Encoding of TIFF Images"],[3,"TIFFDecoder","image::tiff","The representation of a PNG decoder"],[4,"ByteOrder","","Byte order of the TIFF file."],[13,"LittleEndian","","little endian byte order",24],[13,"BigEndian","","big endian byte order",24],[11,"fmt","","",25],[11,"new","","Create a new decoder that decodes from the stream ```r```",25],[11,"init","","Initializes the decoder.",25],[11,"next_image","","Reads in the next image.\nIf there is no further image in the TIFF file a format error is return.\nTo determine whether there are more images call `TIFFDecoder::more_images` instead.",25],[11,"more_images","","Returns `true` if there is at least one more image available.",25],[11,"byte_order","","Returns the byte_order",25],[11,"read_short","","Reads a TIFF short value",25],[11,"read_long","","Reads a TIFF long value",25],[11,"read_offset","","Reads a TIFF IFA offset/value field",25],[11,"goto_offset","","Moves the cursor to the specified offset",25],[11,"dimensions","","",25],[11,"colortype","","",25],[11,"row_len","","",25],[11,"read_scanline","","",25],[11,"read_image","","",25],[11,"fmt","","",24],[0,"tga","image","Decoding of TGA Images"],[3,"TGADecoder","image::tga","The representation of a TGA decoder"],[11,"new","","Create a new decoder that decodes from the stream `r`",26],[11,"dimensions","","",26],[11,"colortype","","",26],[11,"row_len","","",26],[11,"read_scanline","","",26],[11,"read_image","","",26],[11,"eq","image","",1],[11,"ne","","",1],[11,"fmt","","",1],[11,"clone","","",1],[11,"fmt","","",1],[11,"from_error","","",1],[11,"fmt","","",2],[11,"eq","","",2],[11,"ne","","",2],[11,"next","","",27],[11,"next","","",28],[11,"new","","Construct a new subimage",29],[11,"inner_mut","","Returns a mutable reference to the wrapped image.",29],[11,"change_bounds","","Change the coordinates of this subimage.",29],[11,"to_image","","Convert this subimage to an ImageBuffer",29],[11,"dimensions","","",29],[11,"bounds","","",29],[11,"get_pixel","","",29],[11,"put_pixel","","",29],[11,"blend_pixel","","",29],[11,"get_pixel_mut","","",29],[11,"new_luma8","","Creates a dynamic image backed by a buffer of grey pixels.",4],[11,"new_luma_a8","","Creates a dynamic image backed by a buffer of grey\npixels with transparency.",4],[11,"new_rgb8","","Creates a dynamic image backed by a buffer of RGB pixels.",4],[11,"new_rgba8","","Creates a dynamic image backed by a buffer of RGBA pixels.",4],[11,"to_rgb","","Returns a copy of this image as an RGB image.",4],[11,"to_rgba","","Returns a copy of this image as an RGBA image.",4],[11,"to_luma","","Returns a copy of this image as a Luma image.",4],[11,"to_luma_alpha","","Returns a copy of this image as a LumaA image.",4],[11,"crop","","Return a cut out of this image delimited by the bounding rectangle.",4],[11,"as_rgb8","","Return a reference to an 8bit RGB image",4],[11,"as_mut_rgb8","","Return a mutable reference to an 8bit RGB image",4],[11,"as_rgba8","","Return a reference to an 8bit RGBA image",4],[11,"as_mut_rgba8","","Return a mutable reference to an 8bit RGBA image",4],[11,"as_luma8","","Return a reference to an 8bit Grayscale image",4],[11,"as_mut_luma8","","Return a mutable reference to an 8bit Grayscale image",4],[11,"as_luma_alpha8","","Return a reference to an 8bit Grayscale image with an alpha channel",4],[11,"as_mut_luma_alpha8","","Return a mutable reference to an 8bit Grayscale image with an alpha channel",4],[11,"raw_pixels","","Return this image's pixels as a byte vector.",4],[11,"color","","Return this image's color type.",4],[11,"grayscale","","Return a grayscale version of this image.",4],[11,"invert","","Invert the colors of this image.\nThis method operates inplace.",4],[11,"resize","","Resize this image using the specified filter algorithm.\nReturns a new image. The image's aspect ratio is preserved.\n```nwidth``` and ```nheight``` are the new image's dimensions",4],[11,"resize_exact","","Resize this image using the specified filter algorithm.\nReturns a new image. Does not preserve aspect ratio.\n```nwidth``` and ```nheight``` are the new image's dimensions",4],[11,"blur","","Performs a Gaussian blur on this image.\n```sigma``` is a measure of how much to blur by.",4],[11,"unsharpen","","Performs an unsharpen mask on this image\n```sigma``` is the amount to blur the image by.\n```threshold``` is a control of how much to sharpen.\nsee https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking",4],[11,"filter3x3","","Filters this image with the specified 3x3 kernel.",4],[11,"adjust_contrast","","Adjust the contrast of this image.\n```contrast``` is the amount to adjust the contrast by.\nNegative values decrease the contrast and positive values increase the contrast.",4],[11,"brighten","","Brighten the pixels of this image.\n```value``` is the amount to brighten each pixel by.\nNegative values decrease the brightness and positive values increase it.",4],[11,"flipv","","Flip this image vertically",4],[11,"fliph","","Flip this image horizontally",4],[11,"rotate90","","Rotate this image 90 degrees clockwise.",4],[11,"rotate180","","Rotate this image 180 degrees clockwise.",4],[11,"rotate270","","Rotate this image 270 degrees clockwise.",4],[11,"save","","Encode this image and write it to ```w```",4],[11,"dimensions","","",4],[11,"bounds","","",4],[11,"get_pixel","","",4],[11,"put_pixel","","",4],[11,"blend_pixel","","",4],[11,"get_pixel_mut","","",4],[11,"clone","","",0],[11,"fmt","","",0],[11,"eq","","",0],[11,"ne","","",0],[11,"hash","","",30],[11,"fmt","","",30],[11,"clone","","",30],[11,"eq","","",30],[11,"ne","","",30],[11,"channel_count","","",30],[11,"color_model","","",30],[11,"color_type","","",30],[11,"channels","","",30],[11,"channels_mut","","",30],[11,"channels4","","",30],[11,"from_channels","","",30],[11,"from_slice","","",30],[11,"from_slice_mut","","",30],[11,"to_rgb","","",30],[11,"to_rgba","","",30],[11,"to_luma","","",30],[11,"to_luma_alpha","","",30],[11,"map","","",30],[11,"apply","","",30],[11,"map_with_alpha","","",30],[11,"apply_with_alpha","","",30],[11,"map2","","",30],[11,"apply2","","",30],[11,"invert","","",30],[11,"blend","","",30],[11,"index","","",30],[11,"index_mut","","",30],[11,"hash","","",31],[11,"fmt","","",31],[11,"clone","","",31],[11,"eq","","",31],[11,"ne","","",31],[11,"channel_count","","",31],[11,"color_model","","",31],[11,"color_type","","",31],[11,"channels","","",31],[11,"channels_mut","","",31],[11,"channels4","","",31],[11,"from_channels","","",31],[11,"from_slice","","",31],[11,"from_slice_mut","","",31],[11,"to_rgb","","",31],[11,"to_rgba","","",31],[11,"to_luma","","",31],[11,"to_luma_alpha","","",31],[11,"map","","",31],[11,"apply","","",31],[11,"map_with_alpha","","",31],[11,"apply_with_alpha","","",31],[11,"map2","","",31],[11,"apply2","","",31],[11,"invert","","",31],[11,"blend","","",31],[11,"index","","",31],[11,"index_mut","","",31],[11,"hash","","",32],[11,"fmt","","",32],[11,"clone","","",32],[11,"eq","","",32],[11,"ne","","",32],[11,"channel_count","","",32],[11,"color_model","","",32],[11,"color_type","","",32],[11,"channels","","",32],[11,"channels_mut","","",32],[11,"channels4","","",32],[11,"from_channels","","",32],[11,"from_slice","","",32],[11,"from_slice_mut","","",32],[11,"to_rgb","","",32],[11,"to_rgba","","",32],[11,"to_luma","","",32],[11,"to_luma_alpha","","",32],[11,"map","","",32],[11,"apply","","",32],[11,"map_with_alpha","","",32],[11,"apply_with_alpha","","",32],[11,"map2","","",32],[11,"apply2","","",32],[11,"invert","","",32],[11,"blend","","",32],[11,"index","","",32],[11,"index_mut","","",32],[11,"hash","","",33],[11,"fmt","","",33],[11,"clone","","",33],[11,"eq","","",33],[11,"ne","","",33],[11,"channel_count","","",33],[11,"color_model","","",33],[11,"color_type","","",33],[11,"channels","","",33],[11,"channels_mut","","",33],[11,"channels4","","",33],[11,"from_channels","","",33],[11,"from_slice","","",33],[11,"from_slice_mut","","",33],[11,"to_rgb","","",33],[11,"to_rgba","","",33],[11,"to_luma","","",33],[11,"to_luma_alpha","","",33],[11,"map","","",33],[11,"apply","","",33],[11,"map_with_alpha","","",33],[11,"apply_with_alpha","","",33],[11,"map2","","",33],[11,"apply2","","",33],[11,"invert","","",33],[11,"blend","","",33],[11,"index","","",33],[11,"index_mut","","",33],[11,"from_color","","",31],[11,"from_color","","",31],[11,"from_color","","",31],[11,"from_color","","",33],[11,"from_color","","",33],[11,"from_color","","",33],[11,"from_color","","",32],[11,"from_color","","",32],[11,"from_color","","",32],[11,"from_color","","",30],[11,"from_color","","",30],[11,"from_color","","",30],[11,"blend","","",33],[11,"blend","","",31],[11,"blend","","",32],[11,"blend","","",30],[11,"invert","","",33],[11,"invert","","",31],[11,"invert","","",32],[11,"invert","","",30],[11,"as_mut_slice","collections::vec","",34],[11,"from_raw","image","Contructs a buffer from a generic container\n(for example a `Vec` or a slice)\nReturns None if the container is not big enough",35],[11,"into_raw","","Returns the underlying raw buffer",35],[11,"dimensions","","The width and height of this image.",35],[11,"width","","The width of this image.",35],[11,"height","","The height of this image.",35],[11,"as_slice","","The raw image data as a slice.",35],[11,"as_mut_slice","","The raw image data as a slice.",35],[11,"pixels","","Returns an iterator over the pixels of this image.",35],[11,"pixels_mut","","Returns an iterator over the mutable pixels of this image.\nThe iterator yields the coordinates of each pixel\nalong with a mutable reference to them.",35],[11,"enumerate_pixels","","Enumerates over the pixels of the image.\nThe iterator yields the coordinates of each pixel\nalong with a reference to them.",35],[11,"enumerate_pixels_mut","","Enumerates over the pixels of the image.",35],[11,"get_pixel","","Gets a reference to the pixel at location `(x, y)`",35],[11,"get_pixel_mut","","Gets a reference to the mutable pixel at location `(x, y)`",35],[11,"put_pixel","","Puts a pixel at location `(x, y)`",35],[11,"save","","Saves the buffer to a file at the path specified.",35],[11,"clone","","",35],[11,"dimensions","","",35],[11,"bounds","","",35],[11,"get_pixel","","",35],[11,"get_pixel_mut","","",35],[11,"put_pixel","","",35],[11,"blend_pixel","","Put a pixel at location (x, y), taking into account alpha channels",35],[11,"index","","",35],[11,"new","","Creates a new image buffer based on a `Vec<P::Subpixel>`.",35],[11,"from_pixel","","Constructs a new ImageBuffer by copying a pixel",35],[11,"from_fn","","Constructs a new ImageBuffer by repeated application of the supplied function.\nThe arguments to the function are the pixel's x and y coordinates.",35],[11,"from_vec","","Creates an image buffer out of an existing buffer.\nReturns None if the buffer is not big enough.",35],[11,"into_vec","","Consumes the image buffer and returns the underlying data\nas an owned buffer",35],[11,"convert","","",35],[11,"new","","Contructs a new frame iterator",36],[11,"clone","","",37],[11,"new","","Contructs a new frame",37],[11,"from_parts","","Contructs a new frame",37],[11,"delay","","Delay of this frame",37],[11,"buffer","","Returns the image buffer",37],[11,"into_buffer","","Returns the image buffer",37],[11,"left","","Returns the x offset",37],[11,"top","","Returns the x offset",37],[11,"next","","",36],[6,"ImageResult","","Result of an image decoding/encoding process"],[6,"RgbImage","","Sendable Rgb image buffer"],[6,"RgbaImage","","Sendable Rgb + alpha channel image buffer"],[6,"GrayImage","","Sendable grayscale image buffer"],[6,"GrayAlphaImage","","Sendable grayscale + alpha channel image buffer"],[8,"Primitive","","Primitive trait from old stdlib, added max_value"],[10,"max_value","","The maximum value of primitive.",38],[8,"Pixel","","A generalized pixel."],[16,"Subpixel","image::Pixel","The underlying subpixel type."],[10,"channel_count","image","Returns the number of channels of this pixel type.",39],[10,"channels","","Returns the components as a slice.",39],[10,"channels_mut","","Returns the components as a mutable slice",39],[10,"color_model","","Returns a string that can help to interprete the meaning each channel\nSee [gimp babl](http://gegl.org/babl/).",39],[10,"color_type","","Returns the ColorType for this pixel format",39],[10,"channels4","","Returns the channels of this pixel as a 4 tuple. If the pixel\nhas less than 4 channels the remainder is filled with the maximum value\nTODO deprecate",39],[10,"from_channels","","Construct a pixel from the 4 channels a, b, c and d.\nIf the pixel does not contain 4 channels the extra are ignored.\nTODO deprecate",39],[10,"from_slice","","Returns a view into a slice.",39],[10,"from_slice_mut","","Returns mutable view into a mutable slice.",39],[10,"to_rgb","","Convert this pixel to RGB",39],[10,"to_rgba","","Convert this pixel to RGB with an alpha channel",39],[10,"to_luma","","Convert this pixel to luma",39],[10,"to_luma_alpha","","Convert this pixel to luma with an alpha channel",39],[10,"map","","Apply the function ```f``` to each channel of this pixel.",39],[10,"apply","","Apply the function ```f``` to each channel of this pixel.",39],[10,"map_with_alpha","","Apply the function f to each channel except the alpha channel.\nApply the function g to the alpha channel.",39],[10,"apply_with_alpha","","Apply the function f to each channel except the alpha channel.\nApply the function g to the alpha channel. Works in-place.",39],[10,"map2","","Apply the function ```f``` to each channel of this pixel and\n```other``` pairwise.",39],[10,"apply2","","Apply the function ```f``` to each channel of this pixel and\n```other``` pairwise. Works in-place.",39],[10,"invert","","Invert this pixel",39],[10,"blend","","Blend the color of a given pixel into ourself, taking into account alpha channels",39],[8,"ImageDecoder","","The trait that all decoders implement"],[10,"dimensions","","Returns a tuple containing the width and height of the image",40],[10,"colortype","","Returns the color type of the image e.g RGB(8) (8bit RGB)",40],[10,"row_len","","Returns the length in bytes of one decoded row of the image",40],[11,"is_animated","","Returns true if the image is animated",40],[11,"into_frames","","Returns the frames of the image\nIf the image is not animated it returns a single frame",40],[10,"read_scanline","","Reads one row from the image into buf and returns the row index",40],[10,"read_image","","Decodes the entire image and return it as a Vector",40],[11,"load_rect","","Decodes a specific region of the image, represented by the rectangle\nstarting from ```x``` and ```y``` and having ```length``` and ```width```",40],[8,"GenericImage","","A trait for manipulating images."],[16,"Pixel","image::GenericImage","The type of pixel."],[10,"dimensions","image","The width and height of this image.",41],[11,"width","","The width of this image.",41],[11,"height","","The height of this image.",41],[10,"bounds","","The bounding rectangle of this image.",41],[11,"in_bounds","","Returns true if this x, y coordinate is contained inside the image.",41],[10,"get_pixel","","Returns the pixel located at (x, y)",41],[10,"get_pixel_mut","","Puts a pixel at location (x, y)",41],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y)",41],[10,"put_pixel","","Put a pixel at location (x, y)",41],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y)",41],[10,"blend_pixel","","Put a pixel at location (x, y), taking into account alpha channels",41],[11,"pixels","","Returns an Iterator over the pixels of this image.\nThe iterator yields the coordinates of each pixel\nalong with their value",41],[11,"pixels_mut","","Returns an Iterator over mutable pixels of this image.\nThe iterator yields the coordinates of each pixel\nalong with a mutable reference to them.",41],[11,"copy_from","","Copies all of the pixels from another image into this image.",41],[11,"sub_image","","Returns a subimage that is a view into this image.",41],[11,"is_animated","","Returns true if the image is animated",40],[11,"into_frames","","Returns the frames of the image\nIf the image is not animated it returns a single frame",40],[11,"load_rect","","Decodes a specific region of the image, represented by the rectangle\nstarting from ```x``` and ```y``` and having ```length``` and ```width```",40],[11,"width","","The width of this image.",41],[11,"height","","The height of this image.",41],[11,"in_bounds","","Returns true if this x, y coordinate is contained inside the image.",41],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y)",41],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y)",41],[11,"pixels","","Returns an Iterator over the pixels of this image.\nThe iterator yields the coordinates of each pixel\nalong with their value",41],[11,"pixels_mut","","Returns an Iterator over mutable pixels of this image.\nThe iterator yields the coordinates of each pixel\nalong with a mutable reference to them.",41],[11,"copy_from","","Copies all of the pixels from another image into this image.",41],[11,"sub_image","","Returns a subimage that is a view into this image.",41],[11,"expand_palette","","Expands a color palette by re-using the existing buffer.\nAssumes 8 bit per pixel. Uses an optionally transparent index to\nadjust it's alpha value accordingly.",42]],"paths":[[4,"ColorType"],[4,"ImageError"],[4,"ImageFormat"],[4,"FilterType"],[4,"DynamicImage"],[3,"NeuQuant"],[8,"ColorMap"],[3,"BiLevel"],[3,"WebpDecoder"],[3,"Frame"],[3,"VP8Decoder"],[3,"PPMEncoder"],[3,"PNGDecoder"],[3,"PNGEncoder"],[3,"ZlibDecoder"],[3,"Inflater"],[3,"Adler32"],[3,"Crc32"],[3,"Component"],[3,"JPEGEncoder"],[3,"JPEGDecoder"],[4,"ColorMode"],[3,"GIFDecoder"],[3,"GIFEncoder"],[4,"ByteOrder"],[3,"TIFFDecoder"],[3,"TGADecoder"],[3,"Pixels"],[3,"MutPixels"],[3,"SubImage"],[3,"Rgb"],[3,"Luma"],[3,"Rgba"],[3,"LumaA"],[3,"Vec"],[3,"ImageBuffer"],[3,"Frames"],[3,"Frame"],[8,"Primitive"],[8,"Pixel"],[8,"ImageDecoder"],[8,"GenericImage"],[6,"GrayImage"]]};

searchIndex['event'] = {"items":[[0,"","event","A library for event threading"],[0,"events","",""],[11,"fmt","event_loop","",0],[11,"eq","","",0],[11,"ne","","",0],[11,"ne","","",0],[11,"clone","","",0],[11,"clone_from","","",0],[11,"fmt","","",1],[11,"eq","","",1],[11,"ne","","",1],[11,"ne","","",1],[11,"clone","","",1],[11,"clone_from","","",1],[11,"fmt","","",2],[11,"eq","","",2],[11,"ne","","",2],[11,"ne","","",2],[11,"clone","","",2],[11,"clone_from","","",2],[11,"assert_receiver_is_total_eq","","",3],[11,"eq","","",3],[11,"ne","","",3],[11,"ne","","",3],[11,"fmt","","",3],[11,"fmt","","",4],[11,"new","","Creates a new event iterator with default UPS and FPS settings.",5],[6,"Item","event::events",""],[11,"next","event_loop","Returns the next game event.",5],[11,"size_hint","","",5],[3,"ShouldClose","event::events","Whether window should close or not."],[3,"Size","","The size of the window."],[3,"SwapBuffers","","Tells window to swap buffers."],[3,"PollEvent","","Polls event from window."],[3,"RenderArgs","","Render arguments"],[12,"ext_dt","","Extrapolated time in seconds, used to do smooth animation.",0],[12,"width","","The width of rendered area.",0],[12,"height","","The height of rendered area.",0],[3,"UpdateArgs","","Update arguments, such as delta time in seconds"],[12,"dt","","Delta time in seconds.",1],[3,"IdleArgs","","Idle arguments, such as expected idle time in seconds."],[12,"dt","","Expected idle time in seconds.",2],[8,"EventMap","","Methods required to map from consumed event to emitted event."],[10,"render","","Creates a render event.",6],[10,"update","","Creates an update event.",6],[10,"input","","Creates an input event.",6],[10,"idle","","Creates an idle event.",6],[3,"Ups","","The number of updates per second"],[3,"MaxFps","","The maximum number of frames per second"],[3,"Events","","An event loop iterator"],[17,"DEFAULT_UPS","","The default updates per second."],[17,"DEFAULT_MAX_FPS","","The default maximum frames per second."],[3,"Events","event","An event loop iterator"],[3,"MaxFps","","The maximum number of frames per second"],[3,"Ups","","The number of updates per second"],[3,"UpdateArgs","","Update arguments, such as delta time in seconds"],[12,"dt","","Delta time in seconds.",1],[3,"RenderArgs","","Render arguments"],[12,"ext_dt","","Extrapolated time in seconds, used to do smooth animation.",0],[12,"width","","The width of rendered area.",0],[12,"height","","The height of rendered area.",0],[3,"IdleArgs","","Idle arguments, such as expected idle time in seconds."],[12,"dt","","Expected idle time in seconds.",2],[4,"Event","","Adds render and update events to input events"],[13,"Render","","Render graphics.",7],[13,"Update","","Update the state of the application.",7],[13,"Idle","","Do background tasks that can be done incrementally.",7],[13,"Input","","Input event.",7],[5,"events","","Creates event iterator from window."],[0,"generic_event","","Trait for generic events"],[8,"GenericEvent","event::generic_event","Implemented by all events"],[10,"event_id","","The id of this event, `TypeOf::of::<Box<EventTrait>>()`",8],[10,"with_args","","Calls closure with table",8],[10,"from_args","","Converts from table to `Self`",8],[11,"event_id","input","",9],[11,"with_args","","",9],[11,"from_args","","",9],[11,"event_id","event","",7],[11,"with_args","","",7],[11,"from_args","","",7],[11,"fmt","","",7],[11,"eq","","",7],[11,"ne","","",7],[11,"clone","","",7],[11,"render","","",7],[11,"update","","",7],[11,"idle","","",7],[11,"input","","",7],[8,"UpdateEvent","","When the application state should be updated"],[10,"from_update_args","","Creates an update event.",10],[11,"from_dt","","Creates an update event with delta time.",10],[10,"update","","Calls closure if this is an update event.",10],[11,"update_args","","Returns update arguments.",10],[8,"RenderEvent","","When the next frame should be rendered"],[10,"from_render_args","","Creates a render event.",11],[10,"render","","Calls closure if this is a render event.",11],[11,"render_args","","Returns render arguments.",11],[8,"IdleEvent","","When background tasks should be performed"],[10,"from_idle_args","","Creates an idle event.",12],[11,"from_dt","","Creates an update event with delta time.",12],[10,"idle","","Calls closure if this is an idle event.",12],[11,"idle_args","","Returns idle arguments.",12],[8,"PressEvent","","The press of a button"],[10,"from_button","","Creates a press event.",13],[10,"press","","Calls closure if this is a press event.",13],[11,"press_args","","Returns press arguments.",13],[8,"ReleaseEvent","","The release of a button"],[10,"from_button","","Creates a release event.",14],[10,"release","","Calls closure if this is a release event.",14],[11,"release_args","","Returns release arguments.",14],[8,"MouseCursorEvent","","The position of the mouse cursor"],[10,"from_xy","","Creates a mouse cursor event.",15],[10,"mouse_cursor","","Calls closure if this is a mouse cursor event.",15],[11,"mouse_cursor_args","","Returns mouse cursor arguments.",15],[8,"MouseRelativeEvent","","The relative movement of mouse cursor"],[10,"from_xy","","Creates a mouse relative event.",16],[10,"mouse_relative","","Calls closure if this is a mouse relative event.",16],[11,"mouse_relative_args","","Returns mouse relative arguments.",16],[8,"MouseScrollEvent","","The scroll of the mouse wheel"],[10,"from_xy","","Creates a mouse scroll event.",17],[10,"mouse_scroll","","Calls a closure if this is a mouse scroll event.",17],[11,"mouse_scroll_args","","Returns mouse scroll arguments.",17],[8,"TextEvent","","When receiving text from user, such as typing a character"],[10,"from_text","","Creates a text event.",18],[10,"text","","Calls closure if this is a text event.",18],[11,"text_args","","Returns text arguments.",18],[8,"ResizeEvent","","When the window is resized"],[10,"from_width_height","","Creates a resize event.",19],[10,"resize","","Calls closure if this is a resize event.",19],[11,"resize_args","","Returns resize arguments.",19],[8,"FocusEvent","","When window gets or looses focus"],[10,"from_focused","","Creates a focus event.",20],[10,"focus","","Calls closure if this is a focus event.",20],[11,"focus_args","","Returns focus arguments.",20],[11,"from_dt","","Creates an update event with delta time.",10],[11,"update_args","","Returns update arguments.",10],[11,"render_args","","Returns render arguments.",11],[11,"from_dt","","Creates an update event with delta time.",12],[11,"idle_args","","Returns idle arguments.",12],[11,"press_args","","Returns press arguments.",13],[11,"release_args","","Returns release arguments.",14],[11,"mouse_cursor_args","","Returns mouse cursor arguments.",15],[11,"mouse_relative_args","","Returns mouse relative arguments.",16],[11,"mouse_scroll_args","","Returns mouse scroll arguments.",17],[11,"text_args","","Returns text arguments.",18],[11,"resize_args","","Returns resize arguments.",19],[11,"focus_args","","Returns focus arguments.",20]],"paths":[[3,"RenderArgs"],[3,"UpdateArgs"],[3,"IdleArgs"],[4,"Idle"],[4,"State"],[3,"Events"],[8,"EventMap"],[4,"Event"],[8,"GenericEvent"],[4,"Input"],[8,"UpdateEvent"],[8,"RenderEvent"],[8,"IdleEvent"],[8,"PressEvent"],[8,"ReleaseEvent"],[8,"MouseCursorEvent"],[8,"MouseRelativeEvent"],[8,"MouseScrollEvent"],[8,"TextEvent"],[8,"ResizeEvent"],[8,"FocusEvent"]]};

searchIndex['window'] = {"items":[[0,"","window","Window abstraction"],[3,"Title","","The title of the window."],[3,"Samples","","The anti-aliasing samples when rendering."],[3,"Fullscreen","","Whether window is opened in full screen mode."],[3,"ExitOnEsc","","Whether to exit when pressing the Esc keyboard button."],[3,"CaptureCursor","","Whether to capture the mouse cursor."],[3,"DrawSize","","The draw size of the window."],[3,"WindowSettings","","Settings for window behavior."],[12,"title","","Title of the window.",0],[12,"size","","The size of the window.",0],[12,"samples","","Number samples per pixel (anti-aliasing).",0],[12,"fullscreen","","If true, the window is fullscreen.",0],[12,"exit_on_esc","","If true, exit when pressing Esc.",0],[3,"NoWindow","","An implementation of Window that runs without a window at all."],[11,"default","","Gets default settings.",0],[11,"new","","Returns a new `NoWindow`.",1]],"paths":[[3,"WindowSettings"],[3,"NoWindow"]]};

searchIndex['input'] = {"items":[[0,"","input","A flexible structure for user interactions\nto be used in window frameworks and widgets libraries."],[4,"Button","","Models different kinds of buttons."],[13,"Keyboard","","A keyboard button.",0],[13,"Mouse","","A mouse button.",0],[4,"Motion","","Models different kinds of motion."],[13,"MouseCursor","","x and y in window coordinates.",1],[13,"MouseRelative","","x and y in relative coordinates.",1],[13,"MouseScroll","","x and y in scroll ticks.",1],[4,"Input","","Models input events."],[13,"Press","","Pressed a button.",2],[13,"Release","","Released a button.",2],[13,"Move","","Moved mouse cursor.",2],[13,"Text","","Text (usually from keyboard).",2],[13,"Resize","","Window got resized.",2],[13,"Focus","","Window gained or lost focus.",2],[0,"keyboard","","Back-end agnostic keyboard keys."],[3,"ModifierKey","input::keyboard",""],[4,"Key","","Represent a keyboard key."],[13,"Unknown","","",3],[13,"Backspace","","",3],[13,"Tab","","",3],[13,"Return","","",3],[13,"Escape","","",3],[13,"Space","","",3],[13,"Exclaim","","",3],[13,"Quotedbl","","",3],[13,"Hash","","",3],[13,"Dollar","","",3],[13,"Percent","","",3],[13,"Ampersand","","",3],[13,"Quote","","",3],[13,"LeftParen","","",3],[13,"RightParen","","",3],[13,"Asterisk","","",3],[13,"Plus","","",3],[13,"Comma","","",3],[13,"Minus","","",3],[13,"Period","","",3],[13,"Slash","","",3],[13,"D0","","",3],[13,"D1","","",3],[13,"D2","","",3],[13,"D3","","",3],[13,"D4","","",3],[13,"D5","","",3],[13,"D6","","",3],[13,"D7","","",3],[13,"D8","","",3],[13,"D9","","",3],[13,"Colon","","",3],[13,"Semicolon","","",3],[13,"Less","","",3],[13,"Equals","","",3],[13,"Greater","","",3],[13,"Question","","",3],[13,"At","","",3],[13,"LeftBracket","","",3],[13,"Backslash","","",3],[13,"RightBracket","","",3],[13,"Caret","","",3],[13,"Underscore","","",3],[13,"Backquote","","",3],[13,"A","","",3],[13,"B","","",3],[13,"C","","",3],[13,"D","","",3],[13,"E","","",3],[13,"F","","",3],[13,"G","","",3],[13,"H","","",3],[13,"I","","",3],[13,"J","","",3],[13,"K","","",3],[13,"L","","",3],[13,"M","","",3],[13,"N","","",3],[13,"O","","",3],[13,"P","","",3],[13,"Q","","",3],[13,"R","","",3],[13,"S","","",3],[13,"T","","",3],[13,"U","","",3],[13,"V","","",3],[13,"W","","",3],[13,"X","","",3],[13,"Y","","",3],[13,"Z","","",3],[13,"Delete","","",3],[13,"CapsLock","","",3],[13,"F1","","",3],[13,"F2","","",3],[13,"F3","","",3],[13,"F4","","",3],[13,"F5","","",3],[13,"F6","","",3],[13,"F7","","",3],[13,"F8","","",3],[13,"F9","","",3],[13,"F10","","",3],[13,"F11","","",3],[13,"F12","","",3],[13,"PrintScreen","","",3],[13,"ScrollLock","","",3],[13,"Pause","","",3],[13,"Insert","","",3],[13,"Home","","",3],[13,"PageUp","","",3],[13,"End","","",3],[13,"PageDown","","",3],[13,"Right","","",3],[13,"Left","","",3],[13,"Down","","",3],[13,"Up","","",3],[13,"NumLockClear","","",3],[13,"NumPadDivide","","",3],[13,"NumPadMultiply","","",3],[13,"NumPadMinus","","",3],[13,"NumPadPlus","","",3],[13,"NumPadEnter","","",3],[13,"NumPad1","","",3],[13,"NumPad2","","",3],[13,"NumPad3","","",3],[13,"NumPad4","","",3],[13,"NumPad5","","",3],[13,"NumPad6","","",3],[13,"NumPad7","","",3],[13,"NumPad8","","",3],[13,"NumPad9","","",3],[13,"NumPad0","","",3],[13,"NumPadPeriod","","",3],[13,"Application","","",3],[13,"Power","","",3],[13,"NumPadEquals","","",3],[13,"F13","","",3],[13,"F14","","",3],[13,"F15","","",3],[13,"F16","","",3],[13,"F17","","",3],[13,"F18","","",3],[13,"F19","","",3],[13,"F20","","",3],[13,"F21","","",3],[13,"F22","","",3],[13,"F23","","",3],[13,"F24","","",3],[13,"Execute","","",3],[13,"Help","","",3],[13,"Menu","","",3],[13,"Select","","",3],[13,"Stop","","",3],[13,"Again","","",3],[13,"Undo","","",3],[13,"Cut","","",3],[13,"Copy","","",3],[13,"Paste","","",3],[13,"Find","","",3],[13,"Mute","","",3],[13,"VolumeUp","","",3],[13,"VolumeDown","","",3],[13,"NumPadComma","","",3],[13,"NumPadEqualsAS400","","",3],[13,"AltErase","","",3],[13,"Sysreq","","",3],[13,"Cancel","","",3],[13,"Clear","","",3],[13,"Prior","","",3],[13,"Return2","","",3],[13,"Separator","","",3],[13,"Out","","",3],[13,"Oper","","",3],[13,"ClearAgain","","",3],[13,"CrSel","","",3],[13,"ExSel","","",3],[13,"NumPad00","","",3],[13,"NumPad000","","",3],[13,"ThousandsSeparator","","",3],[13,"DecimalSeparator","","",3],[13,"CurrencyUnit","","",3],[13,"CurrencySubUnit","","",3],[13,"NumPadLeftParen","","",3],[13,"NumPadRightParen","","",3],[13,"NumPadLeftBrace","","",3],[13,"NumPadRightBrace","","",3],[13,"NumPadTab","","",3],[13,"NumPadBackspace","","",3],[13,"NumPadA","","",3],[13,"NumPadB","","",3],[13,"NumPadC","","",3],[13,"NumPadD","","",3],[13,"NumPadE","","",3],[13,"NumPadF","","",3],[13,"NumPadXor","","",3],[13,"NumPadPower","","",3],[13,"NumPadPercent","","",3],[13,"NumPadLess","","",3],[13,"NumPadGreater","","",3],[13,"NumPadAmpersand","","",3],[13,"NumPadDblAmpersand","","",3],[13,"NumPadVerticalBar","","",3],[13,"NumPadDblVerticalBar","","",3],[13,"NumPadColon","","",3],[13,"NumPadHash","","",3],[13,"NumPadSpace","","",3],[13,"NumPadAt","","",3],[13,"NumPadExclam","","",3],[13,"NumPadMemStore","","",3],[13,"NumPadMemRecall","","",3],[13,"NumPadMemClear","","",3],[13,"NumPadMemAdd","","",3],[13,"NumPadMemSubtract","","",3],[13,"NumPadMemMultiply","","",3],[13,"NumPadMemDivide","","",3],[13,"NumPadPlusMinus","","",3],[13,"NumPadClear","","",3],[13,"NumPadClearEntry","","",3],[13,"NumPadBinary","","",3],[13,"NumPadOctal","","",3],[13,"NumPadDecimal","","",3],[13,"NumPadHexadecimal","","",3],[13,"LCtrl","","",3],[13,"LShift","","",3],[13,"LAlt","","",3],[13,"LGui","","",3],[13,"RCtrl","","",3],[13,"RShift","","",3],[13,"RAlt","","",3],[13,"RGui","","",3],[13,"Mode","","",3],[13,"AudioNext","","",3],[13,"AudioPrev","","",3],[13,"AudioStop","","",3],[13,"AudioPlay","","",3],[13,"AudioMute","","",3],[13,"MediaSelect","","",3],[13,"Www","","",3],[13,"Mail","","",3],[13,"Calculator","","",3],[13,"Computer","","",3],[13,"AcSearch","","",3],[13,"AcHome","","",3],[13,"AcBack","","",3],[13,"AcForward","","",3],[13,"AcStop","","",3],[13,"AcRefresh","","",3],[13,"AcBookmarks","","",3],[13,"BrightnessDown","","",3],[13,"BrightnessUp","","",3],[13,"DisplaySwitch","","",3],[13,"KbdIllumToggle","","",3],[13,"KbdIllumDown","","",3],[13,"KbdIllumUp","","",3],[13,"Eject","","",3],[13,"Sleep","","",3],[17,"NO_MODIFIER","",""],[17,"CTRL","",""],[17,"SHIFT","",""],[17,"ALT","",""],[17,"GUI","",""],[17,"CTRL_SHIFT","",""],[17,"CTRL_ALT","",""],[17,"CTRL_GUI","",""],[17,"CTRL_SHIFT_ALT","",""],[17,"CTRL_SHIFT_GUI","",""],[17,"CTRL_SHIFT_ALT_GUI","",""],[17,"SHIFT_ALT","",""],[17,"SHIFT_GUI","",""],[17,"SHIFT_ALT_GUI","",""],[17,"ALT_GUI","",""],[11,"hash","","",4],[11,"cmp","","",4],[11,"partial_cmp","","",4],[11,"lt","","",4],[11,"le","","",4],[11,"gt","","",4],[11,"ge","","",4],[11,"clone","","",4],[11,"eq","","",4],[11,"ne","","",4],[11,"fmt","","",4],[11,"encode","","",4],[11,"decode","","",4],[11,"empty","","Returns an empty set of flags.",4],[11,"all","","Returns the set containing all flags.",4],[11,"bits","","Returns the raw value of the flags currently stored.",4],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",4],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",4],[11,"is_empty","","Returns `true` if no flags are currently stored.",4],[11,"is_all","","Returns `true` if all flags are currently set.",4],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",4],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",4],[11,"insert","","Inserts the specified flags in-place.",4],[11,"remove","","Removes the specified flags in-place.",4],[11,"toggle","","Toggles the specified flags in-place.",4],[6,"Output","",""],[11,"bitor","","Returns the union of the two sets of flags.",4],[6,"Output","",""],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",4],[6,"Output","",""],[11,"bitand","","Returns the intersection between the two sets of flags.",4],[6,"Output","",""],[11,"sub","","Returns the set difference of the two sets of flags.",4],[6,"Output","",""],[11,"not","","Returns the complement of this set of flags.",4],[11,"handle_input","","Change modifier key state depending on input.",4],[11,"default","","",4],[11,"hash","","",3],[11,"fmt","","",3],[11,"encode","","",3],[11,"decode","","",3],[11,"clone","","",3],[11,"eq","","",3],[11,"partial_cmp","","",3],[11,"cmp","","",3],[11,"code","","Returns an id of the key",3],[11,"to_i64","","",3],[11,"to_u64","","",3],[11,"to_int","","",3],[11,"from_u64","","",3],[11,"from_i64","","",3],[11,"from_int","","",3],[0,"mouse","input","Back-end agnostic mouse buttons."],[4,"MouseButton","input::mouse","Represent a mouse button."],[13,"Unknown","","Unknown mouse button.",5],[13,"Left","","Left mouse button.",5],[13,"Right","","Right mouse button.",5],[13,"Middle","","Middle mouse button.",5],[13,"X1","","Extra mouse button number 1.",5],[13,"X2","","Extra mouse button number 2.",5],[13,"Button6","","Mouse button number 6.",5],[13,"Button7","","Mouse button number 7.",5],[13,"Button8","","Mouse button number 8.",5],[11,"fmt","","",5],[11,"hash","","",5],[11,"partial_cmp","","",5],[11,"lt","","",5],[11,"le","","",5],[11,"gt","","",5],[11,"ge","","",5],[11,"cmp","","",5],[11,"eq","","",5],[11,"ne","","",5],[11,"encode","","",5],[11,"decode","","",5],[11,"clone","","",5],[11,"from_u64","","",5],[11,"from_i64","","",5],[11,"from_int","","",5],[11,"to_u64","","",5],[11,"to_i64","","",5],[11,"to_int","","",5],[11,"fmt","input","",0],[11,"eq","","",0],[11,"ne","","",0],[11,"encode","","",0],[11,"decode","","",0],[11,"clone","","",0],[11,"fmt","","",1],[11,"eq","","",1],[11,"ne","","",1],[11,"encode","","",1],[11,"decode","","",1],[11,"clone","","",1],[11,"fmt","","",2],[11,"eq","","",2],[11,"ne","","",2],[11,"encode","","",2],[11,"decode","","",2],[11,"clone","","",2]],"paths":[[4,"Button"],[4,"Motion"],[4,"Input"],[4,"Key"],[3,"ModifierKey"],[4,"MouseButton"]]};

searchIndex['num'] = {"items":[[0,"","num","Simple numerics."],[5,"zero","","Returns the additive identity, `0`."],[5,"one","","Returns the multiplicative identity, `1`."],[5,"abs","","Computes the absolute value."],[5,"abs_sub","","The positive difference of two numbers."],[5,"signum","","Returns the sign of the number."],[5,"pow","","Raises a value to the power of exp, using exponentiation by squaring."],[0,"bigint","","A Big integer (signed version: `BigInt`, unsigned version: `BigUint`)."],[3,"BigUint","num::bigint","A big unsigned integer type."],[3,"BigInt","","A big signed integer type."],[4,"Sign","","A Sign is a `BigInt`'s composing element."],[13,"Minus","","",0],[13,"NoSign","","",0],[13,"Plus","","",0],[4,"ParseBigIntError","",""],[13,"ParseInt","","",1],[13,"Other","","",1],[0,"big_digit","",""],[5,"from_doublebigdigit","num::bigint::big_digit","Split one `DoubleBigDigit` into two `BigDigit`s."],[5,"to_doublebigdigit","","Join two `BigDigit`s into one `DoubleBigDigit`"],[17,"BITS","",""],[17,"BASE","",""],[6,"BigDigit","num::bigint","A `BigDigit` is a `BigUint`'s composing element."],[6,"DoubleBigDigit","","A `DoubleBigDigit` is the internal type used to do the computations.  Its\nsize is the double of the size of `BigDigit`."],[17,"ZERO_BIG_DIGIT","",""],[8,"ToBigUint","","A generic trait for converting a value to a `BigUint`."],[10,"to_biguint","","Converts the value of `self` to a `BigUint`.",2],[8,"ToBigInt","","A generic trait for converting a value to a `BigInt`."],[10,"to_bigint","","Converts the value of `self` to a `BigInt`.",3],[8,"RandBigInt","",""],[10,"gen_biguint","","Generate a random `BigUint` of the given bit size.",4],[10,"gen_bigint","","Generate a random BigInt of the given bit size.",4],[10,"gen_biguint_below","","Generate a random `BigUint` less than the given bound. Fails\nwhen the bound is zero.",4],[10,"gen_biguint_range","","Generate a random `BigUint` within the given range. The lower\nbound is inclusive; the upper bound is exclusive. Fails when\nthe upper bound is not greater than the lower bound.",4],[10,"gen_bigint_range","","Generate a random `BigInt` within the given range. The lower\nbound is inclusive; the upper bound is exclusive. Fails when\nthe upper bound is not greater than the lower bound.",4],[11,"fmt","","",5],[11,"decode","","",5],[11,"encode","","",5],[11,"clone","","",5],[11,"eq","","",5],[11,"partial_cmp","","",5],[11,"cmp","","",5],[11,"default","","",5],[11,"hash","","",5],[11,"fmt","","",5],[6,"Err","",""],[11,"from_str","","",5],[6,"Output","",""],[11,"bitand","","",5],[6,"Output","",""],[6,"Output","",""],[11,"bitand","","",5],[6,"Output","",""],[6,"Output","",""],[11,"bitor","","",5],[6,"Output","",""],[6,"Output","",""],[11,"bitor","","",5],[6,"Output","",""],[6,"Output","",""],[11,"bitxor","","",5],[6,"Output","",""],[6,"Output","",""],[11,"bitxor","","",5],[6,"Output","",""],[6,"Output","",""],[11,"shl","","",5],[6,"Output","",""],[6,"Output","",""],[11,"shr","","",5],[6,"Output","",""],[11,"zero","","",5],[11,"is_zero","","",5],[11,"one","","",5],[6,"Output","",""],[11,"add","","",5],[6,"Output","",""],[6,"Output","",""],[11,"add","","",5],[6,"Output","",""],[6,"Output","",""],[11,"sub","","",5],[6,"Output","",""],[6,"Output","",""],[11,"sub","","",5],[6,"Output","",""],[6,"Output","",""],[11,"mul","","",5],[6,"Output","",""],[6,"Output","",""],[11,"mul","","",5],[6,"Output","",""],[6,"Output","",""],[11,"div","","",5],[6,"Output","",""],[6,"Output","",""],[11,"div","","",5],[6,"Output","",""],[6,"Output","",""],[11,"rem","","",5],[6,"Output","",""],[6,"Output","",""],[11,"rem","","",5],[6,"Output","",""],[6,"Output","",""],[11,"neg","","",5],[6,"Output","",""],[11,"checked_add","","",5],[11,"checked_sub","","",5],[11,"checked_mul","","",5],[11,"checked_div","","",5],[11,"div_rem","","",5],[11,"div_floor","","",5],[11,"mod_floor","","",5],[11,"div_mod_floor","","",5],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",5],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",5],[11,"divides","","Deprecated, use `is_multiple_of` instead.",5],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",5],[11,"is_even","","Returns `true` if the number is divisible by `2`.",5],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",5],[11,"to_i64","","",5],[11,"to_u64","","",5],[11,"from_i64","","",5],[11,"from_u64","","",5],[11,"to_biguint","","",6],[11,"to_biguint","","",5],[6,"Err","",""],[11,"from_str_radix","","Creates and initializes a `BigUint`.",5],[11,"new","","Creates and initializes a `BigUint`.",5],[11,"from_slice","","Creates and initializes a `BigUint`.",5],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",5],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",5],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in little-endian byte order.",5],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in big-endian byte order.",5],[11,"parse_bytes","","Creates and initializes a `BigUint`.",5],[11,"bits","","Determines the fewest bits necessary to express the `BigUint`.",5],[11,"decode","","",0],[11,"encode","","",0],[11,"fmt","","",0],[11,"clone","","",0],[11,"cmp","","",0],[11,"partial_cmp","","",0],[11,"lt","","",0],[11,"le","","",0],[11,"gt","","",0],[11,"ge","","",0],[11,"eq","","",0],[11,"ne","","",0],[6,"Output","",""],[11,"neg","","Negate Sign value.",0],[11,"fmt","","",6],[11,"decode","","",6],[11,"encode","","",6],[11,"clone","","",6],[11,"eq","","",6],[11,"partial_cmp","","",6],[11,"cmp","","",6],[11,"default","","",6],[11,"fmt","","",6],[11,"hash","","",6],[6,"Err","",""],[11,"from_str","","",6],[6,"Output","",""],[11,"shl","","",6],[6,"Output","",""],[6,"Output","",""],[11,"shr","","",6],[6,"Output","",""],[11,"zero","","",6],[11,"is_zero","","",6],[11,"one","","",6],[11,"abs","","",6],[11,"abs_sub","","",6],[11,"signum","","",6],[11,"is_positive","","",6],[11,"is_negative","","",6],[6,"Output","",""],[11,"add","","",6],[6,"Output","",""],[6,"Output","",""],[11,"add","","",6],[6,"Output","",""],[6,"Output","",""],[11,"sub","","",6],[6,"Output","",""],[6,"Output","",""],[11,"sub","","",6],[6,"Output","",""],[6,"Output","",""],[11,"mul","","",6],[6,"Output","",""],[6,"Output","",""],[11,"mul","","",6],[6,"Output","",""],[6,"Output","",""],[11,"div","","",6],[6,"Output","",""],[6,"Output","",""],[11,"div","","",6],[6,"Output","",""],[6,"Output","",""],[11,"rem","","",6],[6,"Output","",""],[6,"Output","",""],[11,"rem","","",6],[6,"Output","",""],[6,"Output","",""],[11,"neg","","",6],[6,"Output","",""],[11,"checked_add","","",6],[11,"checked_sub","","",6],[11,"checked_mul","","",6],[11,"checked_div","","",6],[11,"div_rem","","",6],[11,"div_floor","","",6],[11,"mod_floor","","",6],[11,"div_mod_floor","","",6],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",6],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",6],[11,"divides","","Deprecated, use `is_multiple_of` instead.",6],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",6],[11,"is_even","","Returns `true` if the number is divisible by `2`.",6],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",6],[11,"to_i64","","",6],[11,"to_u64","","",6],[11,"from_i64","","",6],[11,"from_u64","","",6],[11,"to_bigint","","",6],[11,"to_bigint","","",5],[6,"Err","",""],[11,"from_str_radix","","Creates and initializes a BigInt.",6],[11,"new","","Creates and initializes a BigInt.",6],[11,"from_biguint","","Creates and initializes a `BigInt`.",6],[11,"from_slice","","Creates and initializes a `BigInt`.",6],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",6],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",6],[11,"to_bytes_le","","Returns the sign and the byte representation of the `BigInt` in little-endian byte order.",6],[11,"to_bytes_be","","Returns the sign and the byte representation of the `BigInt` in big-endian byte order.",6],[11,"parse_bytes","","Creates and initializes a `BigInt`.",6],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it's not negative.",6],[11,"checked_add","","",6],[11,"checked_sub","","",6],[11,"checked_mul","","",6],[11,"checked_div","","",6],[11,"eq","","",1],[11,"ne","","",1],[11,"fmt","","",1],[11,"fmt","","",1],[11,"description","","",1],[11,"from_error","","",1],[0,"complex","num","Complex numbers."],[3,"Complex","num::complex","A complex number in Cartesian form."],[12,"re","","Real portion of the complex number",7],[12,"im","","Imaginary portion of the complex number",7],[6,"Complex32","",""],[6,"Complex64","",""],[11,"fmt","","",7],[11,"decode","","",7],[11,"encode","","",7],[11,"hash","","",7],[11,"clone","","",7],[11,"eq","","",7],[11,"ne","","",7],[11,"new","","Create a new Complex",7],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn't necessarily\nhave a sqrt function), i.e. `re^2 + im^2`.",7],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",7],[11,"scale","","Multiplies `self` by the scalar `t`.",7],[11,"unscale","","Divides `self` by the scalar `t`.",7],[11,"inv","","Returns `1/self`",7],[11,"norm","","Calculate |self|",7],[11,"arg","","Calculate the principal Arg of self.",7],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r * exp(i\n* theta)`",7],[11,"from_polar","","Convert a polar representation into a complex number.",7],[6,"Output","",""],[11,"add","","",7],[6,"Output","",""],[6,"Output","",""],[11,"add","","",7],[6,"Output","",""],[6,"Output","",""],[11,"sub","","",7],[6,"Output","",""],[6,"Output","",""],[11,"sub","","",7],[6,"Output","",""],[6,"Output","",""],[11,"mul","","",7],[6,"Output","",""],[6,"Output","",""],[11,"mul","","",7],[6,"Output","",""],[6,"Output","",""],[11,"div","","",7],[6,"Output","",""],[6,"Output","",""],[11,"div","","",7],[6,"Output","",""],[6,"Output","",""],[11,"neg","","",7],[6,"Output","",""],[11,"zero","","",7],[11,"is_zero","","",7],[11,"one","","",7],[11,"fmt","","",7],[0,"integer","num","Integer trait and functions."],[5,"div_rem","num::integer","Simultaneous integer division and modulus"],[5,"div_floor","","Floored integer division"],[5,"mod_floor","","Floored integer modulus"],[5,"div_mod_floor","","Simultaneous floored integer division and modulus"],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The\nresult is always positive."],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`."],[8,"Integer","",""],[10,"div_floor","","Floored integer division.",8],[10,"mod_floor","","Floored integer modulo, satisfying:",8],[10,"gcd","","Greatest Common Divisor (GCD).",8],[10,"lcm","","Lowest Common Multiple (LCM).",8],[10,"divides","","Deprecated, use `is_multiple_of` instead.",8],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",8],[10,"is_even","","Returns `true` if the number is even.",8],[10,"is_odd","","Returns `true` if the number is odd.",8],[10,"div_rem","","Simultaneous truncated integer division and modulus.\nReturns `(quotient, remainder)`.",8],[11,"div_mod_floor","","Simultaneous floored integer division and modulus.\nReturns `(quotient, remainder)`.",8],[0,"iter","num","External iterators for generic mathematics"],[3,"Range","num::iter","An iterator over the range [start, stop)"],[3,"RangeInclusive","","An iterator over the range [start, stop]"],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping."],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping."],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting\nat start (inclusive), and ending at stop (exclusive))."],[5,"range_inclusive","","Return an iterator over the range [start, stop]"],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping."],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping."],[11,"clone","","",9],[6,"Item","",""],[11,"next","","",9],[11,"size_hint","","",9],[11,"next_back","","",9],[11,"clone","","",10],[6,"Item","",""],[11,"next","","",10],[11,"size_hint","","",10],[11,"next_back","","",10],[11,"clone","","",11],[6,"Item","",""],[11,"next","","",11],[11,"clone","","",12],[6,"Item","",""],[11,"next","","",12],[0,"traits","num","Numeric traits for generic mathematics"],[8,"Num","num::traits","The base trait for numeric types"],[8,"Zero","","Defines an additive identity element for `Self`."],[10,"zero","","Returns the additive identity element of `Self`, `0`.",13],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",13],[8,"One","","Defines a multiplicative identity element for `Self`."],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",14],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative)."],[10,"abs","","Computes the absolute value.",15],[10,"abs_sub","","The positive difference of two numbers.",15],[10,"signum","","Returns the sign of the number.",15],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",15],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",15],[8,"Unsigned","","A trait for values which cannot be negative"],[8,"Bounded","","Numbers which have upper and lower bounds"],[10,"min_value","","returns the smallest finite number this type can represent",16],[10,"max_value","","returns the largest finite number this type can represent",16],[8,"Saturating","","Saturating math operations"],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",17],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",17],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on overflow."],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is returned.",18],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow."],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens, `None` is returned.",19],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow."],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow or overflow\nhappens, `None` is returned.",20],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow."],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by zero. If any of that\nhappens, `None` is returned.",21],[0,"rational","num","Rational numbers"],[3,"Ratio","num::rational","Represents the ratio between 2 numbers."],[3,"ParseRatioError","",""],[6,"Rational","","Alias for a `Ratio` of machine-sized integers."],[6,"Rational32","",""],[6,"Rational64","",""],[6,"BigRational","","Alias for arbitrary precision rationals."],[11,"fmt","","",22],[11,"decode","","",22],[11,"encode","","",22],[11,"hash","","",22],[11,"clone","","",22],[11,"from_integer","","Creates a ratio representing the integer `t`.",22],[11,"new_raw","","Creates a ratio without checking for `denom == 0` or reducing.",22],[11,"new","","Create a new Ratio. Fails if `denom == 0`.",22],[11,"to_integer","","Converts to an integer.",22],[11,"numer","","Gets an immutable reference to the numerator.",22],[11,"denom","","Gets an immutable reference to the denominator.",22],[11,"is_integer","","Returns true if the rational number is an integer (denominator is 1).",22],[11,"reduced","","Returns a `reduce`d copy of self.",22],[11,"recip","","Returns the reciprocal.",22],[11,"floor","","Rounds towards minus infinity.",22],[11,"ceil","","Rounds towards plus infinity.",22],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away from zero.",22],[11,"trunc","","Rounds towards zero.",22],[11,"fract","","Returns the fractional part of a number.",22],[11,"from_float","","Converts a float into a rational number.",22],[11,"eq","","",22],[11,"ne","","",22],[11,"lt","","",22],[11,"gt","","",22],[11,"le","","",22],[11,"ge","","",22],[11,"partial_cmp","","",22],[11,"cmp","","",22],[6,"Output","",""],[11,"mul","","",22],[6,"Output","",""],[6,"Output","",""],[11,"mul","","",22],[6,"Output","",""],[6,"Output","",""],[11,"div","","",22],[6,"Output","",""],[6,"Output","",""],[11,"div","","",22],[6,"Output","",""],[6,"Output","",""],[11,"add","","",22],[6,"Output","",""],[6,"Output","",""],[11,"add","","",22],[6,"Output","",""],[6,"Output","",""],[11,"sub","","",22],[6,"Output","",""],[6,"Output","",""],[11,"sub","","",22],[6,"Output","",""],[6,"Output","",""],[11,"rem","","",22],[6,"Output","",""],[6,"Output","",""],[11,"rem","","",22],[6,"Output","",""],[6,"Output","",""],[11,"neg","","",22],[6,"Output","",""],[11,"zero","","",22],[11,"is_zero","","",22],[11,"one","","",22],[11,"abs","","",22],[11,"abs_sub","","",22],[11,"signum","","",22],[11,"is_positive","","",22],[11,"is_negative","","",22],[11,"fmt","","Renders as `numer/denom`. If denom=1, renders as numer.",22],[6,"Err","",""],[11,"from_str","","Parses `numer/denom` or just `numer`.",22],[6,"Err","",""],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",22],[11,"eq","","",23],[11,"ne","","",23],[11,"fmt","","",23],[11,"fmt","","",23],[11,"description","","",23]],"paths":[[4,"Sign"],[4,"ParseBigIntError"],[8,"ToBigUint"],[8,"ToBigInt"],[8,"RandBigInt"],[3,"BigUint"],[3,"BigInt"],[3,"Complex"],[8,"Integer"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[3,"Ratio"],[3,"ParseRatioError"]]};

searchIndex['gl_generator'] = {"items":[[0,"","gl_generator","# gl_generator"],[5,"generate_bindings","","Public function that generates Rust source code."],[0,"generators","",""],[5,"gen_type_aliases","gl_generator::generators","Generates all the type aliases for a namespace."],[5,"gen_parameters","","Generates the list of Rust `Arg`s that a `Cmd` requires."],[5,"gen_return_type","","Generates the Rust return type of a `Cmd`."],[5,"gen_symbol_name","","Generates the native symbol name of a `Cmd`."],[0,"global_gen","",""],[3,"GlobalGenerator","gl_generator::generators::global_gen",""],[11,"write","","",0],[0,"static_gen","gl_generator::generators",""],[3,"StaticGenerator","gl_generator::generators::static_gen",""],[11,"write","","",1],[0,"struct_gen","gl_generator::generators",""],[3,"StructGenerator","gl_generator::generators::struct_gen",""],[11,"write","","",2],[0,"static_struct_gen","gl_generator::generators",""],[3,"StaticStructGenerator","gl_generator::generators::static_struct_gen",""],[11,"write","","",3],[8,"Generator","gl_generator::generators","Trait for a bindings generator."],[10,"write","","Builds the GL bindings.",4],[0,"registry","gl_generator",""],[3,"Registry","gl_generator::registry",""],[12,"groups","","",5],[12,"enums","","",5],[12,"cmds","","",5],[12,"features","","",5],[12,"extensions","","",5],[12,"aliases","","",5],[3,"EnumIterator","",""],[3,"CmdIterator","",""],[3,"Group","",""],[12,"name","","",6],[12,"enums","","",6],[3,"EnumNs","",""],[12,"namespace","","",7],[12,"group","","",7],[12,"ty","","",7],[12,"start","","",7],[12,"end","","",7],[12,"vendor","","",7],[12,"comment","","",7],[12,"defs","","",7],[3,"Enum","",""],[12,"ident","","",8],[12,"value","","",8],[12,"alias","","",8],[12,"ty","","",8],[3,"CmdNs","",""],[12,"namespace","","",9],[12,"defs","","",9],[3,"Binding","",""],[12,"ident","","",10],[12,"ty","","",10],[12,"group","","",10],[3,"Cmd","",""],[12,"proto","","",11],[12,"params","","",11],[12,"is_safe","","True if this command doesn't take any pointers.",11],[12,"alias","","",11],[12,"vecequiv","","",11],[12,"glx","","",11],[3,"Feature","",""],[12,"api","","",12],[12,"name","","",12],[12,"number","","",12],[12,"requires","","",12],[12,"removes","","",12],[3,"Require","",""],[12,"comment","","",13],[12,"enums","","A reference to the earlier types, by name",13],[12,"commands","","A reference to the earlier types, by name",13],[3,"Remove","",""],[12,"profile","","",14],[12,"comment","","",14],[12,"enums","","A reference to the earlier types, by name",14],[12,"commands","","A reference to the earlier types, by name",14],[3,"Extension","",""],[12,"name","","",15],[12,"supported","","which apis this extension is defined for (see Feature.api)",15],[12,"requires","","",15],[3,"GlxOpcode","",""],[12,"ty","","",16],[12,"opcode","","",16],[12,"name","","",16],[12,"comment","","",16],[3,"Filter","",""],[12,"extensions","","",17],[12,"profile","","",17],[12,"version","","",17],[12,"api","","",17],[4,"Ns","",""],[13,"Gl","","",18],[13,"Glx","","",18],[13,"Wgl","","",18],[13,"Egl","","",18],[13,"Gles1","","",18],[13,"Gles2","","",18],[11,"fmt_struct_name","","",18],[6,"Err","",""],[11,"from_str","","",18],[11,"fmt","","",18],[11,"from_xml","","Generate a registry from the supplied XML string",5],[11,"get_tys","","Returns a set of all the types used in the supplied registry. This is useful\nfor working out what conversions are needed for the specific registry.",5],[11,"enum_iter","","",5],[11,"cmd_iter","","",5],[6,"Output","",""],[11,"add","","",5],[6,"Item","",""],[11,"next","","",19],[6,"Item","",""],[11,"next","","",20],[11,"clone","","",12],[11,"clone","","",13],[11,"clone","","",14],[11,"clone","","",15]],"paths":[[3,"GlobalGenerator"],[3,"StaticGenerator"],[3,"StructGenerator"],[3,"StaticStructGenerator"],[8,"Generator"],[3,"Registry"],[3,"Group"],[3,"EnumNs"],[3,"Enum"],[3,"CmdNs"],[3,"Binding"],[3,"Cmd"],[3,"Feature"],[3,"Require"],[3,"Remove"],[3,"Extension"],[3,"GlxOpcode"],[3,"Filter"],[4,"Ns"],[3,"EnumIterator"],[3,"CmdIterator"]]};

searchIndex['rustc-serialize'] = {"items":[[0,"","rustc-serialize","Support code for encoding and decoding types."],[11,"encode","collections::string","",0],[11,"decode","","",0],[11,"encode","alloc::boxed","",1],[11,"decode","","",1],[11,"decode","","",1],[11,"encode","alloc::rc","",2],[11,"decode","","",2],[11,"encode","collections::vec","",3],[11,"decode","","",3],[11,"encode","core::option","",4],[11,"decode","","",4],[11,"encode","std::old_path::posix","",5],[11,"decode","","",5],[11,"encode","std::old_path::windows","",6],[11,"decode","","",6],[11,"encode","core::cell","",7],[11,"decode","","",7],[11,"encode","","",8],[11,"decode","","",8],[11,"encode","alloc::arc","",9],[11,"decode","","",9],[11,"encode","collections::dlist","",10],[11,"decode","","",10],[11,"encode","collections::ring_buf","",11],[11,"decode","","",11],[11,"encode","collections::btree::map","",12],[11,"decode","","",12],[11,"encode","collections::btree::set","",13],[11,"decode","","",13],[11,"encode","std::collections::hash::map","",14],[11,"decode","","",14],[11,"encode","std::collections::hash::set","",15],[11,"decode","","",15],[11,"encode","collections::vec_map","",16],[11,"decode","","",16],[0,"base64","rustc-serialize","Base64 binary-to-text encoding"],[3,"Config","rustc-serialize::base64","Contains configuration parameters for `to_base64`."],[12,"char_set","","Character set to use",17],[12,"newline","","Newline to use",17],[12,"pad","","True to pad output with `=` characters",17],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",17],[4,"CharacterSet","","Available encoding character sets"],[13,"Standard","","The standard character set (uses `+` and `/`)",18],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",18],[4,"Newline","","Available newline types"],[13,"LF","","A linefeed (i.e. Unix-style newline)",19],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",19],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string"],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",20],[13,"InvalidBase64Length","","The input had an invalid length",20],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding"],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding"],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding"],[8,"ToBase64","","A trait for converting a value to base64 encoding."],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",21],[8,"FromBase64","","A trait for converting from base64 encoded values."],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",22],[11,"fmt","","",20],[11,"description","","",20],[11,"fmt","","",20],[0,"hex","rustc-serialize","Hex binary-to-text encoding"],[4,"FromHexError","rustc-serialize::hex","Errors that can occur when decoding a hex encoded string"],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",23],[13,"InvalidHexLength","","The input had an invalid length",23],[8,"ToHex","","A trait for converting a value to hexadecimal encoding"],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",24],[8,"FromHex","","A trait for converting hexadecimal encoded values"],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",25],[11,"fmt","","",23],[11,"description","","",23],[11,"fmt","","",23],[0,"json","rustc-serialize","JSON parsing and serialization"],[3,"PrettyJson","rustc-serialize::json",""],[3,"AsJson","",""],[3,"AsPrettyJson","",""],[3,"Encoder","","A structure for implementing serialization to JSON."],[3,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x"],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char."],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure."],[3,"Decoder","","A structure to decode JSON to values in rust."],[4,"Json","","Represents a json value"],[13,"I64","","",26],[13,"U64","","",26],[13,"F64","","",26],[13,"String","","",26],[13,"Boolean","","",26],[13,"Array","","",26],[13,"Object","","",26],[13,"Null","","",26],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream."],[13,"InvalidSyntax","","",27],[13,"InvalidNumber","","",27],[13,"EOFWhileParsingObject","","",27],[13,"EOFWhileParsingArray","","",27],[13,"EOFWhileParsingValue","","",27],[13,"EOFWhileParsingString","","",27],[13,"KeyMustBeAString","","",27],[13,"ExpectedColon","","",27],[13,"TrailingCharacters","","",27],[13,"TrailingComma","","",27],[13,"InvalidEscape","","",27],[13,"InvalidUnicodeCodePoint","","",27],[13,"LoneLeadingSurrogateInHexEscape","","",27],[13,"UnexpectedEndOfHexEscape","","",27],[13,"UnrecognizedHex","","",27],[13,"NotFourDigit","","",27],[13,"NotUtf8","","",27],[4,"ParserError","",""],[13,"SyntaxError","","msg, line, col",28],[13,"IoError","","",28],[4,"DecoderError","",""],[13,"ParseError","","",29],[13,"ExpectedError","","",29],[13,"MissingFieldError","","",29],[13,"UnknownVariantError","","",29],[13,"ApplicationError","","",29],[4,"EncoderError","",""],[13,"FmtError","","",30],[13,"BadHashmapKey","","",30],[4,"JsonEvent","","The output of the streaming parser."],[13,"ObjectStart","","",31],[13,"ObjectEnd","","",31],[13,"ArrayStart","","",31],[13,"ArrayEnd","","",31],[13,"BooleanValue","","",31],[13,"I64Value","","",31],[13,"U64Value","","",31],[13,"F64Value","","",31],[13,"StringValue","","",31],[13,"NullValue","","",31],[13,"Error","","",31],[4,"StackElement","","StackElements compose a Stack.\nFor example, Key(\"foo\"), Key(\"bar\"), Index(3) and Key(\"x\") are the\nStackElements compositing the stack that represents foo.bar[3].x"],[13,"Index","","",32],[13,"Key","","",32],[5,"error_str","","Returns a readable error string for a given error code."],[5,"decode","","Shortcut function to decode a JSON `&str` into an object"],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`"],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`"],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`"],[6,"Array","",""],[6,"Object","",""],[6,"BuilderError","",""],[6,"EncodeResult","",""],[6,"DecodeResult","",""],[8,"ToJson","","A trait for converting values to JSON"],[10,"to_json","","Converts the value of `self` to an instance of JSON",33],[11,"fmt","","",26],[11,"partial_cmp","","",26],[11,"lt","","",26],[11,"le","","",26],[11,"gt","","",26],[11,"ge","","",26],[11,"eq","","",26],[11,"ne","","",26],[11,"clone","","",26],[11,"eq","","",27],[11,"ne","","",27],[11,"clone","","",27],[11,"fmt","","",28],[11,"eq","","",28],[11,"ne","","",28],[11,"clone","","",28],[11,"fmt","","",29],[11,"eq","","",29],[11,"ne","","",29],[11,"clone","","",29],[11,"fmt","","",30],[11,"fmt","","",27],[11,"description","","",29],[11,"cause","","",29],[11,"fmt","","",29],[11,"description","","",28],[11,"fmt","","",28],[11,"description","","",30],[11,"fmt","","",30],[11,"from_error","","",30],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",34],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",34],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",34],[6,"Error","",""],[11,"emit_nil","","",34],[11,"emit_usize","","",34],[11,"emit_u64","","",34],[11,"emit_u32","","",34],[11,"emit_u16","","",34],[11,"emit_u8","","",34],[11,"emit_isize","","",34],[11,"emit_i64","","",34],[11,"emit_i32","","",34],[11,"emit_i16","","",34],[11,"emit_i8","","",34],[11,"emit_bool","","",34],[11,"emit_f64","","",34],[11,"emit_f32","","",34],[11,"emit_char","","",34],[11,"emit_str","","",34],[11,"emit_enum","","",34],[11,"emit_enum_variant","","",34],[11,"emit_enum_variant_arg","","",34],[11,"emit_enum_struct_variant","","",34],[11,"emit_enum_struct_variant_field","","",34],[11,"emit_struct","","",34],[11,"emit_struct_field","","",34],[11,"emit_tuple","","",34],[11,"emit_tuple_arg","","",34],[11,"emit_tuple_struct","","",34],[11,"emit_tuple_struct_arg","","",34],[11,"emit_option","","",34],[11,"emit_option_none","","",34],[11,"emit_option_some","","",34],[11,"emit_seq","","",34],[11,"emit_seq_elt","","",34],[11,"emit_map","","",34],[11,"emit_map_elt_key","","",34],[11,"emit_map_elt_val","","",34],[11,"encode","","",26],[11,"from_reader","","Decodes a json value from an `&mut old_io::Reader`",26],[11,"from_str","","Decodes a json value from a string",26],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",26],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",26],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",26],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",26],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",26],[11,"as_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",26],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",26],[11,"as_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",26],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",26],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",26],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",26],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",26],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",26],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",26],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",26],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",26],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",26],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",26],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",26],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",26],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",26],[6,"Output","",""],[11,"index","","",26],[6,"Output","",""],[11,"index","","",26],[11,"fmt","","",31],[11,"clone","","",31],[11,"eq","","",31],[11,"ne","","",31],[11,"fmt","","",32],[11,"clone","","",32],[11,"eq","","",32],[11,"ne","","",32],[11,"new","","",35],[11,"len","","Returns The number of elements in the Stack.",35],[11,"is_empty","","Returns true if the stack is empty.",35],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",35],[11,"is_equal_to","","Compares this stack with an array of StackElements.",35],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",35],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",35],[11,"top","","Returns the top-most element (if any).",35],[6,"Item","",""],[11,"next","","",36],[11,"new","","Creates the JSON parser.",36],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",36],[11,"new","","Create a JSON Builder.",37],[11,"build","","",37],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",38],[6,"Error","",""],[11,"read_nil","","",38],[11,"read_usize","","",38],[11,"read_u8","","",38],[11,"read_u16","","",38],[11,"read_u32","","",38],[11,"read_u64","","",38],[11,"read_isize","","",38],[11,"read_i8","","",38],[11,"read_i16","","",38],[11,"read_i32","","",38],[11,"read_i64","","",38],[11,"read_f32","","",38],[11,"read_f64","","",38],[11,"read_bool","","",38],[11,"read_char","","",38],[11,"read_str","","",38],[11,"read_enum","","",38],[11,"read_enum_variant","","",38],[11,"read_enum_variant_arg","","",38],[11,"read_enum_struct_variant","","",38],[11,"read_enum_struct_variant_field","","",38],[11,"read_struct","","",38],[11,"read_struct_field","","",38],[11,"read_tuple","","",38],[11,"read_tuple_arg","","",38],[11,"read_tuple_struct","","",38],[11,"read_tuple_struct_arg","","",38],[11,"read_option","","",38],[11,"read_seq","","",38],[11,"read_seq_elt","","",38],[11,"read_map","","",38],[11,"read_map_elt_key","","",38],[11,"read_map_elt_val","","",38],[11,"error","","",38],[11,"to_json","","",26],[11,"to_json","collections::string","",0],[11,"to_json","collections::vec","",3],[11,"to_json","collections::btree::map","",12],[11,"to_json","std::collections::hash::map","",14],[11,"to_json","core::option","",4],[11,"fmt","rustc-serialize::json","Encodes a json value into a string",26],[11,"fmt","","Encodes a json value into a string",39],[11,"fmt","","Encodes a json value into a string",40],[11,"indent","","Set the indentation level for the emitted JSON",41],[11,"fmt","","Encodes a json value into a string",41],[6,"Err","",""],[11,"from_str","","",26],[11,"encode","collections::string","",0],[11,"decode","","",0],[11,"encode","alloc::boxed","",1],[11,"decode","","",1],[11,"decode","","",1],[11,"encode","alloc::rc","",2],[11,"decode","","",2],[11,"encode","collections::vec","",3],[11,"decode","","",3],[11,"encode","core::option","",4],[11,"decode","","",4],[11,"encode","std::old_path::posix","",5],[11,"decode","","",5],[11,"encode","std::old_path::windows","",6],[11,"decode","","",6],[11,"encode","core::cell","",7],[11,"decode","","",7],[11,"encode","","",8],[11,"decode","","",8],[11,"encode","alloc::arc","",9],[11,"decode","","",9],[8,"Decoder","rustc-serialize",""],[16,"Error","rustc-serialize::Decoder",""],[10,"read_nil","rustc-serialize","",42],[10,"read_usize","","",42],[10,"read_u64","","",42],[10,"read_u32","","",42],[10,"read_u16","","",42],[10,"read_u8","","",42],[10,"read_isize","","",42],[10,"read_i64","","",42],[10,"read_i32","","",42],[10,"read_i16","","",42],[10,"read_i8","","",42],[10,"read_bool","","",42],[10,"read_f64","","",42],[10,"read_f32","","",42],[10,"read_char","","",42],[10,"read_str","","",42],[10,"read_enum","","",42],[10,"read_enum_variant","","",42],[10,"read_enum_variant_arg","","",42],[10,"read_enum_struct_variant","","",42],[10,"read_enum_struct_variant_field","","",42],[10,"read_struct","","",42],[10,"read_struct_field","","",42],[10,"read_tuple","","",42],[10,"read_tuple_arg","","",42],[10,"read_tuple_struct","","",42],[10,"read_tuple_struct_arg","","",42],[10,"read_option","","",42],[10,"read_seq","","",42],[10,"read_seq_elt","","",42],[10,"read_map","","",42],[10,"read_map_elt_key","","",42],[10,"read_map_elt_val","","",42],[10,"error","","",42],[8,"Encoder","",""],[16,"Error","rustc-serialize::Encoder",""],[10,"emit_nil","rustc-serialize","",43],[10,"emit_usize","","",43],[10,"emit_u64","","",43],[10,"emit_u32","","",43],[10,"emit_u16","","",43],[10,"emit_u8","","",43],[10,"emit_isize","","",43],[10,"emit_i64","","",43],[10,"emit_i32","","",43],[10,"emit_i16","","",43],[10,"emit_i8","","",43],[10,"emit_bool","","",43],[10,"emit_f64","","",43],[10,"emit_f32","","",43],[10,"emit_char","","",43],[10,"emit_str","","",43],[10,"emit_enum","","",43],[10,"emit_enum_variant","","",43],[10,"emit_enum_variant_arg","","",43],[10,"emit_enum_struct_variant","","",43],[10,"emit_enum_struct_variant_field","","",43],[10,"emit_struct","","",43],[10,"emit_struct_field","","",43],[10,"emit_tuple","","",43],[10,"emit_tuple_arg","","",43],[10,"emit_tuple_struct","","",43],[10,"emit_tuple_struct_arg","","",43],[10,"emit_option","","",43],[10,"emit_option_none","","",43],[10,"emit_option_some","","",43],[10,"emit_seq","","",43],[10,"emit_seq_elt","","",43],[10,"emit_map","","",43],[10,"emit_map_elt_key","","",43],[10,"emit_map_elt_val","","",43],[8,"Decodable","",""],[10,"decode","","",44],[8,"Encodable","",""],[10,"encode","","",45],[8,"DecoderHelpers","",""],[10,"read_to_vec","","",46],[8,"EncoderHelpers","",""],[10,"emit_from_vec","","",47]],"paths":[[3,"String"],[3,"Box"],[3,"Rc"],[3,"Vec"],[4,"Option"],[3,"Path"],[3,"Path"],[3,"Cell"],[3,"RefCell"],[3,"Arc"],[3,"DList"],[3,"RingBuf"],[3,"BTreeMap"],[3,"BTreeSet"],[3,"HashMap"],[3,"HashSet"],[3,"VecMap"],[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};

searchIndex['sdl2'] = {"items":[[0,"","sdl2",""],[0,"keycode","",""],[4,"KeyCode","sdl2::keycode",""],[13,"Unknown","","",0],[13,"Backspace","","",0],[13,"Tab","","",0],[13,"Return","","",0],[13,"Escape","","",0],[13,"Space","","",0],[13,"Exclaim","","",0],[13,"Quotedbl","","",0],[13,"Hash","","",0],[13,"Dollar","","",0],[13,"Percent","","",0],[13,"Ampersand","","",0],[13,"Quote","","",0],[13,"LeftParen","","",0],[13,"RightParen","","",0],[13,"Asterisk","","",0],[13,"Plus","","",0],[13,"Comma","","",0],[13,"Minus","","",0],[13,"Period","","",0],[13,"Slash","","",0],[13,"Num0","","",0],[13,"Num1","","",0],[13,"Num2","","",0],[13,"Num3","","",0],[13,"Num4","","",0],[13,"Num5","","",0],[13,"Num6","","",0],[13,"Num7","","",0],[13,"Num8","","",0],[13,"Num9","","",0],[13,"Colon","","",0],[13,"Semicolon","","",0],[13,"Less","","",0],[13,"Equals","","",0],[13,"Greater","","",0],[13,"Question","","",0],[13,"At","","",0],[13,"LeftBracket","","",0],[13,"Backslash","","",0],[13,"RightBracket","","",0],[13,"Caret","","",0],[13,"Underscore","","",0],[13,"Backquote","","",0],[13,"A","","",0],[13,"B","","",0],[13,"C","","",0],[13,"D","","",0],[13,"E","","",0],[13,"F","","",0],[13,"G","","",0],[13,"H","","",0],[13,"I","","",0],[13,"J","","",0],[13,"K","","",0],[13,"L","","",0],[13,"M","","",0],[13,"N","","",0],[13,"O","","",0],[13,"P","","",0],[13,"Q","","",0],[13,"R","","",0],[13,"S","","",0],[13,"T","","",0],[13,"U","","",0],[13,"V","","",0],[13,"W","","",0],[13,"X","","",0],[13,"Y","","",0],[13,"Z","","",0],[13,"Delete","","",0],[13,"CapsLock","","",0],[13,"F1","","",0],[13,"F2","","",0],[13,"F3","","",0],[13,"F4","","",0],[13,"F5","","",0],[13,"F6","","",0],[13,"F7","","",0],[13,"F8","","",0],[13,"F9","","",0],[13,"F10","","",0],[13,"F11","","",0],[13,"F12","","",0],[13,"PrintScreen","","",0],[13,"ScrollLock","","",0],[13,"Pause","","",0],[13,"Insert","","",0],[13,"Home","","",0],[13,"PageUp","","",0],[13,"End","","",0],[13,"PageDown","","",0],[13,"Right","","",0],[13,"Left","","",0],[13,"Down","","",0],[13,"Up","","",0],[13,"NumLockClear","","",0],[13,"KpDivide","","",0],[13,"KpMultiply","","",0],[13,"KpMinus","","",0],[13,"KpPlus","","",0],[13,"KpEnter","","",0],[13,"Kp1","","",0],[13,"Kp2","","",0],[13,"Kp3","","",0],[13,"Kp4","","",0],[13,"Kp5","","",0],[13,"Kp6","","",0],[13,"Kp7","","",0],[13,"Kp8","","",0],[13,"Kp9","","",0],[13,"Kp0","","",0],[13,"KpPeriod","","",0],[13,"Application","","",0],[13,"Power","","",0],[13,"KpEquals","","",0],[13,"F13","","",0],[13,"F14","","",0],[13,"F15","","",0],[13,"F16","","",0],[13,"F17","","",0],[13,"F18","","",0],[13,"F19","","",0],[13,"F20","","",0],[13,"F21","","",0],[13,"F22","","",0],[13,"F23","","",0],[13,"F24","","",0],[13,"Execute","","",0],[13,"Help","","",0],[13,"Menu","","",0],[13,"Select","","",0],[13,"Stop","","",0],[13,"Again","","",0],[13,"Undo","","",0],[13,"Cut","","",0],[13,"Copy","","",0],[13,"Paste","","",0],[13,"Find","","",0],[13,"Mute","","",0],[13,"VolumeUp","","",0],[13,"VolumeDown","","",0],[13,"KpComma","","",0],[13,"KpEqualsAS400","","",0],[13,"AltErase","","",0],[13,"Sysreq","","",0],[13,"Cancel","","",0],[13,"Clear","","",0],[13,"Prior","","",0],[13,"Return2","","",0],[13,"Separator","","",0],[13,"Out","","",0],[13,"Oper","","",0],[13,"ClearAgain","","",0],[13,"CrSel","","",0],[13,"ExSel","","",0],[13,"Kp00","","",0],[13,"Kp000","","",0],[13,"ThousandsSeparator","","",0],[13,"DecimalSeparator","","",0],[13,"CurrencyUnit","","",0],[13,"CurrencySubUnit","","",0],[13,"KpLeftParen","","",0],[13,"KpRightParen","","",0],[13,"KpLeftBrace","","",0],[13,"KpRightBrace","","",0],[13,"KpTab","","",0],[13,"KpBackspace","","",0],[13,"KpA","","",0],[13,"KpB","","",0],[13,"KpC","","",0],[13,"KpD","","",0],[13,"KpE","","",0],[13,"KpF","","",0],[13,"KpXor","","",0],[13,"KpPower","","",0],[13,"KpPercent","","",0],[13,"KpLess","","",0],[13,"KpGreater","","",0],[13,"KpAmpersand","","",0],[13,"KpDblAmpersand","","",0],[13,"KpVerticalBar","","",0],[13,"KpDblVerticalBar","","",0],[13,"KpColon","","",0],[13,"KpHash","","",0],[13,"KpSpace","","",0],[13,"KpAt","","",0],[13,"KpExclam","","",0],[13,"KpMemStore","","",0],[13,"KpMemRecall","","",0],[13,"KpMemClear","","",0],[13,"KpMemAdd","","",0],[13,"KpMemSubtract","","",0],[13,"KpMemMultiply","","",0],[13,"KpMemDivide","","",0],[13,"KpPlusMinus","","",0],[13,"KpCear","","",0],[13,"KpClearEntry","","",0],[13,"KpBinary","","",0],[13,"KpOctal","","",0],[13,"KpDecimal","","",0],[13,"KpHexadecimal","","",0],[13,"LCtrl","","",0],[13,"LShift","","",0],[13,"LAlt","","",0],[13,"LGui","","",0],[13,"RCtrl","","",0],[13,"RShift","","",0],[13,"RAlt","","",0],[13,"RGui","","",0],[13,"Mode","","",0],[13,"AudioNext","","",0],[13,"AudioPrev","","",0],[13,"AudioStop","","",0],[13,"AudioPlay","","",0],[13,"AudioMute","","",0],[13,"MediaSelect","","",0],[13,"Www","","",0],[13,"Mail","","",0],[13,"Calculator","","",0],[13,"Computer","","",0],[13,"AcSearch","","",0],[13,"AcHome","","",0],[13,"AcBack","","",0],[13,"AcForward","","",0],[13,"AcStop","","",0],[13,"AcRefresh","","",0],[13,"AcBookmarks","","",0],[13,"BrightnessDown","","",0],[13,"BrightnessUp","","",0],[13,"DisplaySwitch","","",0],[13,"KbdIllumToggle","","",0],[13,"KbdIllumDown","","",0],[13,"KbdIllumUp","","",0],[13,"Eject","","",0],[13,"Sleep","","",0],[11,"fmt","","",0],[11,"from_i64","","",0],[11,"from_u64","","",0],[11,"eq","","",0],[11,"ne","","",0],[11,"hash","","",0],[11,"to_i64","","",0],[11,"to_u64","","",0],[11,"to_int","","",0],[0,"scancode","sdl2",""],[4,"ScanCode","sdl2::scancode",""],[13,"Unknown","","",1],[13,"A","","",1],[13,"B","","",1],[13,"C","","",1],[13,"D","","",1],[13,"E","","",1],[13,"F","","",1],[13,"G","","",1],[13,"H","","",1],[13,"I","","",1],[13,"J","","",1],[13,"K","","",1],[13,"L","","",1],[13,"M","","",1],[13,"N","","",1],[13,"O","","",1],[13,"P","","",1],[13,"Q","","",1],[13,"R","","",1],[13,"S","","",1],[13,"T","","",1],[13,"U","","",1],[13,"V","","",1],[13,"W","","",1],[13,"X","","",1],[13,"Y","","",1],[13,"Z","","",1],[13,"Num1","","",1],[13,"Num2","","",1],[13,"Num3","","",1],[13,"Num4","","",1],[13,"Num5","","",1],[13,"Num6","","",1],[13,"Num7","","",1],[13,"Num8","","",1],[13,"Num9","","",1],[13,"Num0","","",1],[13,"Return","","",1],[13,"Escape","","",1],[13,"Backspace","","",1],[13,"Tab","","",1],[13,"Space","","",1],[13,"Minus","","",1],[13,"Equals","","",1],[13,"LeftBracket","","",1],[13,"RightBracket","","",1],[13,"Backslash","","",1],[13,"NonUsHash","","",1],[13,"Semicolon","","",1],[13,"Apostrophe","","",1],[13,"Grave","","",1],[13,"Comma","","",1],[13,"Period","","",1],[13,"Slash","","",1],[13,"CapsLock","","",1],[13,"F1","","",1],[13,"F2","","",1],[13,"F3","","",1],[13,"F4","","",1],[13,"F5","","",1],[13,"F6","","",1],[13,"F7","","",1],[13,"F8","","",1],[13,"F9","","",1],[13,"F10","","",1],[13,"F11","","",1],[13,"F12","","",1],[13,"PrintScreen","","",1],[13,"ScrollLock","","",1],[13,"Pause","","",1],[13,"Insert","","",1],[13,"Home","","",1],[13,"PageUp","","",1],[13,"Delete","","",1],[13,"End","","",1],[13,"PageDown","","",1],[13,"Right","","",1],[13,"Left","","",1],[13,"Down","","",1],[13,"Up","","",1],[13,"NumLockClear","","",1],[13,"KpDivide","","",1],[13,"KpMultiply","","",1],[13,"KpMinus","","",1],[13,"KpPlus","","",1],[13,"KpEnter","","",1],[13,"Kp1","","",1],[13,"Kp2","","",1],[13,"Kp3","","",1],[13,"Kp4","","",1],[13,"Kp5","","",1],[13,"Kp6","","",1],[13,"Kp7","","",1],[13,"Kp8","","",1],[13,"Kp9","","",1],[13,"Kp0","","",1],[13,"KpPeriod","","",1],[13,"NonUsBackslash","","",1],[13,"Application","","",1],[13,"Power","","",1],[13,"KpEquals","","",1],[13,"F13","","",1],[13,"F14","","",1],[13,"F15","","",1],[13,"F16","","",1],[13,"F17","","",1],[13,"F18","","",1],[13,"F19","","",1],[13,"F20","","",1],[13,"F21","","",1],[13,"F22","","",1],[13,"F23","","",1],[13,"F24","","",1],[13,"Execute","","",1],[13,"Help","","",1],[13,"Menu","","",1],[13,"Select","","",1],[13,"Stop","","",1],[13,"Again","","",1],[13,"Undo","","",1],[13,"Cut","","",1],[13,"Copy","","",1],[13,"Paste","","",1],[13,"Find","","",1],[13,"Mute","","",1],[13,"VolumeUp","","",1],[13,"VolumeDown","","",1],[13,"KpComma","","",1],[13,"KpEqualsAS400","","",1],[13,"International1","","",1],[13,"International2","","",1],[13,"International3","","",1],[13,"International4","","",1],[13,"International5","","",1],[13,"International6","","",1],[13,"International7","","",1],[13,"International8","","",1],[13,"International9","","",1],[13,"Lang1","","",1],[13,"Lang2","","",1],[13,"Lang3","","",1],[13,"Lang4","","",1],[13,"Lang5","","",1],[13,"Lang6","","",1],[13,"Lang7","","",1],[13,"Lang8","","",1],[13,"Lang9","","",1],[13,"AltErase","","",1],[13,"SysReq","","",1],[13,"Cancel","","",1],[13,"Clear","","",1],[13,"Prior","","",1],[13,"Return2","","",1],[13,"Separator","","",1],[13,"Out","","",1],[13,"Oper","","",1],[13,"ClearAgain","","",1],[13,"Crse","","",1],[13,"ExseL","","",1],[13,"Kp00","","",1],[13,"Kp000","","",1],[13,"ThousandsSeparator","","",1],[13,"DecimalSeparator","","",1],[13,"CurrencyUnit","","",1],[13,"CurrencySubUnit","","",1],[13,"KpLeftParen","","",1],[13,"KpRightParen","","",1],[13,"KpLeftBrace","","",1],[13,"KpRightBrace","","",1],[13,"KpTab","","",1],[13,"KpBackspace","","",1],[13,"KpA","","",1],[13,"KpB","","",1],[13,"KpC","","",1],[13,"KpD","","",1],[13,"KpE","","",1],[13,"KpF","","",1],[13,"KpXor","","",1],[13,"KpPower","","",1],[13,"KpPercent","","",1],[13,"KpLess","","",1],[13,"KpGreater","","",1],[13,"KpAmpersand","","",1],[13,"KpDblAmpersand","","",1],[13,"KpVerticalBar","","",1],[13,"KpDblVerticalBar","","",1],[13,"KpColon","","",1],[13,"KpHash","","",1],[13,"KpSpace","","",1],[13,"KpAt","","",1],[13,"KpExclam","","",1],[13,"KpMemStore","","",1],[13,"KpMemRecall","","",1],[13,"KpMemClear","","",1],[13,"KpMemAdd","","",1],[13,"KpMemSubtract","","",1],[13,"KpMemMultiply","","",1],[13,"KpMemDivide","","",1],[13,"KpPlusMinus","","",1],[13,"KpClear","","",1],[13,"KpClearEntry","","",1],[13,"KpBinary","","",1],[13,"KpOoctal","","",1],[13,"KpDecimal","","",1],[13,"KpHexadecimal","","",1],[13,"LCtrl","","",1],[13,"LShift","","",1],[13,"LAlt","","",1],[13,"LGui","","",1],[13,"RCtrl","","",1],[13,"RShift","","",1],[13,"RAlt","","",1],[13,"RGui","","",1],[13,"Mode","","",1],[13,"AudioNext","","",1],[13,"AudioPrev","","",1],[13,"AudioStop","","",1],[13,"AudioPlay","","",1],[13,"AudioMute","","",1],[13,"MediaSelect","","",1],[13,"Www","","",1],[13,"Mail","","",1],[13,"Calculator","","",1],[13,"Computer","","",1],[13,"AcSearch","","",1],[13,"AcHome","","",1],[13,"AcBack","","",1],[13,"AcForward","","",1],[13,"AcStop","","",1],[13,"AcRefresh","","",1],[13,"AcBookmarks","","",1],[13,"BrightnessDown","","",1],[13,"BrightnessUp","","",1],[13,"DisplaySwitch","","",1],[13,"KbdIllumToggle","","",1],[13,"KbdIllumDown","","",1],[13,"KbdIllumUp","","",1],[13,"Eject","","",1],[13,"Sleep","","",1],[13,"App1","","",1],[13,"App2","","",1],[13,"Num","","",1],[11,"fmt","","",1],[11,"from_i64","","",1],[11,"from_u64","","",1],[11,"eq","","",1],[11,"ne","","",1],[11,"hash","","",1],[11,"to_i64","","",1],[11,"to_u64","","",1],[11,"to_int","","",1],[0,"clipboard","sdl2",""],[5,"set_clipboard_text","sdl2::clipboard",""],[5,"get_clipboard_text","",""],[5,"has_clipboard_text","",""],[0,"cpuinfo","sdl2",""],[5,"get_cpu_count","sdl2::cpuinfo",""],[5,"get_cpu_cache_line_size","",""],[5,"has_rdtsc","",""],[5,"has_alti_vec","",""],[5,"has_mmx","",""],[5,"has_3d_now","",""],[5,"has_sse","",""],[5,"has_sse2","",""],[5,"has_sse3","",""],[5,"has_sse41","",""],[5,"has_sse42","",""],[5,"has_avx","",""],[5,"get_system_ram","",""],[17,"CACHELINESIZE","",""],[0,"event","sdl2","Event Handling"],[4,"EventType","sdl2::event","Types of events that can be delivered."],[13,"First","","",2],[13,"Quit","","",2],[13,"AppTerminating","","",2],[13,"AppLowMemory","","",2],[13,"AppWillEnterBackground","","",2],[13,"AppDidEnterBackground","","",2],[13,"AppWillEnterForeground","","",2],[13,"AppDidEnterForeground","","",2],[13,"Window","","",2],[13,"KeyDown","","",2],[13,"KeyUp","","",2],[13,"TextEditing","","",2],[13,"TextInput","","",2],[13,"MouseMotion","","",2],[13,"MouseButtonDown","","",2],[13,"MouseButtonUp","","",2],[13,"MouseWheel","","",2],[13,"JoyAxisMotion","","",2],[13,"JoyBallMotion","","",2],[13,"JoyHatMotion","","",2],[13,"JoyButtonDown","","",2],[13,"JoyButtonUp","","",2],[13,"JoyDeviceAdded","","",2],[13,"JoyDeviceRemoved","","",2],[13,"ControllerAxisMotion","","",2],[13,"ControllerButtonDown","","",2],[13,"ControllerButtonUp","","",2],[13,"ControllerDeviceAdded","","",2],[13,"ControllerDeviceRemoved","","",2],[13,"ControllerDeviceRemapped","","",2],[13,"FingerDown","","",2],[13,"FingerUp","","",2],[13,"FingerMotion","","",2],[13,"DollarGesture","","",2],[13,"DollarRecord","","",2],[13,"MultiGesture","","",2],[13,"ClipboardUpdate","","",2],[13,"DropFile","","",2],[13,"User","","",2],[13,"Last","","",2],[4,"WindowEventId","","An enum of window events."],[13,"None","","",3],[13,"Shown","","",3],[13,"Hidden","","",3],[13,"Exposed","","",3],[13,"Moved","","",3],[13,"Resized","","",3],[13,"SizeChanged","","",3],[13,"Minimized","","",3],[13,"Maximized","","",3],[13,"Restored","","",3],[13,"Enter","","",3],[13,"Leave","","",3],[13,"FocusGained","","",3],[13,"FocusLost","","",3],[13,"Close","","",3],[4,"Event","","Different event types."],[13,"None","","",4],[13,"Quit","","",4],[12,"timestamp","sdl2::event::Event","",4],[13,"AppTerminating","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[13,"AppLowMemory","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[13,"AppWillEnterBackground","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[13,"AppDidEnterBackground","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[13,"AppWillEnterForeground","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[13,"AppDidEnterForeground","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[13,"Window","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"window_id","","",4],[12,"win_event_id","","",4],[12,"data1","","",4],[12,"data2","","",4],[13,"KeyDown","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"window_id","","",4],[12,"keycode","","",4],[12,"scancode","","",4],[12,"keymod","","",4],[12,"repeat","","",4],[13,"KeyUp","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"window_id","","",4],[12,"keycode","","",4],[12,"scancode","","",4],[12,"keymod","","",4],[12,"repeat","","",4],[13,"TextEditing","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"window_id","","",4],[12,"text","","",4],[12,"start","","",4],[12,"length","","",4],[13,"TextInput","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"window_id","","",4],[12,"text","","",4],[13,"MouseMotion","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"window_id","","",4],[12,"which","","",4],[12,"mousestate","","",4],[12,"x","","",4],[12,"y","","",4],[12,"xrel","","",4],[12,"yrel","","",4],[13,"MouseButtonDown","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"window_id","","",4],[12,"which","","",4],[12,"mouse_btn","","",4],[12,"x","","",4],[12,"y","","",4],[13,"MouseButtonUp","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"window_id","","",4],[12,"which","","",4],[12,"mouse_btn","","",4],[12,"x","","",4],[12,"y","","",4],[13,"MouseWheel","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"window_id","","",4],[12,"which","","",4],[12,"x","","",4],[12,"y","","",4],[13,"JoyAxisMotion","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"which","","",4],[12,"axis_idx","","",4],[12,"value","","",4],[13,"JoyBallMotion","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"which","","",4],[12,"ball_idx","","",4],[12,"xrel","","",4],[12,"yrel","","",4],[13,"JoyHatMotion","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"which","","",4],[12,"hat_idx","","",4],[12,"state","","",4],[13,"JoyButtonDown","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"which","","",4],[12,"button_idx","","",4],[13,"JoyButtonUp","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"which","","",4],[12,"button_idx","","",4],[13,"JoyDeviceAdded","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"which","","",4],[13,"JoyDeviceRemoved","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"which","","",4],[13,"ControllerAxisMotion","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"which","","",4],[12,"axis","","",4],[12,"value","","",4],[13,"ControllerButtonDown","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"which","","",4],[12,"button","","",4],[13,"ControllerButtonUp","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"which","","",4],[12,"button","","",4],[13,"ControllerDeviceAdded","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"which","","",4],[13,"ControllerDeviceRemoved","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"which","","",4],[13,"ControllerDeviceRemapped","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"which","","",4],[13,"FingerDown","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"touch_id","","",4],[12,"finger_id","","",4],[12,"x","","",4],[12,"y","","",4],[12,"dx","","",4],[12,"dy","","",4],[12,"pressure","","",4],[13,"FingerUp","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"touch_id","","",4],[12,"finger_id","","",4],[12,"x","","",4],[12,"y","","",4],[12,"dx","","",4],[12,"dy","","",4],[12,"pressure","","",4],[13,"FingerMotion","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"touch_id","","",4],[12,"finger_id","","",4],[12,"x","","",4],[12,"y","","",4],[12,"dx","","",4],[12,"dy","","",4],[12,"pressure","","",4],[13,"DollarGesture","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"touch_id","","",4],[12,"gesture_id","","",4],[12,"num_fingers","","",4],[12,"error","","",4],[12,"x","","",4],[12,"y","","",4],[13,"DollarRecord","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"touch_id","","",4],[12,"gesture_id","","",4],[12,"num_fingers","","",4],[12,"error","","",4],[12,"x","","",4],[12,"y","","",4],[13,"MultiGesture","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"touch_id","","",4],[12,"d_theta","","",4],[12,"d_dist","","",4],[12,"x","","",4],[12,"y","","",4],[12,"num_fingers","","",4],[13,"ClipboardUpdate","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[13,"DropFile","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"filename","","",4],[13,"User","sdl2::event","",4],[12,"timestamp","sdl2::event::Event","",4],[12,"window_id","","",4],[12,"_type","","",4],[12,"code","","",4],[5,"pump_events","sdl2::event","Pump the event loop, gathering events from the input devices."],[5,"has_event","","Check for the existence of certain event types in the event queue."],[5,"has_events","","Check for the existence of a range of event types in the event queue."],[5,"flush_event","","Clear events from the event queue."],[5,"flush_events","","Clear events from the event queue of a range of event types."],[5,"poll_event","","Poll for currently pending events."],[5,"wait_event","","Wait indefinitely for the next available event."],[5,"wait_event_timeout","","Wait until the specified timeout (in milliseconds) for the next available event."],[5,"set_event_filter","","Set up a filter to process all events before they change internal state and are posted to the internal event queue."],[5,"add_event_watch","","Add a callback to be triggered when an event is added to the event queue."],[5,"delete_event_watch","","Remove an event watch callback added."],[5,"filter_events","","Run a specific filter function on the current event queue, removing any events for which the filter returns 0."],[5,"set_event_state","","Set the state of processing events."],[5,"get_event_state","","Get the state of processing events."],[5,"register_events","","allocate a set of user-defined events, and return the beginning event number for that set of events"],[5,"push_event","","add an event to the event queue"],[11,"from_i64","","",2],[11,"from_u64","","",2],[11,"clone","","",2],[11,"fmt","","",3],[11,"clone","","",3],[11,"eq","","",3],[11,"ne","","",3],[11,"fmt","","",4],[0,"filesystem","sdl2",""],[5,"get_base_path","sdl2::filesystem",""],[5,"get_pref_path","",""],[0,"touch","sdl2",""],[5,"get_num_touch_devices","sdl2::touch",""],[5,"get_touch_device","",""],[5,"get_num_touch_fingers","",""],[5,"get_touch_finger","",""],[6,"Finger","",""],[6,"TouchDevice","",""],[0,"joystick","sdl2",""],[3,"Joystick","sdl2::joystick","Wrapper around the SDL_Joystick object"],[3,"Guid","","Wrapper around a SDL_JoystickGUID, a globally unique identifier\nfor a joystick."],[4,"HatState","","This is represented in SDL2 as a bitfield but obviously not all\ncombinations make sense: 5 for instance would mean up and down at\nthe same time... To simplify things I turn it into an enum which\nis how the SDL2 docs present it anyway (using macros)."],[13,"Centered","","",5],[13,"Up","","",5],[13,"Right","","",5],[13,"Down","","",5],[13,"Left","","",5],[13,"RightUp","","",5],[13,"RightDown","","",5],[13,"LeftUp","","",5],[13,"Leftdown","","",5],[5,"num_joysticks","","Retreive the total number of attached joysticks *and* controllers\nidentified by SDL."],[5,"get_device_guid","","Get the GUID for the joystick number `id`"],[5,"set_event_state","","If state is `true` joystick events are processed, otherwise\nthey're ignored."],[5,"get_event_state","","Return `true` if joystick events are processed."],[5,"name_for_index","","Return the name of the joystick at index `id`"],[5,"update","","Force joystick update when not using the event loop"],[11,"open","","Attempt to open the joystick at number `id` and return it.",6],[11,"name","","Return the name of the joystick or an empty string if no name\nis found.",6],[11,"get_attached","","Return true if the joystick has been opened and currently\nconnected.",6],[11,"get_instance_id","","",6],[11,"get_guid","","Retreive the joystick's GUID",6],[11,"get_num_axis","","Retreive the number of axes for this joystick",6],[11,"get_axis","","Get the position of the given `axis`",6],[11,"get_num_buttons","","Retreive the number of buttons for this joystick",6],[11,"get_button","","Return `Ok(true)` if `button` is pressed.",6],[11,"get_num_balls","","Retreive the number of balls for this joystick",6],[11,"get_ball","","Return a pair `(dx, dy)` containing the difference in axis\nposition since the last poll",6],[11,"get_num_hats","","Retreive the number of balls for this joystick",6],[11,"get_hat","","Return the position of `hat` for this joystick",6],[11,"drop","","",6],[11,"from_string","","Create a GUID from a string representation. No error checking.",7],[11,"is_zero","","Return `true` if GUID is full 0s",7],[11,"get_string","","Return a String representation of GUID",7],[11,"raw","","Return a copy of the internal SDL_JoystickGUID",7],[11,"fmt","","",7],[11,"fmt","","",5],[11,"from_raw","","",5],[0,"controller","sdl2",""],[3,"GameController","sdl2::controller","Wrapper around the SDL_GameController object"],[4,"Axis","",""],[13,"Invalid","","",8],[13,"LeftX","","",8],[13,"LeftY","","",8],[13,"RightX","","",8],[13,"RightY","","",8],[13,"TriggerLeft","","",8],[13,"TriggerRight","","",8],[4,"Button","",""],[13,"Invalid","","",9],[13,"A","","",9],[13,"B","","",9],[13,"X","","",9],[13,"Y","","",9],[13,"Back","","",9],[13,"Guide","","",9],[13,"Start","","",9],[13,"LeftStick","","",9],[13,"RightStick","","",9],[13,"LeftShoulder","","",9],[13,"RightShoulder","","",9],[13,"DPadUp","","",9],[13,"DPadDown","","",9],[13,"DPadLeft","","",9],[13,"DPadRight","","",9],[4,"MappingStatus","","Possible return values for `add_mapping`"],[13,"Added","","",10],[13,"Updated","","",10],[5,"wrap_controller_axis","",""],[5,"wrap_controller_button","",""],[5,"is_game_controller","","Return true if the joystick at index `id` is a game controller."],[5,"name_for_index","","Return the name of the controller at index `id`"],[5,"update","","Force controller update when not using the event loop"],[5,"set_event_state","","If state is `true` controller events are processed, otherwise\nthey're ignored."],[5,"get_event_state","","Return `true` if controller events are processed."],[5,"add_mapping","","Add a new mapping from a mapping string"],[5,"mapping_for_guid","",""],[11,"fmt","","",8],[11,"eq","","",8],[11,"ne","","",8],[11,"clone","","",8],[11,"from_string","","Return the Axis from a string description in the same format\nused by the game controller mapping strings.",8],[11,"get_string","","Return a string for a given axis in the same format using by\nthe game controller mapping strings",8],[11,"fmt","","",9],[11,"eq","","",9],[11,"ne","","",9],[11,"clone","","",9],[11,"from_string","","Return the Button from a string description in the same format\nused by the game controller mapping strings.",9],[11,"get_string","","Return a string for a given button in the same format using by\nthe game controller mapping strings",9],[11,"open","","Attempt to open the controller number `id` and return\nit. Controller IDs are the same as joystick IDs and the\nmaximum number can be retreived using the `SDL_NumJoysticks`\nfunction.",11],[11,"name","","Return the name of the controller or an empty string if no\nname is found.",11],[11,"mapping","","Return a String describing the controller's button and axis\nmappings",11],[11,"get_attached","","Return true if the controller has been opened and currently\nconnected.",11],[11,"get_axis","","Get the position of the given `axis`",11],[11,"get_button","","Return `Ok(true)` if `button` is pressed.",11],[11,"drop","","",11],[0,"haptic","sdl2","Haptic Functions"],[0,"keyboard","",""],[3,"Mod","sdl2::keyboard",""],[5,"get_keyboard_focus","",""],[5,"get_keyboard_state","",""],[5,"get_mod_state","",""],[5,"set_mod_state","",""],[5,"get_key_from_scancode","",""],[5,"get_scancode_from_key","",""],[5,"get_scancode_name","",""],[5,"get_scancode_from_name","",""],[5,"get_key_name","",""],[5,"get_key_from_name","",""],[5,"start_text_input","",""],[5,"is_text_input_active","",""],[5,"stop_text_input","",""],[5,"set_text_input_rect","",""],[5,"has_screen_keyboard_support","",""],[5,"is_screen_keyboard_shown","",""],[17,"NOMOD","",""],[17,"LSHIFTMOD","",""],[17,"RSHIFTMOD","",""],[17,"LCTRLMOD","",""],[17,"RCTRLMOD","",""],[17,"LALTMOD","",""],[17,"RALTMOD","",""],[17,"LGUIMOD","",""],[17,"RGUIMOD","",""],[17,"NUMMOD","",""],[17,"CAPSMOD","",""],[17,"MODEMOD","",""],[17,"RESERVEDMOD","",""],[11,"hash","","",12],[11,"cmp","","",12],[11,"partial_cmp","","",12],[11,"lt","","",12],[11,"le","","",12],[11,"gt","","",12],[11,"ge","","",12],[11,"clone","","",12],[11,"eq","","",12],[11,"ne","","",12],[11,"empty","","Returns an empty set of flags.",12],[11,"all","","Returns the set containing all flags.",12],[11,"bits","","Returns the raw value of the flags currently stored.",12],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",12],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",12],[11,"is_empty","","Returns `true` if no flags are currently stored.",12],[11,"is_all","","Returns `true` if all flags are currently set.",12],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",12],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",12],[11,"insert","","Inserts the specified flags in-place.",12],[11,"remove","","Removes the specified flags in-place.",12],[11,"toggle","","Toggles the specified flags in-place.",12],[6,"Output","",""],[11,"bitor","","Returns the union of the two sets of flags.",12],[6,"Output","",""],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",12],[6,"Output","",""],[11,"bitand","","Returns the intersection between the two sets of flags.",12],[6,"Output","",""],[11,"sub","","Returns the set difference of the two sets of flags.",12],[6,"Output","",""],[11,"not","","Returns the complement of this set of flags.",12],[0,"mouse","sdl2",""],[3,"Cursor","sdl2::mouse",""],[3,"MouseState","",""],[4,"SystemCursor","",""],[13,"Arrow","","",13],[13,"IBeam","","",13],[13,"Wait","","",13],[13,"Crosshair","","",13],[13,"WaitArrow","","",13],[13,"SizeNWSE","","",13],[13,"SizeNESW","","",13],[13,"SizeWE","","",13],[13,"SizeNS","","",13],[13,"SizeAll","","",13],[13,"No","","",13],[13,"Hand","","",13],[4,"Mouse","",""],[13,"Left","","",14],[13,"Middle","","",14],[13,"Right","","",14],[13,"X1","","",14],[13,"X2","","",14],[13,"Unknown","","",14],[5,"wrap_mouse","",""],[5,"get_mouse_focus","",""],[5,"get_mouse_state","",""],[5,"get_relative_mouse_state","",""],[5,"warp_mouse_in_window","",""],[5,"set_relative_mouse_mode","",""],[5,"get_relative_mouse_mode","",""],[5,"get_cursor","",""],[5,"get_default_cursor","",""],[5,"is_cursor_showing","",""],[5,"show_cursor","",""],[17,"LEFTMOUSESTATE","",""],[17,"MIDDLEMOUSESTATE","",""],[17,"RIGHTMOUSESTATE","",""],[17,"X1MOUSESTATE","",""],[17,"X2MOUSESTATE","",""],[11,"eq","","",13],[11,"ne","","",13],[11,"clone","","",13],[11,"eq","","",15],[11,"ne","","",15],[11,"drop","","",15],[11,"new","","",15],[11,"from_surface","","",15],[11,"from_system","","",15],[11,"set","","",15],[11,"eq","","",14],[11,"ne","","",14],[11,"clone","","",14],[11,"hash","","",16],[11,"cmp","","",16],[11,"partial_cmp","","",16],[11,"lt","","",16],[11,"le","","",16],[11,"gt","","",16],[11,"ge","","",16],[11,"clone","","",16],[11,"eq","","",16],[11,"ne","","",16],[11,"empty","","Returns an empty set of flags.",16],[11,"all","","Returns the set containing all flags.",16],[11,"bits","","Returns the raw value of the flags currently stored.",16],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",16],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",16],[11,"is_empty","","Returns `true` if no flags are currently stored.",16],[11,"is_all","","Returns `true` if all flags are currently set.",16],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",16],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",16],[11,"insert","","Inserts the specified flags in-place.",16],[11,"remove","","Removes the specified flags in-place.",16],[11,"toggle","","Toggles the specified flags in-place.",16],[6,"Output","",""],[11,"bitor","","Returns the union of the two sets of flags.",16],[6,"Output","",""],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",16],[6,"Output","",""],[11,"bitand","","Returns the intersection between the two sets of flags.",16],[6,"Output","",""],[11,"sub","","Returns the set difference of the two sets of flags.",16],[6,"Output","",""],[11,"not","","Returns the complement of this set of flags.",16],[0,"rect","sdl2",""],[0,"surface","",""],[3,"SurfaceFlag","sdl2::surface",""],[3,"Surface","",""],[17,"SWSURFACE","",""],[17,"PREALLOC","",""],[17,"RLEACCEL","",""],[17,"DONTFREE","",""],[11,"hash","","",17],[11,"cmp","","",17],[11,"partial_cmp","","",17],[11,"lt","","",17],[11,"le","","",17],[11,"gt","","",17],[11,"ge","","",17],[11,"clone","","",17],[11,"eq","","",17],[11,"ne","","",17],[11,"empty","","Returns an empty set of flags.",17],[11,"all","","Returns the set containing all flags.",17],[11,"bits","","Returns the raw value of the flags currently stored.",17],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",17],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",17],[11,"is_empty","","Returns `true` if no flags are currently stored.",17],[11,"is_all","","Returns `true` if all flags are currently set.",17],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",17],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",17],[11,"insert","","Inserts the specified flags in-place.",17],[11,"remove","","Removes the specified flags in-place.",17],[11,"toggle","","Toggles the specified flags in-place.",17],[6,"Output","",""],[11,"bitor","","Returns the union of the two sets of flags.",17],[6,"Output","",""],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",17],[6,"Output","",""],[11,"bitand","","Returns the intersection between the two sets of flags.",17],[6,"Output","",""],[11,"sub","","Returns the set difference of the two sets of flags.",17],[6,"Output","",""],[11,"not","","Returns the complement of this set of flags.",17],[11,"eq","","",18],[11,"ne","","",18],[11,"drop","","",18],[11,"raw","","",18],[11,"owned","","",18],[11,"from_ll","","",18],[11,"new","","",18],[11,"from_data","","",18],[11,"get_width","","",18],[11,"get_height","","",18],[11,"get_pitch","","",18],[11,"get_size","","",18],[11,"get_rect","","",18],[11,"get_pixel_format","","",18],[11,"lock","","",18],[11,"with_lock","","Locks a surface so that the pixels can be directly accessed safely.",18],[11,"unlock","","",18],[11,"from_bmp","","",18],[11,"save_bmp","","",18],[11,"set_palette","","",18],[11,"enable_RLE","","",18],[11,"disable_RLE","","",18],[11,"set_color_key","","",18],[11,"get_color_key","","",18],[11,"set_color_mod","","",18],[11,"get_color_mod","","",18],[11,"blit","","",18],[11,"fill_rect","","",18],[11,"fill_rects","","",18],[11,"set_alpha_mod","","",18],[11,"get_alpha_mod","","",18],[11,"set_blend_mode","","",18],[11,"get_blend_mode","","",18],[11,"set_clip_rect","","",18],[11,"get_clip_rect","","",18],[11,"convert","","",18],[11,"convert_format","","",18],[11,"lower_blit","","",18],[11,"soft_stretch","","",18],[11,"upper_blit_scaled","","",18],[11,"lower_blit_scaled","","",18],[0,"pixels","sdl2",""],[3,"Palette","sdl2::pixels",""],[3,"PixelFormat","",""],[4,"Color","",""],[13,"RGB","","",19],[13,"RGBA","","",19],[4,"PixelFormatEnum","",""],[13,"Unknown","","",20],[13,"Index1LSB","","",20],[13,"Index1MSB","","",20],[13,"Index4LSB","","",20],[13,"Index4MSB","","",20],[13,"Index8","","",20],[13,"RGB332","","",20],[13,"RGB444","","",20],[13,"RGB555","","",20],[13,"BGR555","","",20],[13,"ARGB4444","","",20],[13,"RGBA4444","","",20],[13,"ABGR4444","","",20],[13,"BGRA4444","","",20],[13,"ARGB1555","","",20],[13,"RGBA5551","","",20],[13,"ABGR1555","","",20],[13,"BGRA5551","","",20],[13,"RGB565","","",20],[13,"BGR565","","",20],[13,"RGB24","","",20],[13,"BGR24","","",20],[13,"RGB888","","",20],[13,"RGBX8888","","",20],[13,"BGR888","","",20],[13,"BGRX8888","","",20],[13,"ARGB8888","","",20],[13,"RGBA8888","","",20],[13,"ABGR8888","","",20],[13,"BGRA8888","","",20],[13,"ARGB2101010","","",20],[13,"YV12","","",20],[13,"IYUV","","",20],[13,"YUY2","","",20],[13,"UYVY","","",20],[13,"YVYU","","",20],[11,"eq","","",21],[11,"ne","","",21],[11,"raw","","",21],[11,"clone","","",19],[11,"eq","","",19],[11,"ne","","",19],[11,"to_u32","","",19],[11,"from_u32","","",19],[11,"get_rgb","","",19],[11,"rand","","",19],[11,"eq","","",22],[11,"ne","","",22],[11,"raw","","",22],[11,"from_ll","","",22],[11,"from_i64","","",20],[11,"from_u64","","",20],[11,"fmt","","",20],[11,"eq","","",20],[11,"ne","","",20],[11,"clone","","",20],[11,"byte_size_of_pixels","","",20],[11,"byte_size_per_pixel","","",20],[0,"video","sdl2",""],[3,"DisplayMode","sdl2::video",""],[12,"format","","",23],[12,"w","","",23],[12,"h","","",23],[12,"refresh_rate","","",23],[3,"WindowFlags","",""],[3,"GLContext","",""],[3,"Window","",""],[4,"GLAttr","",""],[13,"GLRedSize","","",24],[13,"GLGreenSize","","",24],[13,"GLBlueSize","","",24],[13,"GLAlphaSize","","",24],[13,"GLBufferSize","","",24],[13,"GLDoubleBuffer","","",24],[13,"GLDepthSize","","",24],[13,"GLStencilSize","","",24],[13,"GLAccumRedSize","","",24],[13,"GLAccumGreenSize","","",24],[13,"GLAccumBlueSize","","",24],[13,"GLAccumAlphaSize","","",24],[13,"GLStereo","","",24],[13,"GLMultiSampleBuffers","","",24],[13,"GLMultiSampleSamples","","",24],[13,"GLAcceleratedVisual","","",24],[13,"GLRetailedBacking","","",24],[13,"GLContextMajorVersion","","",24],[13,"GLContextMinorVersion","","",24],[13,"GLContextEGL","","",24],[13,"GLContextFlags","","",24],[13,"GLContextProfileMask","","",24],[13,"GLShareWithCurrentContext","","",24],[13,"GLFramebufferSRGBCapable","","",24],[4,"GLProfile","",""],[13,"GLCoreProfile","","",25],[13,"GLCompatibilityProfile","","",25],[13,"GLESProfile","","",25],[4,"FullscreenType","",""],[13,"FTOff","","",26],[13,"FTTrue","","",26],[13,"FTDesktop","","",26],[4,"WindowPos","",""],[13,"PosUndefined","","",27],[13,"PosCentered","","",27],[13,"Positioned","","",27],[5,"get_num_video_drivers","",""],[5,"get_video_driver","",""],[5,"video_init","",""],[5,"video_quit","",""],[5,"get_current_video_driver","",""],[5,"get_num_video_displays","",""],[5,"get_display_name","",""],[5,"get_display_bounds","",""],[5,"get_num_display_modes","",""],[5,"get_display_mode","",""],[5,"get_desktop_display_mode","",""],[5,"get_current_display_mode","",""],[5,"get_closest_display_mode","",""],[5,"is_screen_saver_enabled","",""],[5,"enable_screen_saver","",""],[5,"disable_screen_saver","",""],[5,"gl_load_library","",""],[5,"gl_unload_library","",""],[5,"gl_get_proc_address","",""],[5,"gl_extension_supported","",""],[5,"gl_set_attribute","",""],[5,"gl_get_attribute","",""],[5,"gl_get_current_window","",""],[5,"gl_get_current_context","",""],[5,"gl_set_swap_interval","",""],[5,"gl_get_swap_interval","",""],[17,"FULLSCREEN","",""],[17,"OPENGL","",""],[17,"SHOWN","",""],[17,"HIDDEN","",""],[17,"BORDERLESS","",""],[17,"RESIZABLE","",""],[17,"MINIMIZED","",""],[17,"MAXIMIZED","",""],[17,"INPUT_GRABBED","",""],[17,"INPUT_FOCUS","",""],[17,"MOUSE_FOCUS","",""],[17,"FULLSCREEN_DESKTOP","",""],[17,"FOREIGN","",""],[17,"ALLOW_HIGHDPI","",""],[11,"eq","","",24],[11,"ne","","",24],[11,"clone","","",24],[11,"eq","","",25],[11,"ne","","",25],[11,"clone","","",25],[11,"eq","","",23],[11,"ne","","",23],[11,"clone","","",23],[11,"new","","",23],[11,"from_ll","","",23],[11,"to_ll","","",23],[11,"hash","","",28],[11,"cmp","","",28],[11,"partial_cmp","","",28],[11,"lt","","",28],[11,"le","","",28],[11,"gt","","",28],[11,"ge","","",28],[11,"clone","","",28],[11,"eq","","",28],[11,"ne","","",28],[11,"empty","","Returns an empty set of flags.",28],[11,"all","","Returns the set containing all flags.",28],[11,"bits","","Returns the raw value of the flags currently stored.",28],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",28],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",28],[11,"is_empty","","Returns `true` if no flags are currently stored.",28],[11,"is_all","","Returns `true` if all flags are currently set.",28],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",28],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",28],[11,"insert","","Inserts the specified flags in-place.",28],[11,"remove","","Removes the specified flags in-place.",28],[11,"toggle","","Toggles the specified flags in-place.",28],[6,"Output","",""],[11,"bitor","","Returns the union of the two sets of flags.",28],[6,"Output","",""],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",28],[6,"Output","",""],[11,"bitand","","Returns the intersection between the two sets of flags.",28],[6,"Output","",""],[11,"sub","","Returns the set difference of the two sets of flags.",28],[6,"Output","",""],[11,"not","","Returns the complement of this set of flags.",28],[11,"eq","","",26],[11,"ne","","",26],[11,"clone","","",26],[11,"eq","","",27],[11,"ne","","",27],[11,"eq","","",29],[11,"ne","","",29],[11,"drop","","",29],[11,"eq","","",30],[11,"ne","","",30],[11,"raw","","",29],[11,"raw","","",30],[11,"owned","","",29],[11,"owned","","",30],[11,"from_ll","","",30],[11,"drop","","",30],[11,"new","","",30],[11,"from_id","","",30],[11,"get_display_index","","",30],[11,"set_display_mode","","",30],[11,"get_display_mode","","",30],[11,"get_window_pixel_format","","",30],[11,"get_id","","",30],[11,"get_flags","","",30],[11,"set_title","","",30],[11,"get_title","","",30],[11,"set_icon","","",30],[11,"set_position","","",30],[11,"get_position","","",30],[11,"set_size","","",30],[11,"get_size","","",30],[11,"get_drawable_size","","",30],[11,"set_minimum_size","","",30],[11,"get_minimum_size","","",30],[11,"set_maximum_size","","",30],[11,"get_maximum_size","","",30],[11,"set_bordered","","",30],[11,"show","","",30],[11,"hide","","",30],[11,"raise","","",30],[11,"maximize","","",30],[11,"minimize","","",30],[11,"restore","","",30],[11,"set_fullscreen","","",30],[11,"get_surface","","",30],[11,"update_surface","","",30],[11,"update_surface_rects","","",30],[11,"set_grab","","",30],[11,"get_grab","","",30],[11,"set_brightness","","",30],[11,"get_brightness","","",30],[11,"set_gamma_ramp","","",30],[11,"get_gamma_ramp","","",30],[11,"gl_create_context","","",30],[11,"gl_make_current","","",30],[11,"gl_swap_window","","",30],[0,"timer","sdl2",""],[3,"Timer","sdl2::timer",""],[5,"get_ticks","",""],[5,"get_performance_counter","",""],[5,"get_performance_frequency","",""],[5,"delay","",""],[6,"TimerCallback","",""],[11,"new","","Constructs a new timer using the boxed closure `callback`.\nThe timer is started immediately, it will be cancelled either:\n  * when the timer is dropped\n  * or when the callback returns a non-positive continuation interval",31],[11,"into_inner","","Returns the closure as a trait-object and cancels the timer\nby consuming it...",31],[11,"drop","","",31],[0,"render","sdl2","2D accelerated rendering"],[3,"RendererFlags","sdl2::render",""],[3,"RendererInfo","","A structure that contains information on the capabilities of a render driver\nor the current render context."],[12,"name","","",32],[12,"flags","","",32],[12,"texture_formats","","",32],[12,"max_texture_width","","",32],[12,"max_texture_height","","",32],[3,"Renderer","","2D rendering context"],[3,"RenderDrawer","","Drawing functionality for the render context."],[3,"RenderTarget","","A handle for getting/setting the render target of the render context."],[3,"TextureQuery","",""],[12,"format","","",33],[12,"access","","",33],[12,"width","","",33],[12,"height","","",33],[3,"Texture","","A texture for a rendering context."],[4,"RenderDriverIndex","",""],[13,"Auto","","",34],[13,"Index","","",34],[4,"TextureAccess","",""],[13,"Static","","",35],[13,"Streaming","","",35],[13,"Target","","",35],[4,"BlendMode","",""],[13,"None","","",36],[13,"Blend","","",36],[13,"Add","","",36],[13,"Mod","","",36],[4,"RendererParent","",""],[13,"Surface","","",37],[13,"Window","","",37],[5,"get_num_render_drivers","",""],[5,"get_render_driver_info","",""],[17,"SOFTWARE","",""],[17,"ACCELERATED","",""],[17,"PRESENTVSYNC","",""],[17,"TARGETTEXTURE","",""],[11,"clone","","",34],[11,"from_i64","","",35],[11,"from_u64","","",35],[11,"eq","","",35],[11,"ne","","",35],[11,"clone","","",35],[11,"hash","","",38],[11,"cmp","","",38],[11,"partial_cmp","","",38],[11,"lt","","",38],[11,"le","","",38],[11,"gt","","",38],[11,"ge","","",38],[11,"clone","","",38],[11,"eq","","",38],[11,"ne","","",38],[11,"empty","","Returns an empty set of flags.",38],[11,"all","","Returns the set containing all flags.",38],[11,"bits","","Returns the raw value of the flags currently stored.",38],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",38],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",38],[11,"is_empty","","Returns `true` if no flags are currently stored.",38],[11,"is_all","","Returns `true` if all flags are currently set.",38],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",38],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",38],[11,"insert","","Inserts the specified flags in-place.",38],[11,"remove","","Removes the specified flags in-place.",38],[11,"toggle","","Toggles the specified flags in-place.",38],[6,"Output","",""],[11,"bitor","","Returns the union of the two sets of flags.",38],[6,"Output","",""],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",38],[6,"Output","",""],[11,"bitand","","Returns the intersection between the two sets of flags.",38],[6,"Output","",""],[11,"sub","","Returns the set difference of the two sets of flags.",38],[6,"Output","",""],[11,"not","","Returns the complement of this set of flags.",38],[11,"eq","","",32],[11,"ne","","",32],[11,"from_i64","","",36],[11,"from_u64","","",36],[11,"eq","","",36],[11,"ne","","",36],[11,"clone","","",36],[11,"from_ll","","",32],[11,"drop","","",39],[11,"from_window","","Creates a 2D rendering context for a window.",39],[11,"new_with_window","","Creates a window and default renderer.",39],[11,"from_surface","","Creates a 2D software rendering context for a surface.",39],[11,"get_info","","Gets information about the rendering context.",39],[11,"get_parent","","Gets the window or surface the rendering context was created from.",39],[11,"get_parent_as_window","","",39],[11,"get_parent_as_surface","","",39],[11,"unwrap_parent","","",39],[11,"unwrap_parent_as_window","","",39],[11,"unwrap_parent_as_surface","","",39],[11,"drawer","","Provides drawing methods for the renderer.",39],[11,"raw","","Unwraps the window or surface the rendering context was created from.",39],[11,"from_ll","","",39],[11,"create_texture","","Creates a texture for a rendering context.",39],[11,"create_texture_static","","Shorthand for `create_texture(format, TextureAccess::Static, size)`",39],[11,"create_texture_streaming","","Shorthand for `create_texture(format, TextureAccess::Streaming, size)`",39],[11,"create_texture_target","","Shorthand for `create_texture(format, TextureAccess::Target, size)`",39],[11,"create_texture_from_surface","","Creates a texture from an existing surface.\n# Remarks\nThe access hint for the created texture is `TextureAccess::Static`.",39],[11,"render_target_supported","","Determine whether a window supports the use of render targets.",40],[11,"render_target","","Gets the render target handle.",40],[11,"set_draw_color","","Sets the color used for drawing operations (Rect, Line and Clear).",40],[11,"get_draw_color","","Gets the color used for drawing operations (Rect, Line and Clear).",40],[11,"set_blend_mode","","Sets the blend mode used for drawing operations (Fill and Line).",40],[11,"get_blend_mode","","Gets the blend mode used for drawing operations.",40],[11,"clear","","Clears the current rendering target with the drawing color.",40],[11,"present","","Updates the screen with any rendering performed since the previous call.",40],[11,"get_output_size","","Gets the output size of a rendering context.",40],[11,"set_logical_size","","Sets a device independent resolution for rendering.",40],[11,"get_logical_size","","Gets device independent resolution for rendering.",40],[11,"set_viewport","","Sets the drawing area for rendering on the current target.",40],[11,"get_viewport","","Gets the drawing area for the current target.",40],[11,"set_clip_rect","","Sets the clip rectangle for rendering on the specified target.",40],[11,"get_clip_rect","","Gets the clip rectangle for the current target.",40],[11,"set_scale","","Sets the drawing scale for rendering on the current target.",40],[11,"get_scale","","Gets the drawing scale for the current target.",40],[11,"draw_point","","Draws a point on the current rendering target.\n# Panics\nPanics if drawing fails for any reason (e.g. driver failure)",40],[11,"draw_points","","Draws multiple points on the current rendering target.\n# Panics\nPanics if drawing fails for any reason (e.g. driver failure)",40],[11,"draw_line","","# Panics\nPanics if drawing fails for any reason (e.g. driver failure)",40],[11,"draw_lines","","Draws a series of connected lines on the current rendering target.\n# Panics\nPanics if drawing fails for any reason (e.g. driver failure)",40],[11,"draw_rect","","Draws a rectangle on the current rendering target.\n# Panics\nPanics if drawing fails for any reason (e.g. driver failure)",40],[11,"draw_rects","","Draws some number of rectangles on the current rendering target.\n# Panics\nPanics if drawing fails for any reason (e.g. driver failure)",40],[11,"fill_rect","","Fills a rectangle on the current rendering target with the drawing\ncolor.\n# Panics\nPanics if drawing fails for any reason (e.g. driver failure)",40],[11,"fill_rects","","Fills some number of rectangles on the current rendering target with\nthe drawing color.\n# Panics\nPanics if drawing fails for any reason (e.g. driver failure)",40],[11,"copy","","Copies a portion of the texture to the current rendering target.",40],[11,"copy_ex","","Copies a portion of the texture to the current rendering target,\noptionally rotating it by angle around the given center and also\nflipping it top-bottom and/or left-right.",40],[11,"read_pixels","","Reads pixels from the current rendering target.\n# Remarks\nWARNING: This is a very slow operation, and should not be used frequently.",40],[11,"reset","","Resets the render target to the default render target.",41],[11,"set","","Sets the render target to the provided texture.\nThe texture must be created with the texture access: `sdl2::render::TextureAccess::Target`.",41],[11,"create_and_set","","Creates a new texture and sets it as the render target.",41],[11,"get","","Gets the current render target.\nReturns None if the default render target is set.",41],[11,"clone","","",33],[11,"eq","","",42],[11,"ne","","",42],[11,"drop","","",42],[11,"query","","Queries the attributes of the texture.",42],[11,"set_color_mod","","Sets an additional color value multiplied into render copy operations.",42],[11,"get_color_mod","","Gets the additional color value multiplied into render copy operations.",42],[11,"set_alpha_mod","","Sets an additional alpha value multiplied into render copy operations.",42],[11,"get_alpha_mod","","Gets the additional alpha value multiplied into render copy operations.",42],[11,"set_blend_mode","","Sets the blend mode for a texture, used by `RenderDrawer::copy()`.",42],[11,"get_blend_mode","","Gets the blend mode used for texture copy operations.",42],[11,"update","","Updates the given texture rectangle with new pixel data.",42],[11,"with_lock","","Locks the texture for **write-only** pixel access.\nThe texture must have been created with streaming access.",42],[11,"gl_bind_texture","","Binds an OpenGL/ES/ES2 texture to the current\ncontext for use with when rendering OpenGL primitives directly.",42],[11,"gl_unbind_texture","","Unbinds an OpenGL/ES/ES2 texture from the current context.",42],[11,"gl_with_bind","","Binds and unbinds an OpenGL/ES/ES2 texture from the current context.",42],[11,"from_ll","","",42],[11,"from_ll_unowned","","",42],[11,"raw","","",42],[0,"rwops","sdl2",""],[3,"RWops","sdl2::rwops",""],[11,"eq","","",43],[11,"ne","","",43],[11,"raw","","",43],[11,"close_on_drop","","",43],[11,"from_file","","",43],[11,"from_bytes","","",43],[11,"len","","",43],[11,"drop","","",43],[11,"read","","",43],[11,"write_all","","",43],[11,"tell","","",43],[11,"seek","","",43],[0,"sdl","sdl2",""],[3,"InitFlag","sdl2::sdl",""],[4,"Error","",""],[13,"NoMemError","","",44],[13,"ReadError","","",44],[13,"WriteError","","",44],[13,"SeekError","","",44],[13,"UnsupportedError","","",44],[5,"init","",""],[5,"init_subsystem","",""],[5,"quit_subsystem","",""],[5,"quit","",""],[5,"was_inited","",""],[5,"get_error","",""],[5,"set_error","",""],[5,"set_error_from_code","",""],[5,"clear_error","",""],[5,"get_ticks","",""],[6,"SdlResult","",""],[17,"INIT_TIMER","",""],[17,"INIT_AUDIO","",""],[17,"INIT_VIDEO","",""],[17,"INIT_JOYSTICK","",""],[17,"INIT_HAPTIC","",""],[17,"INIT_GAME_CONTROLLER","",""],[17,"INIT_EVENTS","",""],[17,"INIT_NOPARACHUTE","",""],[17,"INIT_EVERYTHING","",""],[11,"hash","","",45],[11,"cmp","","",45],[11,"partial_cmp","","",45],[11,"lt","","",45],[11,"le","","",45],[11,"gt","","",45],[11,"ge","","",45],[11,"clone","","",45],[11,"eq","","",45],[11,"ne","","",45],[11,"empty","","Returns an empty set of flags.",45],[11,"all","","Returns the set containing all flags.",45],[11,"bits","","Returns the raw value of the flags currently stored.",45],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",45],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",45],[11,"is_empty","","Returns `true` if no flags are currently stored.",45],[11,"is_all","","Returns `true` if all flags are currently set.",45],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",45],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",45],[11,"insert","","Inserts the specified flags in-place.",45],[11,"remove","","Removes the specified flags in-place.",45],[11,"toggle","","Toggles the specified flags in-place.",45],[6,"Output","",""],[11,"bitor","","Returns the union of the two sets of flags.",45],[6,"Output","",""],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",45],[6,"Output","",""],[11,"bitand","","Returns the intersection between the two sets of flags.",45],[6,"Output","",""],[11,"sub","","Returns the set difference of the two sets of flags.",45],[6,"Output","",""],[11,"not","","Returns the complement of this set of flags.",45],[11,"eq","","",44],[11,"ne","","",44],[11,"clone","","",44],[0,"audio","sdl2","Audio Functions"],[3,"AudioSpecWAV","sdl2::audio",""],[12,"freq","","",46],[12,"format","","",46],[12,"channels","","",46],[3,"AudioSpecDesired","",""],[12,"freq","","",47],[12,"channels","","",47],[12,"samples","","",47],[12,"callback","","",47],[3,"AudioSpec","",""],[12,"freq","","",48],[12,"format","","",48],[12,"channels","","",48],[12,"silence","","",48],[12,"samples","","",48],[12,"size","","",48],[3,"AudioDevice","","Wraps SDL_AudioDeviceID and owns the callback data used by the audio device."],[3,"AudioDeviceLockGuard","","Similar to `std::sync::MutexGuard`, but for use with `AudioDevice::lock()`."],[3,"AudioCVT","",""],[4,"AudioStatus","",""],[13,"Stopped","","",49],[13,"Playing","","",49],[13,"Paused","","",49],[5,"get_num_audio_drivers","",""],[5,"get_audio_driver","",""],[5,"get_num_audio_devices","",""],[5,"get_audio_device_name","",""],[5,"audio_init","",""],[5,"audio_quit","",""],[5,"get_current_audio_driver","",""],[6,"AudioFormat","",""],[17,"AUDIOU8","",""],[17,"AUDIOS8","",""],[17,"AUDIOU16LSB","",""],[17,"AUDIOS16LSB","",""],[17,"AUDIOU16MSB","",""],[17,"AUDIOS16MSB","",""],[17,"AUDIOU16","",""],[17,"AUDIOS16","",""],[17,"AUDIOS32LSB","",""],[17,"AUDIOS32MSB","",""],[17,"AUDIOS32","",""],[17,"AUDIOF32LSB","",""],[17,"AUDIOF32MSB","",""],[17,"AUDIOF32","",""],[17,"AUDIOU16SYS","",""],[17,"AUDIOS16SYS","",""],[17,"AUDIOS32SYS","",""],[17,"AUDIOF32SYS","",""],[8,"AudioCallback","",""],[10,"callback","","",50],[8,"AudioFormatNum","","A phantom type for retreiving the SDL_AudioFormat of a given generic type.\nAll format types are returned as native-endian."],[10,"get_audio_format","","",51],[10,"zero","","",51],[11,"from_i64","","",49],[11,"from_u64","","",49],[11,"fmt","","",49],[11,"hash","","",49],[11,"eq","","",49],[11,"ne","","",49],[11,"clone","","",49],[11,"load_wav","","Loads a WAVE from the file path. Uses `SDL_LoadWAV_RW`.",46],[11,"load_wav_rw","","Loads a WAVE from the data source. Uses `SDL_LoadWAV_RW`.",46],[11,"get_buffer","","",46],[11,"drop","","",46],[11,"open_audio_device","","Opens a new audio device given the desired parameters and callback.\nUses `SDL_OpenAudioDevice`.",47],[11,"fmt","","",48],[11,"get_status","","",52],[11,"get_spec","","Get the obtained AudioSpec of the audio device.",52],[11,"pause","","Pauses playback of the audio device.",52],[11,"resume","","Starts playback of the audio device.",52],[11,"lock","","Locks the audio device using `SDL_LockAudioDevice`.",52],[11,"close_and_get_callback","","Closes the audio device and saves the callback data from being dropped.",52],[6,"Target","",""],[11,"deref","","",53],[11,"deref_mut","","",53],[11,"drop","","",53],[11,"new","","",54],[11,"convert","","Convert audio data to a desired audio format.",54],[11,"is_conversion_needed","","Checks if any conversion is needed. i.e. if the buffer that goes\ninto `convert()` is unchanged from the result.",54],[11,"get_capacity","","Gets the buffer capacity that can contain both the original and\nconverted data.",54],[0,"version","sdl2","Querying SDL Version"],[3,"Version","sdl2::version","A structure that contains information about the version of SDL in use."],[12,"major","","major version",55],[12,"minor","","minor version",55],[12,"patch","","update version (patchlevel)",55],[5,"get_version","","Get the version of SDL that is linked against your program."],[5,"get_revision","","Get the code revision of SDL that is linked against your program."],[5,"get_revision_number","","Get the revision number of SDL that is linked against your program."],[11,"clone","","",55],[11,"eq","","",55],[11,"ne","","",55],[11,"from_ll","","Convert a raw *SDL_version to Version.",55],[11,"fmt","","",55],[0,"messagebox","sdl2",""],[3,"MessageBoxFlag","sdl2::messagebox",""],[5,"show_simple_message_box","",""],[17,"MESSAGEBOX_ERROR","",""],[17,"MESSAGEBOX_WARNING","",""],[17,"MESSAGEBOX_INFORMATION","",""],[11,"hash","","",56],[11,"cmp","","",56],[11,"partial_cmp","","",56],[11,"lt","","",56],[11,"le","","",56],[11,"gt","","",56],[11,"ge","","",56],[11,"clone","","",56],[11,"eq","","",56],[11,"ne","","",56],[11,"empty","","Returns an empty set of flags.",56],[11,"all","","Returns the set containing all flags.",56],[11,"bits","","Returns the raw value of the flags currently stored.",56],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",56],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",56],[11,"is_empty","","Returns `true` if no flags are currently stored.",56],[11,"is_all","","Returns `true` if all flags are currently set.",56],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",56],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",56],[11,"insert","","Inserts the specified flags in-place.",56],[11,"remove","","Removes the specified flags in-place.",56],[11,"toggle","","Toggles the specified flags in-place.",56],[6,"Output","",""],[11,"bitor","","Returns the union of the two sets of flags.",56],[6,"Output","",""],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",56],[6,"Output","",""],[11,"bitand","","Returns the intersection between the two sets of flags.",56],[6,"Output","",""],[11,"sub","","Returns the set difference of the two sets of flags.",56],[6,"Output","",""],[11,"not","","Returns the complement of this set of flags.",56]],"paths":[[4,"KeyCode"],[4,"ScanCode"],[4,"EventType"],[4,"WindowEventId"],[4,"Event"],[4,"HatState"],[3,"Joystick"],[3,"Guid"],[4,"Axis"],[4,"Button"],[4,"MappingStatus"],[3,"GameController"],[3,"Mod"],[4,"SystemCursor"],[4,"Mouse"],[3,"Cursor"],[3,"MouseState"],[3,"SurfaceFlag"],[3,"Surface"],[4,"Color"],[4,"PixelFormatEnum"],[3,"Palette"],[3,"PixelFormat"],[3,"DisplayMode"],[4,"GLAttr"],[4,"GLProfile"],[4,"FullscreenType"],[4,"WindowPos"],[3,"WindowFlags"],[3,"GLContext"],[3,"Window"],[3,"Timer"],[3,"RendererInfo"],[3,"TextureQuery"],[4,"RenderDriverIndex"],[4,"TextureAccess"],[4,"BlendMode"],[4,"RendererParent"],[3,"RendererFlags"],[3,"Renderer"],[3,"RenderDrawer"],[3,"RenderTarget"],[3,"Texture"],[3,"RWops"],[4,"Error"],[3,"InitFlag"],[3,"AudioSpecWAV"],[3,"AudioSpecDesired"],[3,"AudioSpec"],[4,"AudioStatus"],[8,"AudioCallback"],[8,"AudioFormatNum"],[3,"AudioDevice"],[3,"AudioDeviceLockGuard"],[3,"AudioCVT"],[3,"Version"],[3,"MessageBoxFlag"]]};

searchIndex['chip8_vm'] = {"items":[[0,"","chip8_vm","Virtual machine for the CHIP-8 programming language"],[0,"error","","`std:error:Error` implementations"],[4,"Chip8Error","chip8_vm::error","`Error` variants for public errors in this crate"],[13,"Io","","I/O error",0],[11,"fmt","","",0],[11,"description","","",0],[11,"cause","","",0],[11,"from_error","","",0],[0,"instructions","chip8_vm","Raw and high-level instruction abstractions"],[3,"Nibble","chip8_vm::instructions","A nibble (hex digit)"],[12,"bits","","",1],[3,"Addr","","Absolute memory address"],[12,"bits","","",2],[3,"RawInstruction","","Raw instruction"],[4,"Register","","A register index/name"],[13,"V0","","",3],[13,"V1","","",3],[13,"V2","","",3],[13,"V3","","",3],[13,"V4","","",3],[13,"V5","","",3],[13,"V6","","",3],[13,"V7","","",3],[13,"V8","","",3],[13,"V9","","",3],[13,"VA","","",3],[13,"VB","","",3],[13,"VC","","",3],[13,"VD","","",3],[13,"VE","","",3],[13,"VF","","",3],[4,"Instruction","","High-level instruction"],[13,"Sys","","Jumps to machine subroutine at `Addr`.",4],[13,"Clear","","Clears the screen.",4],[13,"Return","","Returns from a subroutine",4],[13,"Jump","","Jumps to `Addr`",4],[13,"Call","","Calls subroutine at `Addr`",4],[13,"SkipEqualK","","Skips the next instructions if `Vx` equals `Byte`",4],[13,"SkipNotEqualK","","Skips the next instruction if `Vx` does not equal `Byte`",4],[13,"SkipEqual","","Skips the next instruction if `Vx` and `Vy` are equal",4],[13,"SetK","","Sets `Vy` to `Byte`",4],[13,"AddK","","Adds `Byte` to `Vx`, then stores the result in `Vx`",4],[13,"Set","","Stores `Vy` in `Vx`",4],[13,"Or","","Performs a bitwise OR (`|`) of `Vx` and `Vy`, then stores the result in `Vx`",4],[13,"And","","Performs a bitwise AND (`&`) of `Vx` and `Vy`, then stores the result in `Vx`",4],[13,"XOr","","Performs a bitwise XOR (`^`) of `Vx` and `Vy`, then stores the result in `Vx`",4],[13,"Add","","Adds `Vx` and `Vy`, then stores the result in in `Vx`.\n \n`VF` is set to `1` on overflow, `0` otherwise.",4],[13,"Sub","","Subtracts `Vy` from `Vx`, then stores the result in `Vx`.",4],[13,"ShiftRight","","Shifts `Vy` right by one bit, then stores the result in `Vx`.",4],[13,"SubInv","","Subtracts `Vx` from `Vy`, then stores the result in `Vx`.",4],[13,"ShiftLeft","","Shifts `Vy` left by one bit, then stores the result in `Vx`.",4],[13,"SkipNotEqual","","Skips the next instruction if `Vx` and `Vy` are not equal",4],[13,"LoadI","","Sets the `I` register to `Addr`",4],[13,"LongJump","","Jumps to `V0 + Addr`",4],[13,"Rand","","Sets `Vx` to a random byte ANDed with `Byte`",4],[13,"Draw","","Draws the sprite with `Nibble` bytes of data from the `I` register at position `(Vx, Vy)`.",4],[13,"SkipPressed","","Skips the next instruction if key `Vx` is pressed",4],[13,"SkipNotPressed","","Skips the next instruction if key `Vx` is not pressed",4],[13,"GetTimer","","Stores the value of the `delay timer` in `Vx`",4],[13,"WaitKey","","Stops execution until a key is pressed, then stores that key in `Vx`",4],[13,"SetTimer","","Sets the `delay timer` to `Vx`",4],[13,"SetSoundTimer","","Sets the `sound timer` to `Vx`",4],[13,"AddToI","","Adds `Vx` and the `I` register, then stores the result in `I`",4],[13,"LoadHexGlyph","","Stores the address of the hexadecimal digit `Vx` in the `I` register",4],[13,"StoreBCD","","Stores the binary-coded decimal representation of `Vx` at address `I`, `I + 1` and `I + 2`",4],[13,"StoreRegisters","","Stores the registers `V0` to `Vx` inclusive at address `I`.",4],[13,"LoadRegisters","","Reads the registers `V0` to `Vx` inclusive from address `I`.",4],[13,"Unknown","","Placeholder for an unknown or illegal instruction.",4],[6,"Vx","","First register in an opcode"],[6,"Vy","","Second register in an opcode"],[6,"Byte","","A byte"],[11,"fmt","","",3],[11,"from_i64","","",3],[11,"from_u64","","",3],[11,"to_i64","","",3],[11,"to_u64","","",3],[11,"fmt","","",1],[11,"new","","Creates a new `Nibble`, ignoring any high bits",1],[11,"fmt","","",2],[11,"new","","Creates a new `Addr`, ignoring any high bits",2],[11,"new","","Creates a new raw instruction without any checks of the `bits`",5],[11,"bits","","The *raw bits*",5],[11,"addr","","The *address bits* part",5],[11,"x","","The *`Vx` register-index* part, i.e. `0xE` is `VE`",5],[11,"y","","The *`Vy` register-index* part, i.e. `0xE` is `VE`",5],[11,"n_high","","The *high nibble* part",5],[11,"n_low","","The *low nibble* part",5],[11,"k","","The *`k` byte* part",5],[11,"fmt","","",4],[11,"from_raw","","Creates a new instruction from raw bits,\nor `Instruction::Unknown` if no valid match could be found",4],[0,"vm","chip8_vm","Virtual machine implementation"],[3,"Vm","chip8_vm::vm","Virtual machine"],[11,"new","","",6],[11,"load_rom","","",6],[11,"dump_ram","","",6],[11,"beeping","","",6],[11,"set_key","","",6],[11,"unset_key","","",6],[11,"step","","",6],[11,"screen_rows","","",6],[11,"print_screen","","",6],[11,"print_disassembly","","",6]],"paths":[[4,"Chip8Error"],[3,"Nibble"],[3,"Addr"],[4,"Register"],[4,"Instruction"],[3,"RawInstruction"],[3,"Vm"]]};

searchIndex['graphics'] = {"items":[[0,"","graphics","A library for 2D graphics that works with multiple back-ends."],[8,"ImageSize","","Implemented by all images to be used with generic algorithms."],[10,"get_size","","Get the image size.",0],[10,"get_width","","Gets the image width.",0],[10,"get_height","","Gets the image height.",0],[3,"Color","","A color property"],[3,"Rect","","A rectangle property"],[3,"SrcRect","","A source rectangle property"],[5,"clear","","Clears the screen."],[5,"image","","Draws image."],[5,"ellipse","","Draws ellipse."],[5,"rectangle","","Draws rectangle."],[5,"polygon","","Draws polygon."],[0,"character","","A text character"],[3,"Character","graphics::character","Holds rendered character data."],[12,"offset","","The offset of character.",1],[12,"size","","The size of character, including space.",1],[12,"texture","","The texture of the character.",1],[8,"CharacterCache","","Stores characters in a buffer and loads them by demand."],[16,"Texture","graphics::character::CharacterCache",""],[10,"character","graphics::character","Get reference to character.",2],[11,"left","","The left offset.",1],[11,"top","","The top offset.",1],[11,"width","","Gets width of character, including space to the next one.",1],[11,"height","","Sets height of character, including space to the next one.",1],[0,"context","graphics","Transformation context"],[3,"Transform","graphics::context","Transform property"],[3,"ViewTransform","","View transform property"],[3,"Context","","Drawing 2d context."],[12,"view","","View transformation.",3],[12,"transform","","Current transformation.",3],[11,"clone","","",3],[11,"new","","Creates a new drawing context.",3],[11,"abs","","Creates a new drawing context in absolute coordinates.",3],[0,"color","graphics","Helper methods for colors"],[5,"grey","graphics::color","Returns a grey color"],[5,"alpha","","Returns a semi-transparent white color"],[5,"hex","","Converts from hexadecimal color format"],[17,"WHITE","",""],[17,"BLACK","",""],[17,"TRANSPARENT","",""],[0,"polygon","graphics","Draw polygon"],[3,"Polygon","graphics::polygon","A polygon"],[12,"color","","The color of the polygon",4],[11,"clone","","",4],[11,"new","","Creates new polygon",4],[11,"draw","","Draws polygon",4],[11,"draw_tween_lerp","","Draws tweened polygon with linear interpolation",4],[0,"line","graphics","Draw Line"],[3,"Radius","graphics::line","The line border radius"],[3,"Width","","The line border width"],[3,"Line","","A colored line with a default border radius"],[12,"color","","The line color",5],[12,"radius","","The line radius",5],[12,"shape","","The line shape",5],[4,"Shape","","The shape of the line"],[13,"Square","","Square edges",6],[13,"Round","","Round edges",6],[13,"Bevel","","Bevel edges",6],[11,"clone","","",6],[11,"clone","","",5],[11,"new","","Creates a new line",5],[11,"round","","Creates a new line",5],[11,"draw","","Draw the line.",5],[11,"draw_arrow","","Draws an arrow",5],[0,"ellipse","graphics","Draw ellipse"],[3,"Border","graphics::ellipse","Ellipse border"],[12,"color","","The border color",7],[12,"radius","","The border radius",7],[3,"MaybeBorder","","Maybe border property"],[3,"Ellipse","","An ellipse with filled color"],[12,"color","","The ellipse color",8],[12,"border","","The ellipse border",8],[11,"clone","","",7],[11,"clone","","",8],[11,"new","","Creates a new ellipse",8],[11,"border","","Creates a new ellipse border",8],[11,"draw","","Draws the ellipse.",8],[0,"rectangle","graphics","Draw rectangle"],[3,"Border","graphics::rectangle","The border of the rectangle"],[12,"color","","The color of the border",9],[12,"radius","","The radius of the border",9],[3,"MaybeBorder","","Maybe border property"],[3,"Rectangle","","A filled rectangle"],[12,"color","","The rectangle color",10],[12,"shape","","The roundness of the rectangle",10],[12,"border","","The border",10],[4,"Shape","","The shape of the rectangle"],[13,"Square","","Square corners",11],[13,"Round","","Round corners",11],[13,"Bevel","","Bevel corners",11],[5,"centered","","Use x, y, half-width, half-height"],[5,"centered_square","","Use centered square"],[5,"square","","Use square with x, y in upper left corner"],[11,"clone","","",11],[11,"clone","","",9],[11,"clone","","",10],[11,"new","","Creates a new rectangle.",10],[11,"round","","Creates a new round rectangle.",10],[11,"border","","Creates a new rectangle border.",10],[11,"round_border","","Creates a new round rectangle border.",10],[11,"draw","","Draws the rectangle",10],[0,"image","graphics","Draw image"],[3,"Image","graphics::image","An image"],[12,"color","","The color",12],[12,"rectangle","","The rectangle to draw image inside",12],[12,"source_rectangle","","The image source rectangle",12],[11,"clone","","",12],[11,"new","","Creates a new image",12],[11,"colored","","Creates a new colored image",12],[11,"draw","","Draws the image.",12],[0,"internal","graphics","Contains type aliases used in this library"],[6,"Area","graphics::internal","The type used for area."],[6,"Color","","[red, green, blue, alpha]"],[6,"ColorComponent","","The type used for color component."],[6,"Line","","[x1, y1, x2, y2]"],[6,"SourceRectangle","","[x, y, w, h]"],[6,"Polygon","","[p0, p1, ...]"],[6,"Polygons","","A slice of polygons."],[6,"Radius","","The type used for radius."],[6,"Ray","","[x, y, dir_x, dir_y]"],[6,"Rectangle","","[x, y, w, h]"],[6,"Triangle","","[x1, y1, x2, y2, x3, y3]"],[6,"Width","","The type used for width."],[6,"FontSize","","The type used for font size."],[0,"modular_index","graphics","Helper functions for computing modular index safely."],[5,"offset","graphics::modular_index","Computes modular offset safely for indices."],[5,"previous","","Computes previous modular index safely."],[5,"next","","Computes next modular index safely."],[0,"text","graphics","Draw text"],[3,"Text","graphics::text","Renders text"],[12,"color","","The color",13],[12,"font_size","","The font size",13],[11,"clone","","",13],[11,"new","","Creates a new text with black color",13],[11,"colored","","Creates a new colored text",13],[11,"draw","","Draws text with a character cache",13],[0,"triangulation","graphics","Methods for converting shapes into triangles."],[5,"tx","graphics::triangulation","Transformed x coordinate as f32."],[5,"ty","","Transformed y coordinate as f32."],[5,"with_lerp_polygons_tri_list","","Streams tweened polygons using linear interpolation."],[5,"with_ellipse_tri_list","","Streams an ellipse specified by a resolution."],[5,"with_round_border_line_tri_list","","Streams a round border line."],[5,"with_round_rectangle_tri_list","","Streams a round rectangle."],[5,"stream_polygon_tri_list","","Streams a polygon into tri list.\nUses buffers that fit inside L1 cache."],[5,"with_ellipse_border_tri_list","","Streams an ellipse border specified by a resolution."],[5,"with_round_rectangle_border_tri_list","","Streams a round rectangle border."],[5,"stream_quad_tri_list","","Streams a quad into tri list."],[5,"with_polygon_tri_list","","Splits polygon into convex segments.\nCreate a buffer that fits into L1 cache with 1KB overhead."],[5,"rect_tri_list_xy","","Creates triangle list vertices from rectangle."],[5,"rect_border_tri_list_xy","","Creates triangle list vertices from rectangle."],[5,"rect_tri_list_uv","","Creates triangle list texture coords from image."],[0,"vecmath","graphics","Various methods for computing with vectors."],[5,"multiply","graphics::vecmath","Multiplies two matrices."],[5,"dot","","Computes the dot product."],[5,"cross","","Computes the cross product."],[5,"add","","Adds two vectors."],[5,"sub","","Subtracts 'b' from 'a'."],[5,"cast","","Converts to another vector type."],[5,"mul","","Multiplies two vectors component wise."],[5,"mul_scalar","","Multiplies the vector with a scalar."],[5,"square_len","","Computes the square length of a vector."],[5,"perp","","Creates a perpendicular vector."],[5,"translate","","Creates a translation matrix."],[5,"rotate_radians","","Creates a rotation matrix."],[5,"orient","","Orients x axis to look at point."],[5,"scale","","Create a scale matrix."],[5,"shear","","Create a shear matrix."],[5,"identity","","Create an identity matrix."],[5,"get_scale","","Extract scale information from matrix."],[5,"separation","","Compute the shortest vector from point to ray.\nA ray stores starting point and directional vector."],[5,"least_separation_4","","Returns the least separation out of four.\nEach seperation can be computed using `separation` function.\nThe separation returned can be used\nto solve collision of rectangles."],[5,"margin_rectangle","","Shrinks a rectangle by a factor on all sides."],[5,"relative_rectangle","","Computes a relative rectangle using the rectangle as a tile."],[5,"relative_source_rectangle","","Computes a relative source rectangle using\nthe source rectangle as a tile."],[5,"modular_offset","","Computes modular offset safely for numbers."],[5,"area_centroid","","Computes the area and centroid of a simple polygon."],[5,"area","","Computes area of a simple polygon."],[5,"centroid","","Computes centroid of a simple polygon."],[5,"line_side","","Returns a number that tells which side it is relative to a line."],[5,"inside_triangle","","Returns true if point is inside triangle."],[5,"triangle_face","","Returns true if triangle is clockwise."],[5,"to_barycentric","","Transforms from cartesian coordinates to barycentric."],[5,"from_barycentric","","Transforms from barycentric coordinates to cartesian."],[5,"hsv","","Transform color with hue, saturation and value."],[6,"Scalar","","The type used for scalars."],[6,"Matrix2d","","The type used for matrices."],[6,"Vec2d","","The type used for 2D vectors."],[6,"Vec3d","","The type used for 3D vectors."],[0,"deform","graphics","Least square deforming of a 2D grid."],[3,"DeformGrid","graphics::deform","Represents a deformed grid."],[12,"cols","","The number of columns in the grid.",14],[12,"rows","","The number of rows in the grid.",14],[12,"rect","","The grid undeformed, which is a plain rectangle.",14],[12,"vertices","","The vertices, deformed.",14],[12,"indices","","The triangle indices.",14],[12,"texture_coords","","The texture coordinates.",14],[12,"ps","","Initial position of control points.",14],[12,"qs","","The current position of control points.",14],[12,"wis","","A weight computation buffer, one for each control point.",14],[11,"clone","","",14],[11,"new","","Creates a new DeformGrid.",14],[11,"set_current","","Sets current control position.",14],[11,"set_original","","Sets original control position.",14],[11,"reset_control_points","","Removes all control points.",14],[11,"reset_vertices_and_texture_coords","","Sets vertices and texture coords back to default.",14],[11,"hit","","Finds original coordinate.\nIf the deformed grid is overlapping itself, multiple hits might occur.\nReturns the first hit it finds.",14],[11,"draw_image","","Draws deformed image.",14],[11,"add_control_point","","Adds a control point, in original coordinates.",14],[11,"draw_vertical_lines","","Draw vertical grid lines.",14],[11,"draw_horizontal_lines","","Draw horizontal grid lines.",14],[11,"update","","Updates the grid, by deforming the vertices.",14],[0,"grid","graphics","A flat grid with square cells."],[3,"Grid","graphics::grid","Represents a flat grid with square cells."],[12,"cols","","Number of columns.",15],[12,"rows","","Number of rows.",15],[12,"units","","The width and height of each grid cell.",15],[3,"GridIterator","","Iterates through the cells of a grid as (u32, u32)."],[11,"clone","","",15],[11,"draw","","Draws the grid.",15],[11,"cells","","Get a GridIterator for the grid",15],[6,"Item","",""],[11,"next","","",16],[0,"radians","graphics","Reexport radians helper trait from vecmath"],[8,"Radians","graphics::radians","Useful constants for radians."],[10,"_90","","Returns radians corresponding to 90 degrees.",17],[10,"_180","","Returns radians corresponding to 180 degrees.",17],[10,"_360","","Returns radians corresponding to 360 degrees.",17],[10,"deg_to_rad","","Convert a value to radians from degrees.\nEquivalent to ```value * (π / 180)```.",17],[7,"BACK_END_MAX_VERTEX_COUNT","graphics","Any triangulation method called on the back-end\nnever exceeds this number of vertices.\nThis can be used to initialize buffers that fit the chunk size."],[8,"BackEnd","","Implemented by all graphics back-ends."],[16,"Texture","graphics::BackEnd",""],[10,"clear","graphics","Clears background with a color.",18],[10,"tri_list","","Renders list of 2d triangles.",18],[10,"tri_list_uv","","Renders list of 2d triangles.",18],[8,"RelativeColor","","Implemented by contexts that contains color."],[10,"mul_rgba","","Multiplies with red, green, blue and alpha values.",19],[11,"tint","","Mixes the current color with white.",19],[11,"shade","","Mixes the current color with black.",19],[11,"hue_deg","","Rotates hue by degrees.",19],[10,"hue_rad","","Rotates hue by radians.",19],[8,"RelativeRectangle","","Should be implemented by contexts that have rectangle information."],[10,"margin","","Shrinks the current rectangle equally by all sides.",20],[11,"expand","","Expands the current rectangle equally by all sides.",20],[10,"rel","","Moves to a relative rectangle using the current rectangle as tile.",20],[8,"RelativeSourceRectangle","","Should be implemented by contexts that\nhave source rectangle information."],[10,"src_rect","","Adds a source rectangle.",21],[10,"src_rel","","Moves to a relative source rectangle using\nthe current source rectangle as tile.",21],[10,"src_flip_h","","Flips the source rectangle horizontally.",21],[10,"src_flip_v","","Flips the source rectangle vertically.",21],[10,"src_flip_hv","","Flips the source rectangle horizontally and vertically.",21],[8,"RelativeTransform","","Implemented by contexts that can transform."],[10,"append_transform","","Appends transform to the current one.",22],[10,"prepend_transform","","Prepends transform to the current one.",22],[10,"trans","","Translate x an y in local coordinates.",22],[11,"rot_deg","","Rotates degrees in local coordinates.",22],[10,"rot_rad","","Rotate radians in local coordinates.",22],[10,"orient","","Orients x axis to look at point locally.",22],[10,"scale","","Scales in local coordinates.",22],[11,"zoom","","Scales in both directions in local coordinates.",22],[11,"flip_v","","Flips vertically in local coordinates.",22],[11,"flip_h","","Flips horizontally in local coordinates.",22],[11,"flip_hv","","Flips horizontally and vertically in local coordinates.",22],[10,"shear","","Shears in local coordinates.",22],[8,"RelativeViewTransform","","Should be implemented by contexts that\ndraws something relative to view."],[10,"view","","Moves the current transform to the view coordinate system.",23],[10,"reset","","Moves the current transform to the default coordinate system.",23],[10,"store_view","","Stores the current transform as new view.",23],[10,"get_view_size","","Computes the current view size.",23],[11,"tint","","Mixes the current color with white.",19],[11,"shade","","Mixes the current color with black.",19],[11,"hue_deg","","Rotates hue by degrees.",19],[11,"expand","","Expands the current rectangle equally by all sides.",20],[11,"rot_deg","","Rotates degrees in local coordinates.",22],[11,"zoom","","Scales in both directions in local coordinates.",22],[11,"flip_v","","Flips vertically in local coordinates.",22],[11,"flip_h","","Flips horizontally in local coordinates.",22],[11,"flip_hv","","Flips horizontally and vertically in local coordinates.",22]],"paths":[[8,"ImageSize"],[3,"Character"],[8,"CharacterCache"],[3,"Context"],[3,"Polygon"],[3,"Line"],[4,"Shape"],[3,"Border"],[3,"Ellipse"],[3,"Border"],[3,"Rectangle"],[4,"Shape"],[3,"Image"],[3,"Text"],[3,"DeformGrid"],[3,"Grid"],[3,"GridIterator"],[8,"Radians"],[8,"BackEnd"],[8,"RelativeColor"],[8,"RelativeRectangle"],[8,"RelativeSourceRectangle"],[8,"RelativeTransform"],[8,"RelativeViewTransform"]]};

searchIndex['xml'] = {"items":[[0,"","xml","This crate currently provides almost XML 1.0/1.1-compliant pull parser."],[0,"macros","","Contains several macros used in this crate."],[0,"name","",""],[3,"Name","xml::name","Represents a qualified XML name."],[12,"local_name","","A local name, e.g. `string` in `xsi:string`.",0],[12,"namespace","","A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.",0],[12,"prefix","","A name prefix, e.g. `xsi` in `xsi:string`.",0],[3,"OwnedName","","An owned variant of `Name`."],[12,"local_name","","A local name, e.g. `string` in `xsi:string`.",1],[12,"namespace","","A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.",1],[12,"prefix","","A name prefix, e.g. `xsi` in `xsi:string`.",1],[11,"fmt","","",0],[11,"hash","","",0],[11,"eq","","",0],[11,"ne","","",0],[11,"clone","","",0],[11,"fmt","","",0],[11,"to_owned","","Returns an owned variant of the qualified name.",0],[11,"local","","Returns a new `Name` instance representing plain local name.",0],[11,"qualified","","Returns a new `Name` instance representing a qualified name with or without a prefix and\nwith a namespace URI.",0],[11,"to_repr","","Returns correct XML representation of this local name and prefix.",0],[11,"fmt","","",1],[11,"hash","","",1],[11,"eq","","",1],[11,"ne","","",1],[11,"clone","","",1],[11,"fmt","","",1],[11,"borrow","","Constructs a borrowed `Name` based on this owned name.",1],[11,"local","","Returns a new `OwnedName` instance representing a plain local name.",1],[11,"qualified","","Returns a new `OwnedName` instance representing a qualified name with or without\na prefix and with a namespace URI.",1],[11,"prefix_as_ref","","Returns an optional prefix by reference, equivalent to `self.borrow().prefix`\nbut avoids extra work.",1],[11,"namespace_as_ref","","Returns an optional namespace by reference, equivalen to `self.borrow().namespace`\nbut avoids extra work.",1],[11,"to_repr","","See `Name::to_repr()` for details.",1],[6,"Err","",""],[11,"from_str","","Parses the given string slice into a qualified name.",1],[0,"attribute","xml",""],[3,"Attribute","xml::attribute","A borrowed version of an XML attribute."],[12,"name","","Attribute name.",2],[12,"value","","Attribute value.",2],[3,"OwnedAttribute","",""],[12,"name","","",3],[12,"value","","",3],[11,"fmt","","",2],[11,"hash","","",2],[11,"eq","","",2],[11,"ne","","",2],[11,"clone","","",2],[11,"fmt","","",2],[11,"to_owned","","",2],[11,"new","","",2],[11,"fmt","","",3],[11,"hash","","",3],[11,"eq","","",3],[11,"ne","","",3],[11,"clone","","",3],[11,"borrow","","",3],[11,"new","","",3],[11,"fmt","","",3],[0,"common","xml","Contains several types used throughout the library."],[3,"Error","xml::common","XML parsing error."],[4,"XmlVersion","","XML version enumeration."],[13,"Version10","","XML version 1.0.",4],[13,"Version11","","XML version 1.1.",4],[5,"is_whitespace_char","","Checks whether the given character is a white space character (`S`)\nas is defined by XML 1.1 specification, [section 2.3][1]."],[5,"is_name_start_char","","Checks whether the given character is a name start character (`NameStartChar`)\nas is defined by XML 1.1 specification, [section 2.3][1]."],[5,"is_name_char","","Checks whether the given character is a name character (`NameChar`)\nas is defined by XML 1.1 specification, [section 2.3][1]."],[8,"HasPosition","","Represents a thing which has a position inside some textual document."],[10,"row","","Returns a line number inside the document.",5],[10,"col","","Returns a column number inside the document.",5],[11,"fmt","","",6],[11,"eq","","",6],[11,"ne","","",6],[11,"clone","","",6],[11,"fmt","","",6],[11,"row","","",6],[11,"col","","",6],[11,"new","","Creates a new error using position information from the provided\n`HasPosition` object and a message.",6],[11,"new_full","","Creates a new error using provided position information and a message.",6],[11,"msg","","Returns a reference to a message which is contained inside this error.",6],[11,"description","","",6],[11,"eq","","",4],[11,"ne","","",4],[11,"clone","","",4],[11,"fmt","","",4],[0,"escape","xml",""],[5,"escape_str","xml::escape","Performs escaping of common XML characters."],[0,"namespace","xml",""],[3,"Namespace","xml::namespace","Namespace is a map from prefixes to namespace URIs."],[3,"NamespaceMappings","","An iterator over mappings from prefixes to URIs in a namespace."],[3,"NamespaceStack","","Namespace stack is a sequence of namespaces."],[3,"NamespaceStackMappings","","An iterator over mappings from prefixes to URIs in a namespace stack."],[6,"UriMapping","",""],[17,"NS_XMLNS_PREFIX","",""],[17,"NS_XMLNS_URI","",""],[17,"NS_XML_PREFIX","",""],[17,"NS_XML_URI","",""],[17,"NS_EMPTY_URI","",""],[8,"NamespaceIterable","","Denotes something which contains namespace URI mappings."],[16,"Iter","xml::namespace::NamespaceIterable",""],[10,"uri_mappings","xml::namespace","",7],[11,"clone","","",8],[11,"eq","","",8],[11,"ne","","",8],[11,"empty","","Returns an empty namespace.",8],[11,"is_empty","","Checks whether this namespace is empty.",8],[11,"is_essentially_empty","","Checks whether this namespace is essentially empty, that is, it does not contain\nanything but the default mappings.",8],[11,"put","","Puts a mapping into this namespace.",8],[11,"force_put","","Puts a mapping into this namespace forcefully.",8],[11,"get","","Queries the namespace for the given prefix.",8],[6,"Item","",""],[11,"next","","",9],[6,"Iter","",""],[11,"uri_mappings","","",8],[11,"eq","","",10],[11,"ne","","",10],[11,"clone","","",10],[11,"empty","","Returns an empty namespace stack.",10],[11,"default","","Returns a namespace stack with default items in it.",10],[11,"push_empty","","Adds an empty namespace to the top of this stack.",10],[11,"pop","","Removes a namespace at the top of the stack.",10],[11,"peek","","Returns a namespace at the top of the stack, leaving the stack intact.",10],[11,"put","","Puts a mapping into the topmost namespace in this stack.",10],[11,"get","","Performs a search for the given prefix in the whole stack.",10],[11,"squash","","Combines this stack of namespaces into a single namespace.",10],[6,"Item","",""],[11,"next","","",11],[6,"Iter","",""],[11,"uri_mappings","","",10],[0,"reader","xml","Contains high-level interface for a pull-based XML parser."],[3,"EventReader","xml::reader","Simple wrapper around an `std::old_io::Buffer` which provides pull-based XML parsing."],[3,"Events","","XML events iterator, created by `events()` method on `Parser`."],[0,"config","","Contains parser configuration structure."],[3,"ParserConfig","xml::reader::config","Parser configuration structure."],[12,"trim_whitespace","","Whether or not should whitespace be removed. Default is false.",12],[12,"whitespace_to_characters","","Whether or not should whitespace be converted to characters.\nDefault is false.",12],[12,"cdata_to_characters","","Whether or not should CDATA be converted to characters.\nDefault is false.",12],[12,"ignore_comments","","Whether or not should comments be omitted. Default is true.",12],[12,"coalesce_characters","","Whether or not should sequential `Characters` events be merged.\nDefault is true.",12],[11,"new","","Returns a new config with default values.",12],[11,"trim_whitespace","","Sets the field to the provided value and returns updated config object.",12],[11,"whitespace_to_characters","","Sets the field to the provided value and returns updated config object.",12],[11,"cdata_to_characters","","Sets the field to the provided value and returns updated config object.",12],[11,"ignore_comments","","Sets the field to the provided value and returns updated config object.",12],[11,"coalesce_characters","","Sets the field to the provided value and returns updated config object.",12],[0,"events","xml::reader","Contains `XmlEvent` datatype, instances of which are emitted by the parser."],[4,"XmlEvent","xml::reader::events","An element of an XML input stream."],[13,"StartDocument","","Corresponds to XML document declaration.",13],[12,"version","xml::reader::events::XmlEvent","XML version.",13],[12,"encoding","","XML document encoding.",13],[12,"standalone","","XML standalone declaration.",13],[13,"EndDocument","xml::reader::events","Denotes to the end of the document stream.",13],[13,"ProcessingInstruction","","Denotes an XML processing instruction.",13],[12,"name","xml::reader::events::XmlEvent","Processing instruction target.",13],[12,"data","","Processing instruction content.",13],[13,"StartElement","xml::reader::events","Denotes a beginning of an XML element.",13],[12,"name","xml::reader::events::XmlEvent","Qualified name of the element.",13],[12,"attributes","","A list of attributes associated with the element.",13],[12,"namespace","","Contents of the namespace mapping at this point of the document.",13],[13,"EndElement","xml::reader::events","Denotes an end of an XML document.",13],[12,"name","xml::reader::events::XmlEvent","Qualified name of the element.",13],[13,"CData","xml::reader::events","Denotes CDATA content.",13],[13,"Comment","","Denotes a comment.",13],[13,"Characters","","Denotes character data outside of tags.",13],[13,"Whitespace","","Denotes a chunk of whitespace outside of tags.",13],[13,"Error","","Denotes parsing error.",13],[11,"clone","","",13],[11,"eq","","",13],[11,"ne","","",13],[11,"fmt","","",13],[11,"as_writer_event","","",13],[11,"new","xml::reader","Creates a new parser, consuming given `Buffer`.",14],[11,"new_with_config","","Creates a new parser with the provded configuration, consuming given `Buffer`.",14],[11,"next","","Pulls and returns next XML event from the stream.",14],[11,"events","","Returns an iterator over XML events.",14],[6,"Item","",""],[11,"next","","",15],[11,"new_from_string","","Convenience method to create a reader from an owned string.",14],[11,"new_from_bytes","","Convenience method to create a reader from an owned vector of bytes.",14],[11,"new_from_str_slice","","Convenience method to create a reader from a string slice.",14],[11,"new_from_bytes_slice","","Convenience method to create a reader from a slice of bytes.",14],[0,"writer","xml",""],[3,"EventWriter","xml::writer",""],[0,"config","","Contains emitter configuration structure."],[3,"EmitterConfig","xml::writer::config","Emitter configuration structure."],[12,"line_separator","","Line separator used to separate lines in formatted output. Default is `\"\\n\"`.",16],[12,"indent_string","","A string which will be used for a single level of indentation. Default is `\"  \"`\n(two spaces).",16],[12,"perform_indent","","Whether or not the emitted document should be indented. Default is false.",16],[12,"write_document_declaration","","Whether or not to write XML document declaration at the beginning of a document.\nDefault is true.",16],[12,"normalize_empty_elements","","Whether or not to convert elements with empty content to empty elements. Default is true.",16],[12,"cdata_to_characters","","Whether or not to emit CDATA events as plain characters. Default is false.",16],[11,"new","","Creates an emitter configuration with default values.",16],[11,"line_separator","","Sets the field to the provided value and returns updated config object.",16],[11,"indent_string","","Sets the field to the provided value and returns updated config object.",16],[11,"perform_indent","","Sets the field to the provided value and returns updated config object.",16],[11,"write_document_declaration","","Sets the field to the provided value and returns updated config object.",16],[11,"normalize_empty_elements","","Sets the field to the provided value and returns updated config object.",16],[11,"cdata_to_characters","","Sets the field to the provided value and returns updated config object.",16],[0,"events","xml::writer",""],[4,"XmlEvent","xml::writer::events","An element of an XML output stream."],[13,"StartDocument","","Corresponds to XML document declaration.",17],[12,"version","xml::writer::events::XmlEvent","XML version.",17],[12,"encoding","","XML document encoding.",17],[12,"standalone","","XML standalone declaration.",17],[13,"ProcessingInstruction","xml::writer::events","Denotes an XML processing instruction.",17],[12,"name","xml::writer::events::XmlEvent","Processing instruction target.",17],[12,"data","","Processing instruction content.",17],[13,"StartElement","xml::writer::events","Denotes a beginning of an XML element.",17],[12,"name","xml::writer::events::XmlEvent","Qualified name of the element.",17],[12,"attributes","","A list of attributes associated with the element.",17],[12,"namespace","","Contents of the namespace mapping at this point of the document.",17],[13,"EndElement","xml::writer::events","Denotes an end of an XML document.",17],[12,"name","xml::writer::events::XmlEvent","Qualified name of the element.",17],[13,"CData","xml::writer::events","Denotes CDATA content.",17],[13,"Comment","","Denotes a comment.",17],[13,"Characters","","Denotes character data outside of tags.",17],[6,"EventWriterResult","xml::writer",""],[11,"new","","",18],[11,"new_with_config","","",18],[11,"write","","",18],[11,"new_into_mem","","",18],[11,"new_into_mem_config","","",18],[0,"util","xml",""],[3,"ClonedPairwise","xml::util",""],[8,"OptionBorrowExt","",""],[10,"borrow_internals","","",19],[8,"IteratorClonedPairwiseExt","",""],[10,"cloned_pairwise","","",20],[11,"borrow_internals","core::option","",21],[6,"Item","xml::util",""],[11,"next","","",22]],"paths":[[3,"Name"],[3,"OwnedName"],[3,"Attribute"],[3,"OwnedAttribute"],[4,"XmlVersion"],[8,"HasPosition"],[3,"Error"],[8,"NamespaceIterable"],[3,"Namespace"],[3,"NamespaceMappings"],[3,"NamespaceStack"],[3,"NamespaceStackMappings"],[3,"ParserConfig"],[4,"XmlEvent"],[3,"EventReader"],[3,"Events"],[3,"EmitterConfig"],[4,"XmlEvent"],[3,"EventWriter"],[8,"OptionBorrowExt"],[8,"IteratorClonedPairwiseExt"],[4,"Option"],[3,"ClonedPairwise"]]};

searchIndex['freetype'] = {"items":[[0,"","freetype",""],[0,"ffi","",""],[6,"FT_Byte","freetype::ffi",""],[6,"FT_Bytes","",""],[6,"FT_Char","",""],[6,"FT_Int","",""],[6,"FT_UInt","",""],[6,"FT_Int16","",""],[6,"FT_UInt16","",""],[6,"FT_Int32","",""],[6,"FT_UInt32","",""],[6,"FT_Int64","",""],[6,"FT_UInt64","",""],[6,"FT_Short","",""],[6,"FT_UShort","",""],[6,"FT_Long","",""],[6,"FT_ULong","",""],[6,"FT_Bool","",""],[6,"FT_Offset","",""],[6,"FT_PtrDist","",""],[6,"FT_String","",""],[6,"FT_Tag","",""],[6,"FT_Error","",""],[6,"FT_Fixed","",""],[6,"FT_Pointer","",""],[6,"FT_Pos","",""],[6,"FT_FWord","",""],[6,"FT_UFWord","",""],[6,"FT_F2Dot14","",""],[6,"FT_F26Dot6","",""],[6,"FT_Generic_Finalizer","",""],[6,"FT_StreamDesc","",""],[6,"FT_Stream_IoFunc","",""],[6,"FT_Stream_CloseFunc","",""],[6,"FT_Alloc_Func","",""],[6,"FT_Free_Func","",""],[6,"FT_Realloc_Func","",""],[8,"FTErrorMethods","",""],[10,"succeeded","","",0],[3,"FT_Vector","",""],[12,"x","","",1],[12,"y","","",1],[3,"FT_BBox","",""],[12,"xMin","","",2],[12,"yMin","","",2],[12,"xMax","","",2],[12,"yMax","","",2],[3,"FT_Matrix","",""],[12,"xx","","",3],[12,"xy","","",3],[12,"yx","","",3],[12,"yy","","",3],[3,"FT_UnitVector","",""],[12,"x","","",4],[12,"y","","",4],[3,"FT_Bitmap","",""],[12,"rows","","",5],[12,"width","","",5],[12,"pitch","","",5],[12,"buffer","","",5],[12,"num_grays","","",5],[12,"pixel_mode","","",5],[12,"palette_mode","","",5],[12,"palette","","",5],[3,"FT_Data","",""],[12,"pointer","","",6],[12,"length","","",6],[3,"FT_Generic","",""],[12,"data","","",7],[12,"finalizer","","",7],[3,"FT_Size_Metrics","",""],[12,"x_ppem","","",8],[12,"y_ppem","","",8],[12,"x_scale","","",8],[12,"y_scale","","",8],[12,"ascender","","",8],[12,"descender","","",8],[12,"height","","",8],[12,"max_advance","","",8],[3,"FT_Outline","",""],[12,"n_contours","","",9],[12,"n_points","","",9],[12,"points","","",9],[12,"tags","","",9],[12,"contours","","",9],[12,"flags","","",9],[3,"FT_Glyph_Metrics","",""],[12,"width","","",10],[12,"height","","",10],[12,"horiBearingX","","",10],[12,"horiBearingY","","",10],[12,"horiAdvance","","",10],[12,"vertBearingX","","",10],[12,"vertBearingY","","",10],[12,"vertAdvance","","",10],[3,"FT_Parameter","",""],[12,"tag","","",11],[12,"data","","",11],[3,"FT_Open_Args","",""],[12,"flags","","",12],[12,"memory_base","","",12],[12,"memory_size","","",12],[12,"pathname","","",12],[12,"stream","","",12],[12,"driver","","",12],[12,"num_params","","",12],[12,"params","","",12],[3,"FT_Bitmap_Size","",""],[12,"height","","",13],[12,"width","","",13],[12,"size","","",13],[12,"x_ppem","","",13],[12,"y_ppem","","",13],[3,"TT_OS2","",""],[12,"version","","",14],[12,"xAvgCharWidth","","",14],[12,"usWeightClass","","",14],[12,"usWidthClass","","",14],[12,"fsType","","",14],[12,"ySubscriptXSize","","",14],[12,"ySubscriptYSize","","",14],[12,"ySubscriptXOffset","","",14],[12,"ySubscriptYOffset","","",14],[12,"ySuperscriptXSize","","",14],[12,"ySuperscriptYSize","","",14],[12,"ySuperscriptXOffset","","",14],[12,"ySuperscriptYOffset","","",14],[12,"yStrikeoutSize","","",14],[12,"yStrikeoutPosition","","",14],[12,"sFamilyClass","","",14],[12,"panose","","",14],[12,"ulUnicodeRange1","","",14],[12,"ulUnicodeRange2","","",14],[12,"ulUnicodeRange3","","",14],[12,"ulUnicodeRange4","","",14],[12,"ulCodePageRange1","","",14],[12,"ulCodePageRange2","","",14],[12,"sxHeight","","",14],[12,"sCapHeight","","",14],[12,"usDefaultChar","","",14],[12,"usBreakChar","","",14],[12,"usMaxContext","","",14],[6,"enum_FT_Sfnt_Tag_","",""],[17,"ft_sfnt_head","",""],[17,"ft_sfnt_maxp","",""],[17,"ft_sfnt_os2","",""],[17,"ft_sfnt_hhea","",""],[17,"ft_sfnt_vhea","",""],[17,"ft_sfnt_post","",""],[17,"ft_sfnt_pclt","",""],[17,"ft_sfnt_max","",""],[6,"FT_Sfnt_Tag","",""],[6,"FT_Pixel_Mode","",""],[17,"FT_PIXEL_MODE_NONE","",""],[17,"FT_PIXEL_MODE_MONO","",""],[17,"FT_PIXEL_MODE_GRAY","",""],[17,"FT_PIXEL_MODE_GRAY2","",""],[17,"FT_PIXEL_MODE_GRAY4","",""],[17,"FT_PIXEL_MODE_LCD","",""],[17,"FT_PIXEL_MODE_LCD_V","",""],[17,"FT_PIXEL_MODE_BGRA","",""],[17,"FT_PIXEL_MODE_MAX","",""],[6,"FT_Glyph_Format","",""],[17,"FT_GLYPH_FORMAT_NONE","",""],[17,"FT_GLYPH_FORMAT_COMPOSITE","",""],[17,"FT_GLYPH_FORMAT_BITMAP","",""],[17,"FT_GLYPH_FORMAT_OUTLINE","",""],[17,"FT_GLYPH_FORMAT_PLOTTER","",""],[6,"FT_Render_Mode","",""],[17,"FT_RENDER_MODE_NORMAL","",""],[17,"FT_RENDER_MODE_LIGHT","",""],[17,"FT_RENDER_MODE_MONO","",""],[17,"FT_RENDER_MODE_LCD","",""],[17,"FT_RENDER_MODE_LCD_V","",""],[17,"FT_RENDER_MODE_MAX","",""],[6,"FT_Encoding","",""],[17,"FT_ENCODING_NONE","",""],[17,"FT_ENCODING_MS_SYMBOL","",""],[17,"FT_ENCODING_UNICODE","",""],[17,"FT_ENCODING_SJIS","",""],[17,"FT_ENCODING_GB2312","",""],[17,"FT_ENCODING_BIG5","",""],[17,"FT_ENCODING_WANSUNG","",""],[17,"FT_ENCODING_JOHAB","",""],[17,"FT_ENCODING_MS_SJIS","",""],[17,"FT_ENCODING_MS_GB2312","",""],[17,"FT_ENCODING_MS_BIG5","",""],[17,"FT_ENCODING_MS_WANSUNG","",""],[17,"FT_ENCODING_MS_JOHAB","",""],[17,"FT_ENCODING_ADOBE_STANDARD","",""],[17,"FT_ENCODING_ADOBE_EXPERT","",""],[17,"FT_ENCODING_ADOBE_CUSTOM","",""],[17,"FT_ENCODING_ADOBE_LATIN_1","",""],[17,"FT_ENCODING_OLD_LATIN_2","",""],[17,"FT_ENCODING_APPLE_ROMAN","",""],[6,"FT_Size_Request_Type","",""],[17,"FT_SIZE_REQUEST_TYPE_NOMINAL","",""],[17,"FT_SIZE_REQUEST_TYPE_REAL_DIM","",""],[17,"FT_SIZE_REQUEST_TYPE_BBOX","",""],[17,"FT_SIZE_REQUEST_TYPE_CELL","",""],[17,"FT_SIZE_REQUEST_TYPE_SCALES","",""],[17,"FT_SIZE_REQUEST_TYPE_MAX","",""],[6,"FT_Kerning_Mode","",""],[17,"FT_KERNING_DEFAULT","",""],[17,"FT_KERNING_UNFITTED","",""],[17,"FT_KERNING_UNSCALED","",""],[6,"FT_Glyph_BBox_Mode","",""],[17,"FT_GLYPH_BBOX_UNSCALED","",""],[17,"FT_GLYPH_BBOX_SUBPIXELS","",""],[17,"FT_GLYPH_BBOX_GRIDFIT","",""],[17,"FT_GLYPH_BBOX_TRUNCATE","",""],[17,"FT_GLYPH_BBOX_PIXELS","",""],[17,"FT_FACE_FLAG_SCALABLE","",""],[17,"FT_FACE_FLAG_FIXED_SIZES","",""],[17,"FT_FACE_FLAG_FIXED_WIDTH","",""],[17,"FT_FACE_FLAG_SFNT","",""],[17,"FT_FACE_FLAG_HORIZONTAL","",""],[17,"FT_FACE_FLAG_VERTICAL","",""],[17,"FT_FACE_FLAG_KERNING","",""],[17,"FT_FACE_FLAG_FAST_GLYPHS","",""],[17,"FT_FACE_FLAG_MULTIPLE_MASTERS","",""],[17,"FT_FACE_FLAG_GLYPH_NAMES","",""],[17,"FT_FACE_FLAG_EXTERNAL_STREAM","",""],[17,"FT_FACE_FLAG_HINTER","",""],[17,"FT_FACE_FLAG_CID_KEYED","",""],[17,"FT_FACE_FLAG_TRICKY","",""],[17,"FT_FACE_FLAG_COLOR","",""],[17,"FT_STYLE_FLAG_ITALIC","",""],[17,"FT_STYLE_FLAG_BOLD","",""],[17,"FT_OPEN_MEMORY","",""],[17,"FT_OPEN_STREAM","",""],[17,"FT_OPEN_PATHNAME","",""],[17,"FT_OPEN_DRIVER","",""],[17,"FT_OPEN_PARAMS","",""],[17,"FT_SUBGLYPH_FLAG_ARGS_ARE_WORDS","",""],[17,"FT_SUBGLYPH_FLAG_ARGS_ARE_XY_VALUES","",""],[17,"FT_SUBGLYPH_FLAG_ROUND_XY_TO_GRID","",""],[17,"FT_SUBGLYPH_FLAG_SCALE","",""],[17,"FT_SUBGLYPH_FLAG_XY_SCALE","",""],[17,"FT_SUBGLYPH_FLAG_2X2","",""],[17,"FT_SUBGLYPH_FLAG_USE_MY_METRICS","",""],[17,"FT_LOAD_DEFAULT","",""],[17,"FT_LOAD_NO_SCALE","",""],[17,"FT_LOAD_NO_HINTING","",""],[17,"FT_LOAD_RENDER","",""],[17,"FT_LOAD_NO_BITMAP","",""],[17,"FT_LOAD_VERTICAL_LAYOUT","",""],[17,"FT_LOAD_FORCE_AUTOHINT","",""],[17,"FT_LOAD_CROP_BITMAP","",""],[17,"FT_LOAD_PEDANTIC","",""],[17,"FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH","",""],[17,"FT_LOAD_NO_RECURSE","",""],[17,"FT_LOAD_IGNORE_TRANSFORM","",""],[17,"FT_LOAD_MONOCHROME","",""],[17,"FT_LOAD_LINEAR_DESIGN","",""],[17,"FT_LOAD_NO_AUTOHINT","",""],[17,"FT_LOAD_COLOR","",""],[17,"FT_LOAD_TARGET_NORMAL","",""],[17,"FT_LOAD_TARGET_LIGHT","",""],[17,"FT_LOAD_TARGET_MONO","",""],[17,"FT_LOAD_TARGET_LCD","",""],[17,"FT_LOAD_TARGET_LCD_V","",""],[17,"FT_FSTYPE_INSTALLABLE_EMBEDDING","",""],[17,"FT_FSTYPE_RESTRICTED_LICENSE_EMBEDDING","",""],[17,"FT_FSTYPE_PREVIEW_AND_PRINT_EMBEDDING","",""],[17,"FT_FSTYPE_EDITABLE_EMBEDDING","",""],[17,"FT_FSTYPE_NO_SUBSETTING","",""],[17,"FT_FSTYPE_BITMAP_EMBEDDING_ONLY","",""],[17,"FT_Err_Ok","",""],[17,"FT_Err_Cannot_Open_Resource","",""],[17,"FT_Err_Unknown_File_Format","",""],[17,"FT_Err_Invalid_File_Format","",""],[17,"FT_Err_Invalid_Version","",""],[17,"FT_Err_Lower_Module_Version","",""],[17,"FT_Err_Invalid_Argument","",""],[17,"FT_Err_Unimplemented_Feature","",""],[17,"FT_Err_Invalid_Table","",""],[17,"FT_Err_Invalid_Offset","",""],[17,"FT_Err_Array_Too_Large","",""],[17,"FT_Err_Missing_Module","",""],[17,"FT_Err_Missing_Property","",""],[17,"FT_Err_Invalid_Glyph_Index","",""],[17,"FT_Err_Invalid_Character_Code","",""],[17,"FT_Err_Invalid_Glyph_Format","",""],[17,"FT_Err_Cannot_Render_Glyph","",""],[17,"FT_Err_Invalid_Outline","",""],[17,"FT_Err_Invalid_Composite","",""],[17,"FT_Err_Too_Many_Hints","",""],[17,"FT_Err_Invalid_Pixel_Size","",""],[17,"FT_Err_Invalid_Handle","",""],[17,"FT_Err_Invalid_Library_Handle","",""],[17,"FT_Err_Invalid_Driver_Handle","",""],[17,"FT_Err_Invalid_Face_Handle","",""],[17,"FT_Err_Invalid_Size_Handle","",""],[17,"FT_Err_Invalid_Slot_Handle","",""],[17,"FT_Err_Invalid_CharMap_Handle","",""],[17,"FT_Err_Invalid_Cache_Handle","",""],[17,"FT_Err_Invalid_Stream_Handle","",""],[17,"FT_Err_Too_Many_Drivers","",""],[17,"FT_Err_Too_Many_Extensions","",""],[17,"FT_Err_Out_Of_Memory","",""],[17,"FT_Err_Unlisted_Object","",""],[17,"FT_Err_Cannot_Open_Stream","",""],[17,"FT_Err_Invalid_Stream_Seek","",""],[17,"FT_Err_Invalid_Stream_Skip","",""],[17,"FT_Err_Invalid_Stream_Read","",""],[17,"FT_Err_Invalid_Stream_Operation","",""],[17,"FT_Err_Invalid_Frame_Operation","",""],[17,"FT_Err_Nested_Frame_Access","",""],[17,"FT_Err_Invalid_Frame_Read","",""],[17,"FT_Err_Raster_Uninitialized","",""],[17,"FT_Err_Raster_Corrupted","",""],[17,"FT_Err_Raster_Overflow","",""],[17,"FT_Err_Raster_Negative_Height","",""],[17,"FT_Err_Too_Many_Caches","",""],[17,"FT_Err_Invalid_Opcode","",""],[17,"FT_Err_Too_Few_Arguments","",""],[17,"FT_Err_Stack_Overflow","",""],[17,"FT_Err_Code_Overflow","",""],[17,"FT_Err_Bad_Argument","",""],[17,"FT_Err_Divide_By_Zero","",""],[17,"FT_Err_Invalid_Reference","",""],[17,"FT_Err_Debug_OpCode","",""],[17,"FT_Err_ENDF_In_Exec_Stream","",""],[17,"FT_Err_Nested_DEFS","",""],[17,"FT_Err_Invalid_CodeRange","",""],[17,"FT_Err_Execution_Too_Long","",""],[17,"FT_Err_Too_Many_Function_Defs","",""],[17,"FT_Err_Too_Many_Instruction_Defs","",""],[17,"FT_Err_Table_Missing","",""],[17,"FT_Err_Horiz_Header_Missing","",""],[17,"FT_Err_Locations_Missing","",""],[17,"FT_Err_Name_Table_Missing","",""],[17,"FT_Err_CMap_Table_Missing","",""],[17,"FT_Err_Hmtx_Table_Missing","",""],[17,"FT_Err_Post_Table_Missing","",""],[17,"FT_Err_Invalid_Horiz_Metrics","",""],[17,"FT_Err_Invalid_CharMap_Format","",""],[17,"FT_Err_Invalid_PPem","",""],[17,"FT_Err_Invalid_Vert_Metrics","",""],[17,"FT_Err_Could_Not_Find_Context","",""],[17,"FT_Err_Invalid_Post_Table_Format","",""],[17,"FT_Err_Invalid_Post_Table","",""],[17,"FT_Err_Syntax_Error","",""],[17,"FT_Err_Stack_Underflow","",""],[17,"FT_Err_Ignore","",""],[17,"FT_Err_No_Unicode_Glyph_Name","",""],[17,"FT_Err_Missing_Startfont_Field","",""],[17,"FT_Err_Missing_Font_Field","",""],[17,"FT_Err_Missing_Size_Field","",""],[17,"FT_Err_Missing_Fontboundingbox_Field","",""],[17,"FT_Err_Missing_Chars_Field","",""],[17,"FT_Err_Missing_Startchar_Field","",""],[17,"FT_Err_Missing_Encoding_Field","",""],[17,"FT_Err_Missing_Bbx_Field","",""],[17,"FT_Err_Bbx_Too_Big","",""],[17,"FT_Err_Corrupted_Font_Header","",""],[17,"FT_Err_Corrupted_Font_Glyphs","",""],[17,"FT_Err_Max","",""],[6,"FT_Library","",""],[6,"FT_Face","",""],[6,"FT_Size","",""],[6,"FT_GlyphSlot","",""],[6,"FT_CharMap","",""],[6,"FT_Module","",""],[6,"FT_Driver","",""],[6,"FT_Renderer","",""],[6,"FT_Size_Internal","",""],[6,"FT_SubGlyph","",""],[6,"FT_Slot_Internal","",""],[6,"FT_Size_Request","",""],[6,"FT_Face_Internal","",""],[6,"FT_Stream","",""],[6,"FT_Memory","",""],[6,"FT_ListNode","",""],[6,"FT_Glyph","",""],[6,"FT_BitmapGlyph","",""],[6,"FT_OutlineGlyph","",""],[6,"TT_OS2_Internal","",""],[6,"FT_LibraryRec","",""],[6,"FT_ModuleRec","",""],[6,"FT_DriverRec","",""],[6,"FT_RendererRec","",""],[6,"FT_Size_InternalRec","",""],[6,"FT_SubGlyphRec","",""],[6,"FT_Slot_InternalRec","",""],[6,"FT_Face_InternalRec","",""],[3,"FT_CharMapRec","",""],[12,"face","","",15],[12,"encoding","","",15],[12,"platform_id","","",15],[12,"encoding_id","","",15],[3,"FT_FaceRec","",""],[12,"num_faces","","",16],[12,"face_index","","",16],[12,"face_flags","","",16],[12,"style_flags","","",16],[12,"num_glyphs","","",16],[12,"family_name","","",16],[12,"style_name","","",16],[12,"num_fixed_sizes","","",16],[12,"available_sizes","","",16],[12,"num_charmaps","","",16],[12,"charmaps","","",16],[12,"generic","","",16],[12,"bbox","","",16],[12,"units_per_EM","","",16],[12,"ascender","","",16],[12,"descender","","",16],[12,"height","","",16],[12,"max_advance_width","","",16],[12,"max_advance_height","","",16],[12,"underline_position","","",16],[12,"underline_thickness","","",16],[12,"glyph","","",16],[12,"size","","",16],[12,"charmap","","",16],[12,"driver","","",16],[12,"memory","","",16],[12,"stream","","",16],[12,"sizes_list","","",16],[12,"autohint","","",16],[12,"extensions","","",16],[12,"internal","","",16],[3,"FT_GlyphSlotRec","",""],[12,"library","","",17],[12,"face","","",17],[12,"next","","",17],[12,"reserved","","",17],[12,"generic","","",17],[12,"metrics","","",17],[12,"linearHoriAdvance","","",17],[12,"linearVertAdvance","","",17],[12,"advance","","",17],[12,"format","","",17],[12,"bitmap","","",17],[12,"bitmap_left","","",17],[12,"bitmap_top","","",17],[12,"outline","","",17],[12,"num_subglyphs","","",17],[12,"subglyphs","","",17],[12,"control_data","","",17],[12,"control_len","","",17],[12,"lsb_delta","","",17],[12,"rsb_delta","","",17],[12,"other","","",17],[12,"internal","","",17],[3,"FT_SizeRec","",""],[12,"face","","",18],[12,"generic","","",18],[12,"metrics","","",18],[12,"internal","","",18],[3,"FT_StreamRec","",""],[12,"base","","",19],[12,"size","","",19],[12,"pos","","",19],[12,"descriptor","","",19],[12,"pathname","","",19],[12,"read","","",19],[12,"close","","",19],[12,"memory","","",19],[12,"cursor","","",19],[12,"limit","","",19],[3,"FT_MemoryRec","",""],[12,"user","","",20],[12,"alloc","","",20],[12,"free","","",20],[12,"realloc","","",20],[3,"FT_ListRec","",""],[12,"head","","",21],[12,"tail","","",21],[3,"FT_ListNodeRec","",""],[12,"prev","","",22],[12,"next","","",22],[12,"data","","",22],[3,"FT_Size_RequestRec","",""],[12,"size_request_type","","",23],[12,"width","","",23],[12,"height","","",23],[12,"horiResolution","","",23],[12,"vertResolution","","",23],[3,"FT_GlyphRec","",""],[12,"library","","",24],[12,"clazz","","",24],[12,"format","","",24],[12,"advance","","",24],[3,"FT_BitmapGlyphRec","",""],[12,"root","","",25],[12,"left","","",25],[12,"top","","",25],[12,"bitmap","","",25],[3,"FT_OutlineGlyphRec","",""],[12,"root","","",26],[12,"outline","","",26],[5,"FT_HAS_HORIZONTAL","",""],[5,"FT_HAS_VERTICAL","",""],[5,"FT_HAS_KERNING","",""],[5,"FT_IS_SCALABLE","",""],[5,"FT_IS_SFNT","",""],[5,"FT_IS_FIXED_WIDTH","",""],[5,"FT_HAS_FIXED_SIZES","",""],[5,"FT_HAS_GLYPH_NAMES","",""],[5,"FT_HAS_MULTIPLE_MASTERS","",""],[5,"FT_IS_CID_KEYED","",""],[5,"FT_IS_TRICKY","",""],[5,"FT_HAS_COLOR","",""],[5,"FT_Get_Sfnt_Table","",""],[5,"FT_Init_FreeType","",""],[5,"FT_Done_FreeType","",""],[5,"FT_New_Library","",""],[5,"FT_Done_Library","",""],[5,"FT_Reference_Library","",""],[5,"FT_Add_Default_Modules","",""],[5,"FT_New_Face","",""],[5,"FT_New_Memory_Face","",""],[5,"FT_Open_Face","",""],[5,"FT_Attach_File","",""],[5,"FT_Attach_Stream","",""],[5,"FT_Reference_Face","",""],[5,"FT_Done_Face","",""],[5,"FT_Select_Size","",""],[5,"FT_Request_Size","",""],[5,"FT_Set_Char_Size","",""],[5,"FT_Set_Pixel_Sizes","",""],[5,"FT_Load_Glyph","",""],[5,"FT_Load_Char","",""],[5,"FT_Set_Transform","",""],[5,"FT_Render_Glyph","",""],[5,"FT_Get_Kerning","",""],[5,"FT_Get_Track_Kerning","",""],[5,"FT_Get_Glyph_Name","",""],[5,"FT_Get_Postscript_Name","",""],[5,"FT_Select_CharMap","",""],[5,"FT_Set_Charmap","",""],[5,"FT_Get_Charmap_Index","",""],[5,"FT_Get_Char_Index","",""],[5,"FT_Get_First_Char","",""],[5,"FT_Get_Next_Char","",""],[5,"FT_Get_Name_Index","",""],[5,"FT_Get_SubGlyph_Info","",""],[5,"FT_Get_FSType_Flags","",""],[5,"FT_Get_Glyph","",""],[5,"FT_Glyph_Copy","",""],[5,"FT_Glyph_Transform","",""],[5,"FT_Glyph_Get_CBox","",""],[5,"FT_Glyph_To_Bitmap","",""],[5,"FT_Done_Glyph","",""],[0,"bitmap","freetype",""],[3,"Bitmap","freetype::bitmap",""],[4,"PixelMode","","An enumeration type used to describe the format of pixels in a given bitmap. Note that\nadditional formats may be added in the future."],[13,"None","","This value is reserved.",27],[13,"Mono","","A monochrome bitmap, using 1 bit per pixel. Note that pixels are\nstored in most-significant order (MSB), which means that the left-most\npixel in a byte has value 128.",27],[13,"Gray","","An 8-bit bitmap, generally used to represent anti-aliased glyph images.\nEach pixel is stored in one byte. Note that the number of `gray`\nlevels is stored in the `num_grays` field of the FT_Bitmap structure\n(it generally is 256).",27],[13,"Gray2","","A 2-bit per pixel bitmap, used to represent embedded anti-aliased\nbitmaps in font files according to the OpenType specification. We\nhaven't found a single font using this format, however.",27],[13,"Gray4","","A 4-bit per pixel bitmap, representing embedded anti-aliased bitmaps in\nfont files according to the OpenType specification. We haven't found a\nsingle font using this format, however.",27],[13,"Lcd","","An 8-bit bitmap, representing RGB or BGR decimated glyph images used\nfor display on LCD displays; the bitmap is three times wider than the\noriginal glyph image. See also FT_RENDER_MODE_LCD.",27],[13,"LcdV","","An 8-bit bitmap, representing RGB or BGR decimated glyph images used for\ndisplay on rotated LCD displays; the bitmap is three times taller than\nthe original glyph image. See also FT_RENDER_MODE_LCD_V.",27],[13,"Bgra","","An image with four 8-bit channels per pixel, representing a color image\n(such as emoticons) with alpha channel. For each pixel, the format is\nBGRA, which means, the blue channel comes first in memory. The color\nchannels are pre-multiplied and in the sRGB colorspace. For example,\nfull red at half-translucent opacity will be represented as\n`00,00,80,80`, not `00,00,FF,80`. See also FT_LOAD_COLOR.",27],[11,"fmt","","",27],[11,"from_raw","","",28],[11,"buffer","","A typeless pointer to the bitmap buffer. This value should be aligned\non 32-bit boundaries in most cases.",28],[11,"width","","The number of pixels in bitmap row.",28],[11,"rows","","The number of bitmap rows.",28],[11,"raw","","",28],[11,"pixel_mode","","The pixel mode, i.e., how pixel bits are stored. See `PixelMode` for\npossible values.",28],[11,"pitch","","The pitch's absolute value is the number of bytes taken by one bitmap row, including\npadding. However, the pitch is positive when the bitmap has a ‘down’ flow, and negative\nwhen it has an ‘up’ flow. In all cases, the pitch is an offset to add to a bitmap pointer\nin order to go down one row.",28],[0,"bitmap_glyph","freetype",""],[3,"BitmapGlyph","freetype::bitmap_glyph",""],[11,"from_raw","","",29],[11,"left","","",29],[11,"top","","",29],[11,"bitmap","","",29],[11,"raw","","",29],[0,"error","freetype",""],[4,"Error","freetype::error",""],[13,"Ok","","",30],[13,"CannotOpenResource","","",30],[13,"UnknownFileFormat","","",30],[13,"InvalidFileFormat","","",30],[13,"InvalidVersion","","",30],[13,"LowerModuleVersion","","",30],[13,"InvalidArgument","","",30],[13,"UnimplementedFeature","","",30],[13,"InvalidTable","","",30],[13,"InvalidOffset","","",30],[13,"ArrayTooLarge","","",30],[13,"MissingModule","","",30],[13,"MissingProperty","","",30],[13,"InvalidGlyphIndex","","",30],[13,"InvalidCharacterCode","","",30],[13,"InvalidGlyphFormat","","",30],[13,"CannotRenderGlyph","","",30],[13,"InvalidOutline","","",30],[13,"InvalidComposite","","",30],[13,"TooManyHints","","",30],[13,"InvalidPixelSize","","",30],[13,"InvalidHandle","","",30],[13,"InvalidLibraryHandle","","",30],[13,"InvalidDriverHandle","","",30],[13,"InvalidFaceHandle","","",30],[13,"InvalidSizeHandle","","",30],[13,"InvalidSlotHandle","","",30],[13,"InvalidCharMapHandle","","",30],[13,"InvalidCacheHandle","","",30],[13,"InvalidStreamHandle","","",30],[13,"TooManyDrivers","","",30],[13,"TooManyExtensions","","",30],[13,"OutOfMemory","","",30],[13,"UnlistedObject","","",30],[13,"CannotOpenStream","","",30],[13,"InvalidStreamSeek","","",30],[13,"InvalidStreamSkip","","",30],[13,"InvalidStreamRead","","",30],[13,"InvalidStreamOperation","","",30],[13,"InvalidFrameOperation","","",30],[13,"NestedFrameAccess","","",30],[13,"InvalidFrameRead","","",30],[13,"RasterUninitialized","","",30],[13,"RasterCorrupted","","",30],[13,"RasterOverflow","","",30],[13,"RasterNegativeHeight","","",30],[13,"TooManyCaches","","",30],[13,"InvalidOpcode","","",30],[13,"TooFewArguments","","",30],[13,"StackOverflow","","",30],[13,"CodeOverflow","","",30],[13,"BadArgument","","",30],[13,"DivideByZero","","",30],[13,"InvalidReference","","",30],[13,"DebugOpCode","","",30],[13,"ENDFInExecStream","","",30],[13,"NestedDEFS","","",30],[13,"InvalidCodeRange","","",30],[13,"ExecutionTooLong","","",30],[13,"TooManyFunctionDefs","","",30],[13,"TooManyInstructionDefs","","",30],[13,"TableMissing","","",30],[13,"HorizHeaderMissing","","",30],[13,"LocationsMissing","","",30],[13,"NameTableMissing","","",30],[13,"CMapTableMissing","","",30],[13,"HmtxTableMissing","","",30],[13,"PostTableMissing","","",30],[13,"InvalidHorizMetrics","","",30],[13,"InvalidCharMapFormat","","",30],[13,"InvalidPPem","","",30],[13,"InvalidVertMetrics","","",30],[13,"CouldNotFindContext","","",30],[13,"InvalidPostTableFormat","","",30],[13,"InvalidPostTable","","",30],[13,"SyntaxError","","",30],[13,"StackUnderflow","","",30],[13,"Ignore","","",30],[13,"NoUnicodeGlyphName","","",30],[13,"MissingStartfontField","","",30],[13,"MissingFontField","","",30],[13,"MissingSizeField","","",30],[13,"MissingFontboundingboxField","","",30],[13,"MissingCharsField","","",30],[13,"MissingStartcharField","","",30],[13,"MissingEncodingField","","",30],[13,"MissingBbxField","","",30],[13,"BbxTooBig","","",30],[13,"CorruptedFontHeader","","",30],[13,"CorruptedFontGlyphs","","",30],[13,"Max","","",30],[13,"UnknownError","","",30],[6,"FtResult","",""],[11,"fmt","","",30],[11,"eq","","",30],[11,"ne","","",30],[11,"clone","","",30],[11,"from_i64","","",30],[11,"from_u64","","",30],[11,"from_i32","","",30],[11,"fmt","","",30],[0,"face","freetype",""],[3,"LoadFlag","freetype::face",""],[3,"Face","",""],[4,"KerningMode","",""],[13,"KerningDefault","","",31],[13,"KerningUnfitted","","",31],[13,"KerningUnscaled","","",31],[17,"DEFAULT","",""],[17,"NO_SCALE","",""],[17,"NO_HINTING","",""],[17,"RENDER","",""],[17,"NO_BITMAP","",""],[17,"VERTICAL_LAYOUT","",""],[17,"FORCE_AUTOHINT","",""],[17,"CROP_BITMAP","",""],[17,"PEDANTIC","",""],[17,"IGNORE_GLOBAL_ADVANCE_WITH","",""],[17,"NO_RECURSE","",""],[17,"IGNORE_TRANSFORM","",""],[17,"MONOCHROME","",""],[17,"LINEAR_DESIGN","",""],[17,"NO_AUTOHINT","",""],[17,"TARGET_NORMAL","",""],[17,"TARGET_LIGHT","",""],[17,"TARGET_MONO","",""],[17,"TARGET_LCD","",""],[17,"TARGET_LCD_V","",""],[17,"COLOR","",""],[11,"hash","","",32],[11,"cmp","","",32],[11,"partial_cmp","","",32],[11,"lt","","",32],[11,"le","","",32],[11,"gt","","",32],[11,"ge","","",32],[11,"clone","","",32],[11,"eq","","",32],[11,"ne","","",32],[11,"empty","","Returns an empty set of flags.",32],[11,"all","","Returns the set containing all flags.",32],[11,"bits","","Returns the raw value of the flags currently stored.",32],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",32],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",32],[11,"is_empty","","Returns `true` if no flags are currently stored.",32],[11,"is_all","","Returns `true` if all flags are currently set.",32],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",32],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",32],[11,"insert","","Inserts the specified flags in-place.",32],[11,"remove","","Removes the specified flags in-place.",32],[11,"toggle","","Toggles the specified flags in-place.",32],[6,"Output","",""],[11,"bitor","","Returns the union of the two sets of flags.",32],[6,"Output","",""],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",32],[6,"Output","",""],[11,"bitand","","Returns the intersection between the two sets of flags.",32],[6,"Output","",""],[11,"sub","","Returns the set difference of the two sets of flags.",32],[6,"Output","",""],[11,"not","","Returns the complement of this set of flags.",32],[11,"hash","","",33],[11,"eq","","",33],[11,"ne","","",33],[11,"from_raw","","",33],[11,"attach_file","","",33],[11,"reference","","",33],[11,"set_char_size","","",33],[11,"set_pixel_sizes","","",33],[11,"load_glyph","","",33],[11,"load_char","","",33],[11,"set_transform","","",33],[11,"get_char_index","","",33],[11,"get_kerning","","",33],[11,"glyph","","",33],[11,"has_horizontal","","",33],[11,"has_vertical","","",33],[11,"has_kerning","","",33],[11,"is_scalable","","",33],[11,"is_sfnt","","",33],[11,"is_fixed_width","","",33],[11,"has_fixed_sizes","","",33],[11,"has_glyph_names","","",33],[11,"is_cid_keyed","","",33],[11,"is_tricky","","",33],[11,"has_color","","",33],[11,"raw","","",33],[11,"ascender","","",33],[11,"descender","","",33],[11,"height","","",33],[11,"max_advance_width","","",33],[11,"max_advance_height","","",33],[11,"underline_position","","",33],[11,"underline_thickness","","",33],[11,"family_name","","",33],[11,"style_name","","",33],[11,"drop","","",33],[0,"glyph","freetype",""],[3,"Glyph","freetype::glyph",""],[11,"from_raw","","",34],[11,"transform","","",34],[11,"get_cbox","","",34],[11,"to_bitmap","","",34],[11,"advance_x","","",34],[11,"advance_y","","",34],[11,"advance","","",34],[11,"format","","",34],[11,"raw","","",34],[11,"clone","","",34],[11,"drop","","",34],[0,"glyph_slot","freetype",""],[3,"GlyphSlot","freetype::glyph_slot",""],[11,"hash","","",35],[11,"eq","","",35],[11,"ne","","",35],[11,"from_raw","","",35],[11,"render_glyph","","",35],[11,"get_subglyph_info","","",35],[11,"get_glyph","","",35],[11,"outline","","",35],[11,"bitmap","","",35],[11,"bitmap_left","","",35],[11,"bitmap_top","","",35],[11,"advance","","",35],[11,"linear_hori_advance","","",35],[11,"linear_vert_advance","","",35],[11,"metrics","","",35],[11,"raw","","",35],[0,"library","freetype",""],[3,"Library","freetype::library",""],[11,"init","","",36],[11,"new_face","","",36],[11,"new_memory_face","","",36],[11,"raw","","",36],[11,"drop","","",36],[0,"outline","freetype",""],[3,"Vector","freetype::outline",""],[12,"x","","",1],[12,"y","","",1],[3,"Outline","",""],[3,"CurveIterator","",""],[3,"ContourIterator","",""],[4,"Curve","",""],[13,"Line","","",37],[13,"Bezier2","","",37],[13,"Bezier3","","",37],[11,"from_raw","","",38],[11,"points","","",38],[11,"tags","","",38],[11,"contours","","",38],[11,"contours_iter","","",38],[11,"from_raw","","",39],[11,"start","","",39],[6,"Item","",""],[11,"next","","",39],[11,"from_raw","","",40],[6,"Item","",""],[11,"next","","",40],[0,"render_mode","freetype",""],[4,"RenderMode","freetype::render_mode",""],[13,"Normal","","",41],[13,"Light","","",41],[13,"Mono","","",41],[13,"Lcd","","",41],[13,"LcdV","","",41],[13,"Max","","",41],[0,"tt_os2","freetype",""],[3,"TrueTypeOS2Table","freetype::tt_os2",""],[11,"version","","",42],[11,"avg_char_width","","",42],[11,"us_weight_class","","",42],[11,"us_width_class","","",42],[11,"fs_type","","",42],[11,"y_subscript_x_size","","",42],[11,"y_subscript_y_size","","",42],[11,"y_subscript_x_offset","","",42],[11,"y_subscript_y_offset","","",42],[11,"y_superscript_x_size","","",42],[11,"y_superscript_y_size","","",42],[11,"y_superscript_x_offset","","",42],[11,"y_superscript_y_offset","","",42],[11,"y_strikeout_size","","",42],[11,"y_strikeout_position","","",42],[11,"s_family_class","","",42],[6,"BBox","freetype",""],[6,"GlyphMetrics","",""],[6,"Matrix","",""],[6,"Vector","",""]],"paths":[[8,"FTErrorMethods"],[3,"Vector"],[3,"FT_BBox"],[3,"FT_Matrix"],[3,"FT_UnitVector"],[3,"FT_Bitmap"],[3,"FT_Data"],[3,"FT_Generic"],[3,"FT_Size_Metrics"],[3,"FT_Outline"],[3,"FT_Glyph_Metrics"],[3,"FT_Parameter"],[3,"FT_Open_Args"],[3,"FT_Bitmap_Size"],[3,"TT_OS2"],[3,"FT_CharMapRec"],[3,"FT_FaceRec"],[3,"FT_GlyphSlotRec"],[3,"FT_SizeRec"],[3,"FT_StreamRec"],[3,"FT_MemoryRec"],[3,"FT_ListRec"],[3,"FT_ListNodeRec"],[3,"FT_Size_RequestRec"],[3,"FT_GlyphRec"],[3,"FT_BitmapGlyphRec"],[3,"FT_OutlineGlyphRec"],[4,"PixelMode"],[3,"Bitmap"],[3,"BitmapGlyph"],[4,"Error"],[4,"KerningMode"],[3,"LoadFlag"],[3,"Face"],[3,"Glyph"],[3,"GlyphSlot"],[3,"Library"],[4,"Curve"],[3,"Outline"],[3,"CurveIterator"],[3,"ContourIterator"],[4,"RenderMode"],[3,"TrueTypeOS2Table"]]};

searchIndex['rand'] = {"items":[[0,"","rand","Utilities for random number generation"],[3,"OsRng","","A random number generator that retrieves randomness straight from\nthe operating system. Platform sources:"],[3,"Generator","","Iterator which will generate a stream of random items."],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters."],[3,"XorShiftRng","","An Xorshift[1] random number\ngenerator."],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the\nopen interval `(0,1)` (not including either endpoint)."],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the\nclosed interval `[0,1]` (including both endpoints)."],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current\nplatform."],[3,"ThreadRng","","The thread-local RNG."],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed."],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number\ngenerator, seeded by the system. Intended to be used in method\nchaining style, e.g. `thread_rng().gen::<int>()`."],[5,"random","","Generates a random value using the thread-local random number generator."],[5,"sample","","Randomly sample up to `amount` elements from an iterator."],[0,"distributions","","Sampling from random distributions."],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the\n`Sample` & `IndependentSample` traits."],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`."],[12,"weight","","The numerical weight of this item",0],[12,"item","","The actual item which is being weighted",0],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items."],[0,"range","","Generating numbers between two others."],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds."],[8,"SampleRange","","The helper trait for types that have a sensible way to sample\nuniformly between two values. This should not be used directly,\nand is only to facilitate `Range`."],[10,"construct_range","","Construct the `Range` object that `sample_range`\nrequires. This should not ever be called directly, only via\n`Range::new`, which will check that `low < high`, so this\nfunction doesn't have to repeat the check.",1],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as\na source of randomness.",1],[11,"new","","Create a new `Range` instance that samples uniformly from\n`[low, high)`. Panics if `low >= high`.",2],[11,"sample","","",2],[11,"ind_sample","","",2],[0,"gamma","rand::distributions","The Gamma and derived distributions."],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution."],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of\nfreedom."],[3,"FisherF","","The Fisher F distribution `F(m, n)`."],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of\nfreedom."],[11,"new","","Construct an object representing the `Gamma(shape, scale)`\ndistribution.",3],[11,"sample","","",3],[11,"ind_sample","","",3],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom\n`k`. Panics if `k < 0`.",4],[11,"sample","","",4],[11,"ind_sample","","",4],[11,"new","","Create a new `FisherF` distribution, with the given\nparameter. Panics if either `m` or `n` are not positive.",5],[11,"sample","","",5],[11,"ind_sample","","",5],[11,"new","","Create a new Student t distribution with `n` degrees of\nfreedom. Panics if `n <= 0`.",6],[11,"sample","","",6],[11,"ind_sample","","",6],[0,"normal","rand::distributions","The normal and derived distributions."],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers\n(a.k.a.  a standard normal, or Gaussian)."],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`."],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`."],[11,"rand","","",7],[11,"new","","Construct a new `Normal` distribution with the given mean and\nstandard deviation.",8],[11,"sample","","",8],[11,"ind_sample","","",8],[11,"new","","Construct a new `LogNormal` distribution with the given mean\nand standard deviation.",9],[11,"sample","","",9],[11,"ind_sample","","",9],[0,"exponential","rand::distributions","The exponential distribution."],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers."],[3,"Exp","","The exponential distribution `Exp(lambda)`."],[11,"rand","","",10],[11,"new","","Construct a new `Exp` with the given shape parameter\n`lambda`. Panics if `lambda <= 0`.",11],[11,"sample","","",11],[11,"ind_sample","","",11],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`."],[10,"sample","","Generate a random value of `Support`, using `rng` as the\nsource of randomness.",12],[8,"IndependentSample","","`Sample`s that do not require keeping track of state."],[10,"ind_sample","","Generate a random value.",13],[11,"sample","","",14],[11,"ind_sample","","",14],[11,"new","","Create a new `WeightedChoice`.",15],[11,"sample","","",15],[11,"ind_sample","","",15],[0,"isaac","rand","The ISAAC random number generator."],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1]."],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit\nvariant of the ISAAC algorithm."],[11,"new_unseeded","","Create an ISAAC random number generator using the default\nfixed seed.",16],[11,"clone","","",16],[11,"next_u32","","",16],[11,"reseed","","",16],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",16],[11,"rand","","",16],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the\ndefault fixed seed.",17],[11,"clone","","",17],[11,"next_u32","","",17],[11,"next_u64","","",17],[11,"reseed","","",17],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",17],[11,"rand","","",17],[0,"chacha","rand","The ChaCha random number generator."],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1]."],[11,"clone","","",18],[11,"new_unseeded","","Create an ChaCha random number generator using the default\nfixed key of 8 zero words.",18],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to\na user-provided value. This permits jumping\narbitrarily ahead (or backwards) in the pseudorandom stream.",18],[11,"next_u32","","",18],[11,"reseed","","",18],[11,"from_seed","","Create a ChaCha generator from a seed,\nobtained from a variable-length u32 array.\nOnly up to 8 words are used; if less than 8\nwords are used, the remaining are set to zero.",18],[11,"rand","","",18],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it\ngenerates a certain number of random bytes."],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it\nhas generated a certain number of random bytes."],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",19],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by\nreplacing the RNG with the result of a `Default::default` call."],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`."],[10,"reseed","","Reseed the given RNG.",20],[11,"new","","Create a new `ReseedingRng` with the given parameters.",19],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been\ngenerated exceed the threshold.",19],[11,"next_u32","","",19],[11,"next_u64","","",19],[11,"fill_bytes","","",19],[11,"reseed","","",19],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and\nseed. This uses a default value for `generation_threshold`.",19],[11,"reseed","","",21],[11,"default","","",21],[11,"rand","rand","",22],[11,"rand","","",23],[11,"rand","","",22],[11,"rand","","",23],[11,"rand","core::option","",24],[0,"os","rand","Interfaces to the operating system provided random number\ngenerators."],[11,"new","","Create a new `OsRng`.",25],[11,"next_u32","","",25],[11,"next_u64","","",25],[11,"fill_bytes","","",25],[0,"reader","","A wrapper around any Reader to treat it as an RNG."],[3,"ReaderRng","rand::reader","An RNG that reads random bytes straight from a `Reader`. This will\nwork best with an infinite reader, but this is not required."],[11,"new","","Create a new `ReaderRng` from a `Reader`.",26],[11,"next_u32","","",26],[11,"next_u64","","",26],[11,"fill_bytes","","",26],[8,"Rand","rand","A type that can be randomly generated using an `Rng`."],[10,"rand","","Generates a random instance of this type using the specified source of\nrandomness.",27],[8,"Rng","","A random number generator."],[10,"next_u32","","Return the next random u32.",28],[11,"next_u64","","Return the next random u64.",28],[11,"next_f32","","Return the next random f32 selected from the half-open\ninterval `[0, 1)`.",28],[11,"next_f64","","Return the next random f64 selected from the half-open\ninterval `[0, 1)`.",28],[11,"fill_bytes","","Fill `dest` with random data.",28],[11,"gen","","Return a random value of a `Rand` type.",28],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly\ngenerated items.",28],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",28],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",28],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",28],[11,"choose","","Return a random element from `values`.",28],[11,"shuffle","","Shuffle a mutable slice in place.",28],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce\nthe same stream of randomness multiple times."],[10,"reseed","","Reseed an RNG with the given seed.",29],[10,"from_seed","","Create a new RNG with the given seed.",29],[6,"Item","",""],[11,"next","","",30],[6,"Item","",""],[11,"next","","",31],[11,"clone","","",32],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",32],[11,"next_u32","","",32],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",32],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",32],[11,"rand","","",32],[11,"clone","","",33],[11,"new","","Create a randomly seeded instance of `StdRng`.",33],[11,"next_u32","","",33],[11,"next_u64","","",33],[11,"reseed","","",33],[11,"from_seed","","",33],[11,"clone","","",34],[11,"next_u32","","",34],[11,"next_u64","","",34],[11,"fill_bytes","","",34]],"paths":[[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[3,"Open01"],[3,"Closed01"],[4,"Option"],[3,"OsRng"],[3,"ReaderRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Generator"],[3,"AsciiGenerator"],[3,"XorShiftRng"],[3,"StdRng"],[3,"ThreadRng"]]};

searchIndex['vecmath'] = {"items":[[0,"","vecmath","A simple and generic library for vector math."],[5,"col_mat3x2_mul_col","","Computes column vector in column matrix product."],[5,"col_mat3_mul_col","","Computes column vector in column matrix product."],[5,"col_mat4x3_mul_col","","Computes column vector in column matrix product."],[5,"col_mat4_mul_col","","Computes column vector in column matrix product."],[5,"row_mat2x3_mul_row","","Computes row vector in row matrix product."],[5,"row_mat3_mul_row","","Computes row vector in row matrix product."],[5,"row_mat3x4_mul_row","","Computes row vector in row matrix product."],[5,"row_mat4_mul_row","","Computes row vector in row matrix product."],[5,"col_mat3x2_mul","","Multiplies two matrices."],[5,"col_mat3_mul","","Multiplies two matrices."],[5,"col_mat4x3_mul","","Multiplies two matrices."],[5,"col_mat4_mul","","Multiplies two matrices."],[5,"row_mat2x3_mul","","Multiplies two matrices."],[5,"row_mat3_mul","","Multiplies two matrices."],[5,"row_mat3x4_mul","","Multiplies two matrices."],[5,"row_mat4_mul","","Multiplies two matrices."],[5,"mat2x3_id","","Constructs identity matrix."],[5,"mat3x2_id","","Constructs identity matrix."],[5,"mat3_id","","Constructs identity matrix."],[5,"mat3x4_id","","Constructs identity matrix."],[5,"mat4x3_id","","Constructs identity matrix."],[5,"mat4_id","","Constructs identity matrix."],[5,"vec2_cast","","Converts to another vector type."],[5,"vec3_cast","","Converts to another vector type."],[5,"vec4_cast","","Converts to another vector type."],[5,"mat2x3_cast","","Converts to another matrix type."],[5,"mat3x2_cast","","Converts to another matrix type."],[5,"mat3_cast","","Converts to another matrix type."],[5,"mat3x4_cast","","Converts to another matrix type."],[5,"mat4x3_cast","","Converts to another matrix type."],[5,"mat4_cast","","Converts to another matrix type."],[5,"vec2_sub","","Subtracts 'b' from 'a'."],[5,"vec3_sub","","Subtracts 'b' from 'a'."],[5,"vec4_sub","","Subtracts 'b' from 'a'."],[5,"mat2x3_sub","","Subtracts 'b' from 'a'."],[5,"mat3x2_sub","","Subtracts 'b' from 'a'."],[5,"mat3_sub","","Subtracts 'b' from 'a'."],[5,"mat3x4_sub","","Subtracts 'b' from 'a'."],[5,"mat4x3_sub","","Subtracts 'b' from 'a'."],[5,"mat4_sub","","Subtracts 'b' from 'a'."],[5,"vec2_add","","Adds two vectors."],[5,"vec3_add","","Adds two vectors."],[5,"vec4_add","","Adds two vectors."],[5,"mat2x3_add","","Adds two matrices."],[5,"mat3x2_add","","Adds two matrices."],[5,"mat3_add","","Adds two matrices."],[5,"mat3x4_add","","Adds two matrices."],[5,"mat4x3_add","","Adds two matrices."],[5,"mat4_add","","Adds two matrices."],[5,"vec2_mul","","Multiplies two vectors component wise."],[5,"vec3_mul","","Multiplies two vectors component wise."],[5,"vec4_mul","","Multiplies two vectors component wise."],[5,"vec2_dot","","Computes the dot product."],[5,"vec3_dot","","Computes the dot product."],[5,"vec4_dot","","Computes the dot product."],[5,"vec2_square_len","","Computes the square length of a vector."],[5,"vec3_square_len","","Computes the square length of a vector."],[5,"vec4_square_len","","Computes the square length of a vector."],[5,"vec2_cross","","Computes the cross product."],[5,"vec3_cross","","Computes the cross product."],[5,"vec2_scale","","Multiplies the vector with a scalar."],[5,"vec3_scale","","Multiplies the vector with a scalar."],[5,"vec4_scale","","Multiplies the vector with a scalar."],[5,"vec2_len","","Computes the length of vector."],[5,"vec3_len","","Computes the length of vector."],[5,"vec4_len","","Computes the length of vector."],[5,"vec2_inv_len","","Computes the inverse length of a vector."],[5,"vec3_inv_len","","Computes the inverse length of a vector."],[5,"vec4_inv_len","","Computes the inverse length of a vector."],[5,"vec2_normalized","","Computes the normalized."],[5,"vec3_normalized","","Computes the normalized."],[5,"vec4_normalized","","Computes the normalized."],[5,"vec2_normalized_sub","","Computes the normalized difference between two vectors."],[5,"vec3_normalized_sub","","Computes the normalized difference between two vectors."],[5,"vec4_normalized_sub","","Computes the normalized difference between two vectors."],[5,"vec3_dot_vec2","","Computes transformed vector component."],[5,"vec4_dot_vec3","","Computes transformed vector component."],[5,"vec3_dot_pos2","","Computes transformed position component."],[5,"vec4_dot_pos3","","Computes transformed position component."],[5,"row_mat2x3_col","","Returns a column vector of a row matrix."],[5,"col_mat2x3_row","","Returns a row vector of a column matrix."],[5,"row_mat3x2_col","","Returns a column vector of a row matrix."],[5,"col_mat3x2_row","","Returns a row vector of a column matrix."],[5,"row_mat3_col","","Returns a column vector of a row matrix."],[5,"col_mat3_row","","Returns a row vector of a column matrix."],[5,"row_mat3x4_col","","Returns a column vector of a row matrix."],[5,"col_mat3x4_row","","Returns a row vector of a column matrix."],[5,"row_mat4x3_col","","Returns a column vector of a row matrix."],[5,"col_mat4x3_row","","Returns a column vector of a row matrix."],[5,"row_mat4_col","","Returns a column vector of a row matrix."],[5,"col_mat4_row","","Returns a row vector of a column matrix."],[5,"mat2x3_transposed","","Constructs the transpose of a matrix."],[5,"mat3x2_transposed","","Constructs the transpose of a matrix."],[5,"mat3_transposed","","Constructs the transpose of a matrix."],[5,"mat3x4_transposed","","Constructs the transpose of a matrix."],[5,"mat4x3_transposed","","Constructs the transpose of a matrix."],[5,"mat4_transposed","","Constructs the transpose of a matrix."],[5,"col_mat3_transform","","Transforms a 3D vector through a matrix."],[5,"col_mat4_transform","","Transforms a 4D vector through a matrix."],[5,"row_mat3_transform","","Transforms a 3D vector through a matrix."],[5,"row_mat4_transform","","Transforms a 4D vector through a matrix."],[5,"row_mat2x3_transform_pos2","","Transforms a 2D position through matrix."],[5,"col_mat3x2_transform_pos2","","Transforms a 2D position through matrix."],[5,"row_mat3_transform_pos2","","Transforms a 2D position through row matrix."],[5,"col_mat3_transform_pos2","","Transforms a 2D position through column matrix."],[5,"row_mat3x4_transform_pos3","","Transforms a 3D position through matrix."],[5,"col_mat4x3_transform_pos3","","Transforms a 3D position through matrix."],[5,"row_mat2x3_transform_vec2","","Transforms a 2D vector through matrix."],[5,"col_mat3x2_transform_vec2","","Transforms a 2D vector through matrix."],[5,"row_mat3_transform_vec2","","Transforms a 2D vector through row matrix."],[5,"col_mat3_transform_vec2","","Transforms a 2D vector through column matrix."],[5,"row_mat3x4_transform_vec3","","Transforms a 3D vector through matrix."],[5,"col_mat4x3_transform_vec3","","Transforms a 3D vector through matrix."],[5,"mat2x3_det","","Computes the determinant of a matrix."],[5,"mat3x2_det","","Computes the determinant of a matrix."],[5,"mat3_det","","Computes the determinant of a matrix."],[5,"mat3x4_det","","Computes the determinant of a matrix."],[5,"mat4x3_det","","Computes the determinant of a matrix."],[5,"mat4_det","","Computes the determinant of a 4x4 matrix."],[5,"mat2x3_inv_det","","Computes inverse determinant of a 2x3 matrix."],[5,"mat3x2_inv_det","","Computes inverse determinant of a 3x2 matrix."],[5,"mat3_inv_det","","Computes inverse determinant of a 3x3 matrix."],[5,"mat3x4_inv_det","","Computes inverse determinant of a 3x4 matrix."],[5,"mat4x3_inv_det","","Computes inverse determinant of a 4x3 matrix."],[5,"mat4_inv_det","","Computes the inverse determinant of a 4x4 matrix."],[5,"mat2x3_inv","","Computes the inverse of a 2x3 matrix."],[5,"mat3x2_inv","","Computes the inverse of a 3x2 matrix."],[5,"mat3_inv","","Computes the inverse of a 3x3 matrix."],[5,"mat3x4_inv","","Computes the inverse of a 3x4 matrix."],[5,"mat4x3_inv","","Computes the inverse of a 4x3 matrix."],[5,"mat4_inv","","Computes the inverse of a 4x4 matrix."],[0,"consts","","Various useful constants"],[8,"Radians","vecmath::consts","Useful constants for radians."],[10,"_90","","Returns radians corresponding to 90 degrees.",0],[10,"_180","","Returns radians corresponding to 180 degrees.",0],[10,"_360","","Returns radians corresponding to 360 degrees.",0],[10,"deg_to_rad","","Convert a value to radians from degrees.\nEquivalent to ```value * (π / 180)```.",0],[6,"Vector2","vecmath","A 2D vector."],[6,"Vector3","","A 3D vector."],[6,"Vector4","","A 4D vector."],[6,"Matrix2x3","","A 2x3 matrix."],[6,"Matrix3x2","","A 3x2 matrix."],[6,"Matrix3","","A 3x3 matrix."],[6,"Matrix3x4","","A 3x4 matrix."],[6,"Matrix4x3","","A 4x3 matrix."],[6,"Matrix4","","A 4x4 matrix."]],"paths":[[8,"Radians"]]};

searchIndex['sdl2-sys'] = {"items":[[0,"","sdl2-sys",""],[0,"scancode","",""],[6,"SDL_Scancode","sdl2-sys::scancode",""],[17,"SDL_SCANCODE_UNKNOWN","",""],[17,"SDL_SCANCODE_A","",""],[17,"SDL_SCANCODE_B","",""],[17,"SDL_SCANCODE_C","",""],[17,"SDL_SCANCODE_D","",""],[17,"SDL_SCANCODE_E","",""],[17,"SDL_SCANCODE_F","",""],[17,"SDL_SCANCODE_G","",""],[17,"SDL_SCANCODE_H","",""],[17,"SDL_SCANCODE_I","",""],[17,"SDL_SCANCODE_J","",""],[17,"SDL_SCANCODE_K","",""],[17,"SDL_SCANCODE_L","",""],[17,"SDL_SCANCODE_M","",""],[17,"SDL_SCANCODE_N","",""],[17,"SDL_SCANCODE_O","",""],[17,"SDL_SCANCODE_P","",""],[17,"SDL_SCANCODE_Q","",""],[17,"SDL_SCANCODE_R","",""],[17,"SDL_SCANCODE_S","",""],[17,"SDL_SCANCODE_T","",""],[17,"SDL_SCANCODE_U","",""],[17,"SDL_SCANCODE_V","",""],[17,"SDL_SCANCODE_W","",""],[17,"SDL_SCANCODE_X","",""],[17,"SDL_SCANCODE_Y","",""],[17,"SDL_SCANCODE_Z","",""],[17,"SDL_SCANCODE_1","",""],[17,"SDL_SCANCODE_2","",""],[17,"SDL_SCANCODE_3","",""],[17,"SDL_SCANCODE_4","",""],[17,"SDL_SCANCODE_5","",""],[17,"SDL_SCANCODE_6","",""],[17,"SDL_SCANCODE_7","",""],[17,"SDL_SCANCODE_8","",""],[17,"SDL_SCANCODE_9","",""],[17,"SDL_SCANCODE_0","",""],[17,"SDL_SCANCODE_RETURN","",""],[17,"SDL_SCANCODE_ESCAPE","",""],[17,"SDL_SCANCODE_BACKSPACE","",""],[17,"SDL_SCANCODE_TAB","",""],[17,"SDL_SCANCODE_SPACE","",""],[17,"SDL_SCANCODE_MINUS","",""],[17,"SDL_SCANCODE_EQUALS","",""],[17,"SDL_SCANCODE_LEFTBRACKET","",""],[17,"SDL_SCANCODE_RIGHTBRACKET","",""],[17,"SDL_SCANCODE_BACKSLASH","",""],[17,"SDL_SCANCODE_NONUSHASH","",""],[17,"SDL_SCANCODE_SEMICOLON","",""],[17,"SDL_SCANCODE_APOSTROPHE","",""],[17,"SDL_SCANCODE_GRAVE","",""],[17,"SDL_SCANCODE_COMMA","",""],[17,"SDL_SCANCODE_PERIOD","",""],[17,"SDL_SCANCODE_SLASH","",""],[17,"SDL_SCANCODE_CAPSLOCK","",""],[17,"SDL_SCANCODE_F1","",""],[17,"SDL_SCANCODE_F2","",""],[17,"SDL_SCANCODE_F3","",""],[17,"SDL_SCANCODE_F4","",""],[17,"SDL_SCANCODE_F5","",""],[17,"SDL_SCANCODE_F6","",""],[17,"SDL_SCANCODE_F7","",""],[17,"SDL_SCANCODE_F8","",""],[17,"SDL_SCANCODE_F9","",""],[17,"SDL_SCANCODE_F10","",""],[17,"SDL_SCANCODE_F11","",""],[17,"SDL_SCANCODE_F12","",""],[17,"SDL_SCANCODE_PRINTSCREEN","",""],[17,"SDL_SCANCODE_SCROLLLOCK","",""],[17,"SDL_SCANCODE_PAUSE","",""],[17,"SDL_SCANCODE_INSERT","",""],[17,"SDL_SCANCODE_HOME","",""],[17,"SDL_SCANCODE_PAGEUP","",""],[17,"SDL_SCANCODE_DELETE","",""],[17,"SDL_SCANCODE_END","",""],[17,"SDL_SCANCODE_PAGEDOWN","",""],[17,"SDL_SCANCODE_RIGHT","",""],[17,"SDL_SCANCODE_LEFT","",""],[17,"SDL_SCANCODE_DOWN","",""],[17,"SDL_SCANCODE_UP","",""],[17,"SDL_SCANCODE_NUMLOCKCLEAR","",""],[17,"SDL_SCANCODE_KP_DIVIDE","",""],[17,"SDL_SCANCODE_KP_MULTIPLY","",""],[17,"SDL_SCANCODE_KP_MINUS","",""],[17,"SDL_SCANCODE_KP_PLUS","",""],[17,"SDL_SCANCODE_KP_ENTER","",""],[17,"SDL_SCANCODE_KP_1","",""],[17,"SDL_SCANCODE_KP_2","",""],[17,"SDL_SCANCODE_KP_3","",""],[17,"SDL_SCANCODE_KP_4","",""],[17,"SDL_SCANCODE_KP_5","",""],[17,"SDL_SCANCODE_KP_6","",""],[17,"SDL_SCANCODE_KP_7","",""],[17,"SDL_SCANCODE_KP_8","",""],[17,"SDL_SCANCODE_KP_9","",""],[17,"SDL_SCANCODE_KP_0","",""],[17,"SDL_SCANCODE_KP_PERIOD","",""],[17,"SDL_SCANCODE_NONUSBACKSLASH","",""],[17,"SDL_SCANCODE_APPLICATION","",""],[17,"SDL_SCANCODE_POWER","",""],[17,"SDL_SCANCODE_KP_EQUALS","",""],[17,"SDL_SCANCODE_F13","",""],[17,"SDL_SCANCODE_F14","",""],[17,"SDL_SCANCODE_F15","",""],[17,"SDL_SCANCODE_F16","",""],[17,"SDL_SCANCODE_F17","",""],[17,"SDL_SCANCODE_F18","",""],[17,"SDL_SCANCODE_F19","",""],[17,"SDL_SCANCODE_F20","",""],[17,"SDL_SCANCODE_F21","",""],[17,"SDL_SCANCODE_F22","",""],[17,"SDL_SCANCODE_F23","",""],[17,"SDL_SCANCODE_F24","",""],[17,"SDL_SCANCODE_EXECUTE","",""],[17,"SDL_SCANCODE_HELP","",""],[17,"SDL_SCANCODE_MENU","",""],[17,"SDL_SCANCODE_SELECT","",""],[17,"SDL_SCANCODE_STOP","",""],[17,"SDL_SCANCODE_AGAIN","",""],[17,"SDL_SCANCODE_UNDO","",""],[17,"SDL_SCANCODE_CUT","",""],[17,"SDL_SCANCODE_COPY","",""],[17,"SDL_SCANCODE_PASTE","",""],[17,"SDL_SCANCODE_FIND","",""],[17,"SDL_SCANCODE_MUTE","",""],[17,"SDL_SCANCODE_VOLUMEUP","",""],[17,"SDL_SCANCODE_VOLUMEDOWN","",""],[17,"SDL_SCANCODE_KP_COMMA","",""],[17,"SDL_SCANCODE_KP_EQUALSAS400","",""],[17,"SDL_SCANCODE_INTERNATIONAL1","",""],[17,"SDL_SCANCODE_INTERNATIONAL2","",""],[17,"SDL_SCANCODE_INTERNATIONAL3","",""],[17,"SDL_SCANCODE_INTERNATIONAL4","",""],[17,"SDL_SCANCODE_INTERNATIONAL5","",""],[17,"SDL_SCANCODE_INTERNATIONAL6","",""],[17,"SDL_SCANCODE_INTERNATIONAL7","",""],[17,"SDL_SCANCODE_INTERNATIONAL8","",""],[17,"SDL_SCANCODE_INTERNATIONAL9","",""],[17,"SDL_SCANCODE_LANG1","",""],[17,"SDL_SCANCODE_LANG2","",""],[17,"SDL_SCANCODE_LANG3","",""],[17,"SDL_SCANCODE_LANG4","",""],[17,"SDL_SCANCODE_LANG5","",""],[17,"SDL_SCANCODE_LANG6","",""],[17,"SDL_SCANCODE_LANG7","",""],[17,"SDL_SCANCODE_LANG8","",""],[17,"SDL_SCANCODE_LANG9","",""],[17,"SDL_SCANCODE_ALTERASE","",""],[17,"SDL_SCANCODE_SYSREQ","",""],[17,"SDL_SCANCODE_CANCEL","",""],[17,"SDL_SCANCODE_CLEAR","",""],[17,"SDL_SCANCODE_PRIOR","",""],[17,"SDL_SCANCODE_RETURN2","",""],[17,"SDL_SCANCODE_SEPARATOR","",""],[17,"SDL_SCANCODE_OUT","",""],[17,"SDL_SCANCODE_OPER","",""],[17,"SDL_SCANCODE_CLEARAGAIN","",""],[17,"SDL_SCANCODE_CRSEL","",""],[17,"SDL_SCANCODE_EXSEL","",""],[17,"SDL_SCANCODE_KP_00","",""],[17,"SDL_SCANCODE_KP_000","",""],[17,"SDL_SCANCODE_THOUSANDSSEPARATOR","",""],[17,"SDL_SCANCODE_DECIMALSEPARATOR","",""],[17,"SDL_SCANCODE_CURRENCYUNIT","",""],[17,"SDL_SCANCODE_CURRENCYSUBUNIT","",""],[17,"SDL_SCANCODE_KP_LEFTPAREN","",""],[17,"SDL_SCANCODE_KP_RIGHTPAREN","",""],[17,"SDL_SCANCODE_KP_LEFTBRACE","",""],[17,"SDL_SCANCODE_KP_RIGHTBRACE","",""],[17,"SDL_SCANCODE_KP_TAB","",""],[17,"SDL_SCANCODE_KP_BACKSPACE","",""],[17,"SDL_SCANCODE_KP_A","",""],[17,"SDL_SCANCODE_KP_B","",""],[17,"SDL_SCANCODE_KP_C","",""],[17,"SDL_SCANCODE_KP_D","",""],[17,"SDL_SCANCODE_KP_E","",""],[17,"SDL_SCANCODE_KP_F","",""],[17,"SDL_SCANCODE_KP_XOR","",""],[17,"SDL_SCANCODE_KP_POWER","",""],[17,"SDL_SCANCODE_KP_PERCENT","",""],[17,"SDL_SCANCODE_KP_LESS","",""],[17,"SDL_SCANCODE_KP_GREATER","",""],[17,"SDL_SCANCODE_KP_AMPERSAND","",""],[17,"SDL_SCANCODE_KP_DBLAMPERSAND","",""],[17,"SDL_SCANCODE_KP_VERTICALBAR","",""],[17,"SDL_SCANCODE_KP_DBLVERTICALBAR","",""],[17,"SDL_SCANCODE_KP_COLON","",""],[17,"SDL_SCANCODE_KP_HASH","",""],[17,"SDL_SCANCODE_KP_SPACE","",""],[17,"SDL_SCANCODE_KP_AT","",""],[17,"SDL_SCANCODE_KP_EXCLAM","",""],[17,"SDL_SCANCODE_KP_MEMSTORE","",""],[17,"SDL_SCANCODE_KP_MEMRECALL","",""],[17,"SDL_SCANCODE_KP_MEMCLEAR","",""],[17,"SDL_SCANCODE_KP_MEMADD","",""],[17,"SDL_SCANCODE_KP_MEMSUBTRACT","",""],[17,"SDL_SCANCODE_KP_MEMMULTIPLY","",""],[17,"SDL_SCANCODE_KP_MEMDIVIDE","",""],[17,"SDL_SCANCODE_KP_PLUSMINUS","",""],[17,"SDL_SCANCODE_KP_CLEAR","",""],[17,"SDL_SCANCODE_KP_CLEARENTRY","",""],[17,"SDL_SCANCODE_KP_BINARY","",""],[17,"SDL_SCANCODE_KP_OCTAL","",""],[17,"SDL_SCANCODE_KP_DECIMAL","",""],[17,"SDL_SCANCODE_KP_HEXADECIMAL","",""],[17,"SDL_SCANCODE_LCTRL","",""],[17,"SDL_SCANCODE_LSHIFT","",""],[17,"SDL_SCANCODE_LALT","",""],[17,"SDL_SCANCODE_LGUI","",""],[17,"SDL_SCANCODE_RCTRL","",""],[17,"SDL_SCANCODE_RSHIFT","",""],[17,"SDL_SCANCODE_RALT","",""],[17,"SDL_SCANCODE_RGUI","",""],[17,"SDL_SCANCODE_MODE","",""],[17,"SDL_SCANCODE_AUDIONEXT","",""],[17,"SDL_SCANCODE_AUDIOPREV","",""],[17,"SDL_SCANCODE_AUDIOSTOP","",""],[17,"SDL_SCANCODE_AUDIOPLAY","",""],[17,"SDL_SCANCODE_AUDIOMUTE","",""],[17,"SDL_SCANCODE_MEDIASELECT","",""],[17,"SDL_SCANCODE_WWW","",""],[17,"SDL_SCANCODE_MAIL","",""],[17,"SDL_SCANCODE_CALCULATOR","",""],[17,"SDL_SCANCODE_COMPUTER","",""],[17,"SDL_SCANCODE_AC_SEARCH","",""],[17,"SDL_SCANCODE_AC_HOME","",""],[17,"SDL_SCANCODE_AC_BACK","",""],[17,"SDL_SCANCODE_AC_FORWARD","",""],[17,"SDL_SCANCODE_AC_STOP","",""],[17,"SDL_SCANCODE_AC_REFRESH","",""],[17,"SDL_SCANCODE_AC_BOOKMARKS","",""],[17,"SDL_SCANCODE_BRIGHTNESSDOWN","",""],[17,"SDL_SCANCODE_BRIGHTNESSUP","",""],[17,"SDL_SCANCODE_DISPLAYSWITCH","",""],[17,"SDL_SCANCODE_KBDILLUMTOGGLE","",""],[17,"SDL_SCANCODE_KBDILLUMDOWN","",""],[17,"SDL_SCANCODE_KBDILLUMUP","",""],[17,"SDL_SCANCODE_EJECT","",""],[17,"SDL_SCANCODE_SLEEP","",""],[17,"SDL_SCANCODE_APP1","",""],[17,"SDL_SCANCODE_APP2","",""],[17,"SDL_NUM_SCANCODES","",""],[0,"keycode","sdl2-sys",""],[6,"SDL_Keycode","sdl2-sys::keycode",""],[6,"SDL_Keymod","",""],[17,"SDLK_UNKNOWN","",""],[17,"SDLK_BACKSPACE","",""],[17,"SDLK_TAB","",""],[17,"SDLK_RETURN","",""],[17,"SDLK_ESCAPE","",""],[17,"SDLK_SPACE","",""],[17,"SDLK_EXCLAIM","",""],[17,"SDLK_QUOTEDBL","",""],[17,"SDLK_HASH","",""],[17,"SDLK_DOLLAR","",""],[17,"SDLK_PERCENT","",""],[17,"SDLK_AMPERSAND","",""],[17,"SDLK_QUOTE","",""],[17,"SDLK_LEFTPAREN","",""],[17,"SDLK_RIGHTPAREN","",""],[17,"SDLK_ASTERISK","",""],[17,"SDLK_PLUS","",""],[17,"SDLK_COMMA","",""],[17,"SDLK_MINUS","",""],[17,"SDLK_PERIOD","",""],[17,"SDLK_SLASH","",""],[17,"SDLK_0","",""],[17,"SDLK_1","",""],[17,"SDLK_2","",""],[17,"SDLK_3","",""],[17,"SDLK_4","",""],[17,"SDLK_5","",""],[17,"SDLK_6","",""],[17,"SDLK_7","",""],[17,"SDLK_8","",""],[17,"SDLK_9","",""],[17,"SDLK_COLON","",""],[17,"SDLK_SEMICOLON","",""],[17,"SDLK_LESS","",""],[17,"SDLK_EQUALS","",""],[17,"SDLK_GREATER","",""],[17,"SDLK_QUESTION","",""],[17,"SDLK_AT","",""],[17,"SDLK_LEFTBRACKET","",""],[17,"SDLK_BACKSLASH","",""],[17,"SDLK_RIGHTBRACKET","",""],[17,"SDLK_CARET","",""],[17,"SDLK_UNDERSCORE","",""],[17,"SDLK_BACKQUOTE","",""],[17,"SDLK_a","",""],[17,"SDLK_b","",""],[17,"SDLK_c","",""],[17,"SDLK_d","",""],[17,"SDLK_e","",""],[17,"SDLK_f","",""],[17,"SDLK_g","",""],[17,"SDLK_h","",""],[17,"SDLK_i","",""],[17,"SDLK_j","",""],[17,"SDLK_k","",""],[17,"SDLK_l","",""],[17,"SDLK_m","",""],[17,"SDLK_n","",""],[17,"SDLK_o","",""],[17,"SDLK_p","",""],[17,"SDLK_q","",""],[17,"SDLK_r","",""],[17,"SDLK_s","",""],[17,"SDLK_t","",""],[17,"SDLK_u","",""],[17,"SDLK_v","",""],[17,"SDLK_w","",""],[17,"SDLK_x","",""],[17,"SDLK_y","",""],[17,"SDLK_z","",""],[17,"SDLK_DELETE","",""],[17,"SDLK_CAPSLOCK","",""],[17,"SDLK_F1","",""],[17,"SDLK_F2","",""],[17,"SDLK_F3","",""],[17,"SDLK_F4","",""],[17,"SDLK_F5","",""],[17,"SDLK_F6","",""],[17,"SDLK_F7","",""],[17,"SDLK_F8","",""],[17,"SDLK_F9","",""],[17,"SDLK_F10","",""],[17,"SDLK_F11","",""],[17,"SDLK_F12","",""],[17,"SDLK_PRINTSCREEN","",""],[17,"SDLK_SCROLLLOCK","",""],[17,"SDLK_PAUSE","",""],[17,"SDLK_INSERT","",""],[17,"SDLK_HOME","",""],[17,"SDLK_PAGEUP","",""],[17,"SDLK_END","",""],[17,"SDLK_PAGEDOWN","",""],[17,"SDLK_RIGHT","",""],[17,"SDLK_LEFT","",""],[17,"SDLK_DOWN","",""],[17,"SDLK_UP","",""],[17,"SDLK_NUMLOCKCLEAR","",""],[17,"SDLK_KPDIVIDE","",""],[17,"SDLK_KPMULTIPLY","",""],[17,"SDLK_KPMINUS","",""],[17,"SDLK_KPPLUS","",""],[17,"SDLK_KPENTER","",""],[17,"SDLK_KP1","",""],[17,"SDLK_KP2","",""],[17,"SDLK_KP3","",""],[17,"SDLK_KP4","",""],[17,"SDLK_KP5","",""],[17,"SDLK_KP6","",""],[17,"SDLK_KP7","",""],[17,"SDLK_KP8","",""],[17,"SDLK_KP9","",""],[17,"SDLK_KP0","",""],[17,"SDLK_KPPERIOD","",""],[17,"SDLK_APPLICATION","",""],[17,"SDLK_POWER","",""],[17,"SDLK_KPEQUALS","",""],[17,"SDLK_F13","",""],[17,"SDLK_F14","",""],[17,"SDLK_F15","",""],[17,"SDLK_F16","",""],[17,"SDLK_F17","",""],[17,"SDLK_F18","",""],[17,"SDLK_F19","",""],[17,"SDLK_F20","",""],[17,"SDLK_F21","",""],[17,"SDLK_F22","",""],[17,"SDLK_F23","",""],[17,"SDLK_F24","",""],[17,"SDLK_EXECUTE","",""],[17,"SDLK_HELP","",""],[17,"SDLK_MENU","",""],[17,"SDLK_SELECT","",""],[17,"SDLK_STOP","",""],[17,"SDLK_AGAIN","",""],[17,"SDLK_UNDO","",""],[17,"SDLK_CUT","",""],[17,"SDLK_COPY","",""],[17,"SDLK_PASTE","",""],[17,"SDLK_FIND","",""],[17,"SDLK_MUTE","",""],[17,"SDLK_VOLUMEUP","",""],[17,"SDLK_VOLUMEDOWN","",""],[17,"SDLK_KPCOMMA","",""],[17,"SDLK_KPEQUALSAS400","",""],[17,"SDLK_ALTERASE","",""],[17,"SDLK_SYSREQ","",""],[17,"SDLK_CANCEL","",""],[17,"SDLK_CLEAR","",""],[17,"SDLK_PRIOR","",""],[17,"SDLK_RETURN2","",""],[17,"SDLK_SEPARATOR","",""],[17,"SDLK_OUT","",""],[17,"SDLK_OPER","",""],[17,"SDLK_CLEARAGAIN","",""],[17,"SDLK_CRSEL","",""],[17,"SDLK_EXSEL","",""],[17,"SDLK_KP00","",""],[17,"SDLK_KP000","",""],[17,"SDLK_THOUSANDSSEPARATOR","",""],[17,"SDLK_DECIMALSEPARATOR","",""],[17,"SDLK_CURRENCYUNIT","",""],[17,"SDLK_CURRENCYSUBUNIT","",""],[17,"SDLK_KPLEFTPAREN","",""],[17,"SDLK_KPRIGHTPAREN","",""],[17,"SDLK_KPLEFTBRACE","",""],[17,"SDLK_KPRIGHTBRACE","",""],[17,"SDLK_KPTAB","",""],[17,"SDLK_KPBACKSPACE","",""],[17,"SDLK_KPA","",""],[17,"SDLK_KPB","",""],[17,"SDLK_KPC","",""],[17,"SDLK_KPD","",""],[17,"SDLK_KPE","",""],[17,"SDLK_KPF","",""],[17,"SDLK_KPXOR","",""],[17,"SDLK_KPPOWER","",""],[17,"SDLK_KPPERCENT","",""],[17,"SDLK_KPLESS","",""],[17,"SDLK_KPGREATER","",""],[17,"SDLK_KPAMPERSAND","",""],[17,"SDLK_KPDBLAMPERSAND","",""],[17,"SDLK_KPVERTICALBAR","",""],[17,"SDLK_KPDBLVERTICALBAR","",""],[17,"SDLK_KPCOLON","",""],[17,"SDLK_KPHASH","",""],[17,"SDLK_KPSPACE","",""],[17,"SDLK_KPAT","",""],[17,"SDLK_KPEXCLAM","",""],[17,"SDLK_KPMEMSTORE","",""],[17,"SDLK_KPMEMRECALL","",""],[17,"SDLK_KPMEMCLEAR","",""],[17,"SDLK_KPMEMADD","",""],[17,"SDLK_KPMEMSUBTRACT","",""],[17,"SDLK_KPMEMMULTIPLY","",""],[17,"SDLK_KPMEMDIVIDE","",""],[17,"SDLK_KPPLUSMINUS","",""],[17,"SDLK_KPCEAR","",""],[17,"SDLK_KPCLEARENTRY","",""],[17,"SDLK_KPBINARY","",""],[17,"SDLK_KPOCTAL","",""],[17,"SDLK_KPDECIMAL","",""],[17,"SDLK_KPHEXADECIMAL","",""],[17,"SDLK_LCTRL","",""],[17,"SDLK_LSHIFT","",""],[17,"SDLK_LALT","",""],[17,"SDLK_LGUI","",""],[17,"SDLK_RCTRL","",""],[17,"SDLK_RSHIFT","",""],[17,"SDLK_RALT","",""],[17,"SDLK_RGUI","",""],[17,"SDLK_MODE","",""],[17,"SDLK_AUDIONEXT","",""],[17,"SDLK_AUDIOPREV","",""],[17,"SDLK_AUDIOSTOP","",""],[17,"SDLK_AUDIOPLAY","",""],[17,"SDLK_AUDIOMUTE","",""],[17,"SDLK_MEDIASELECT","",""],[17,"SDLK_WWW","",""],[17,"SDLK_MAIL","",""],[17,"SDLK_CALCULATOR","",""],[17,"SDLK_COMPUTER","",""],[17,"SDLK_ACSEARCH","",""],[17,"SDLK_ACHOME","",""],[17,"SDLK_ACBACK","",""],[17,"SDLK_ACFORWARD","",""],[17,"SDLK_ACSTOP","",""],[17,"SDLK_ACREFRESH","",""],[17,"SDLK_ACBOOKMARKS","",""],[17,"SDLK_BRIGHTNESSDOWN","",""],[17,"SDLK_BRIGHTNESSUP","",""],[17,"SDLK_DISPLAYSWITCH","",""],[17,"SDLK_KBDILLUMTOGGLE","",""],[17,"SDLK_KBDILLUMDOWN","",""],[17,"SDLK_KBDILLUMUP","",""],[17,"SDLK_EJECT","",""],[17,"SDLK_SLEEP","",""],[17,"KMOD_NONE","",""],[17,"KMOD_LSHIFT","",""],[17,"KMOD_RSHIFT","",""],[17,"KMOD_LCTRL","",""],[17,"KMOD_RCTRL","",""],[17,"KMOD_LALT","",""],[17,"KMOD_RALT","",""],[17,"KMOD_LGUI","",""],[17,"KMOD_RGUI","",""],[17,"KMOD_NUM","",""],[17,"KMOD_CAPS","",""],[17,"KMOD_MODE","",""],[17,"KMOD_RESERVED","",""],[0,"audio","sdl2-sys",""],[3,"SDL_AudioSpec","sdl2-sys::audio",""],[12,"freq","","",0],[12,"format","","",0],[12,"channels","","",0],[12,"silence","","",0],[12,"samples","","",0],[12,"padding","","",0],[12,"size","","",0],[12,"callback","","",0],[12,"userdata","","",0],[3,"SDL_AudioCVT","",""],[12,"needed","","",1],[12,"src_format","","",1],[12,"dst_format","","",1],[12,"rate_incr","","",1],[12,"buf","","",1],[12,"len","","",1],[12,"len_cvt","","",1],[12,"len_mult","","",1],[12,"len_ratio","","",1],[5,"SDL_GetNumAudioDrivers","",""],[5,"SDL_GetAudioDriver","",""],[5,"SDL_AudioInit","",""],[5,"SDL_AudioQuit","",""],[5,"SDL_GetCurrentAudioDriver","",""],[5,"SDL_OpenAudio","",""],[5,"SDL_GetNumAudioDevices","",""],[5,"SDL_GetAudioDeviceName","",""],[5,"SDL_OpenAudioDevice","",""],[5,"SDL_GetAudioStatus","",""],[5,"SDL_GetAudioDeviceStatus","",""],[5,"SDL_PauseAudio","",""],[5,"SDL_PauseAudioDevice","",""],[5,"SDL_LoadWAV_RW","",""],[5,"SDL_FreeWAV","",""],[5,"SDL_BuildAudioCVT","",""],[5,"SDL_ConvertAudio","",""],[5,"SDL_MixAudio","",""],[5,"SDL_MixAudioFormat","",""],[5,"SDL_LockAudio","",""],[5,"SDL_LockAudioDevice","",""],[5,"SDL_UnlockAudio","",""],[5,"SDL_UnlockAudioDevice","",""],[5,"SDL_CloseAudio","",""],[5,"SDL_CloseAudioDevice","",""],[6,"SDL_AudioFormat","",""],[6,"SDL_AudioCallback","",""],[6,"SDL_AudioFilter","",""],[6,"SDL_AudioDeviceID","",""],[6,"SDL_AudioStatus","",""],[17,"AUDIO_U8","",""],[17,"AUDIO_S8","",""],[17,"AUDIO_U16LSB","",""],[17,"AUDIO_S16LSB","",""],[17,"AUDIO_U16MSB","",""],[17,"AUDIO_S16MSB","",""],[17,"AUDIO_U16","",""],[17,"AUDIO_S16","",""],[17,"AUDIO_S32LSB","",""],[17,"AUDIO_S32MSB","",""],[17,"AUDIO_S32","",""],[17,"AUDIO_F32LSB","",""],[17,"AUDIO_F32MSB","",""],[17,"AUDIO_F32","",""],[17,"AUDIO_U16SYS","",""],[17,"AUDIO_S16SYS","",""],[17,"AUDIO_S32SYS","",""],[17,"AUDIO_F32SYS","",""],[17,"SDL_AUDIO_STOPPED","",""],[17,"SDL_AUDIO_PLAYING","",""],[17,"SDL_AUDIO_PAUSED","",""],[0,"clipboard","sdl2-sys",""],[5,"SDL_SetClipboardText","sdl2-sys::clipboard",""],[5,"SDL_GetClipboardText","",""],[5,"SDL_HasClipboardText","",""],[6,"SDL_bool","",""],[0,"controller","sdl2-sys",""],[3,"SDL_GameControllerButtonBind","sdl2-sys::controller",""],[3,"SDL_GameControllerButtonBindData","",""],[3,"SDL_GameControllerButtonBindDataHat","",""],[5,"SDL_GameControllerAddMapping","",""],[5,"SDL_GameControllerMappingForGUID","",""],[5,"SDL_GameControllerMapping","",""],[5,"SDL_IsGameController","",""],[5,"SDL_GameControllerNameForIndex","",""],[5,"SDL_GameControllerOpen","",""],[5,"SDL_GameControllerName","",""],[5,"SDL_GameControllerGetAttached","",""],[5,"SDL_GameControllerGetJoystick","",""],[5,"SDL_GameControllerEventState","",""],[5,"SDL_GameControllerUpdate","",""],[5,"SDL_GameControllerGetAxisFromString","",""],[5,"SDL_GameControllerGetStringForAxis","",""],[5,"SDL_GameControllerGetBindForAxis","",""],[5,"SDL_GameControllerGetAxis","",""],[5,"SDL_GameControllerGetButtonFromString","",""],[5,"SDL_GameControllerGetStringForButton","",""],[5,"SDL_GameControllerGetBindForButton","",""],[5,"SDL_GameControllerGetButton","",""],[5,"SDL_GameControllerClose","",""],[6,"SDL_bool","",""],[6,"SDL_GameController","",""],[6,"SDL_GameControllerBindType","",""],[6,"SDL_GameControllerAxis","",""],[6,"SDL_GameControllerButton","",""],[17,"SDL_CONTROLLER_BINDTYPE_NONE","",""],[17,"SDL_CONTROLLER_BINDTYPE_BUTTON","",""],[17,"SDL_CONTROLLER_BINDTYPE_AXIS","",""],[17,"SDL_CONTROLLER_BINDTYPE_HAT","",""],[17,"SDL_CONTROLLER_AXIS_INVALID","",""],[17,"SDL_CONTROLLER_AXIS_LEFTX","",""],[17,"SDL_CONTROLLER_AXIS_LEFTY","",""],[17,"SDL_CONTROLLER_AXIS_RIGHTX","",""],[17,"SDL_CONTROLLER_AXIS_RIGHTY","",""],[17,"SDL_CONTROLLER_AXIS_TRIGGERLEFT","",""],[17,"SDL_CONTROLLER_AXIS_TRIGGERRIGHT","",""],[17,"SDL_CONTROLLER_AXIS_MAX","",""],[17,"SDL_CONTROLLER_BUTTON_INVALID","",""],[17,"SDL_CONTROLLER_BUTTON_A","",""],[17,"SDL_CONTROLLER_BUTTON_B","",""],[17,"SDL_CONTROLLER_BUTTON_X","",""],[17,"SDL_CONTROLLER_BUTTON_Y","",""],[17,"SDL_CONTROLLER_BUTTON_BACK","",""],[17,"SDL_CONTROLLER_BUTTON_GUIDE","",""],[17,"SDL_CONTROLLER_BUTTON_START","",""],[17,"SDL_CONTROLLER_BUTTON_LEFTSTICK","",""],[17,"SDL_CONTROLLER_BUTTON_RIGHTSTICK","",""],[17,"SDL_CONTROLLER_BUTTON_LEFTSHOULDER","",""],[17,"SDL_CONTROLLER_BUTTON_RIGHTSHOULDER","",""],[17,"SDL_CONTROLLER_BUTTON_DPAD_UP","",""],[17,"SDL_CONTROLLER_BUTTON_DPAD_DOWN","",""],[17,"SDL_CONTROLLER_BUTTON_DPAD_LEFT","",""],[17,"SDL_CONTROLLER_BUTTON_DPAD_RIGHT","",""],[17,"SDL_CONTROLLER_BUTTON_MAX","",""],[11,"clone","","",2],[11,"clone","","",3],[11,"clone","","",4],[11,"button","","",3],[11,"axis","","",3],[11,"hat","","",3],[0,"cpuinfo","sdl2-sys",""],[5,"SDL_GetCPUCount","sdl2-sys::cpuinfo",""],[5,"SDL_GetCPUCacheLineSize","",""],[5,"SDL_HasRDTSC","",""],[5,"SDL_HasAltiVec","",""],[5,"SDL_HasMMX","",""],[5,"SDL_Has3DNow","",""],[5,"SDL_HasSSE","",""],[5,"SDL_HasSSE2","",""],[5,"SDL_HasSSE3","",""],[5,"SDL_HasSSE41","",""],[5,"SDL_HasSSE42","",""],[5,"SDL_HasAVX","",""],[5,"SDL_GetSystemRAM","",""],[6,"SDL_bool","",""],[0,"filesystem","sdl2-sys",""],[5,"SDL_GetBasePath","sdl2-sys::filesystem",""],[5,"SDL_GetPrefPath","",""],[0,"haptic","sdl2-sys",""],[3,"SDL_HapticDirection","sdl2-sys::haptic",""],[12,"_type","","",5],[12,"dir","","",5],[3,"SDL_HapticConstant","",""],[12,"_type","","",6],[12,"direction","","",6],[12,"length","","",6],[12,"delay","","",6],[12,"button","","",6],[12,"interval","","",6],[12,"level","","",6],[12,"attack_length","","",6],[12,"attack_level","","",6],[12,"fade_length","","",6],[12,"fade_level","","",6],[3,"SDL_HapticPeriodic","",""],[12,"_type","","",7],[12,"direction","","",7],[12,"length","","",7],[12,"delay","","",7],[12,"button","","",7],[12,"interval","","",7],[12,"period","","",7],[12,"magnitude","","",7],[12,"offset","","",7],[12,"phase","","",7],[12,"attack_length","","",7],[12,"attack_level","","",7],[12,"fade_length","","",7],[12,"fade_level","","",7],[3,"SDL_HapticCondition","",""],[12,"_type","","",8],[12,"direction","","",8],[12,"length","","",8],[12,"delay","","",8],[12,"button","","",8],[12,"interval","","",8],[12,"right_sat","","",8],[12,"left_sat","","",8],[12,"right_coeff","","",8],[12,"left_coeff","","",8],[12,"deadband","","",8],[12,"center","","",8],[3,"SDL_HapticRamp","",""],[12,"_type","","",9],[12,"length","","",9],[12,"delay","","",9],[12,"button","","",9],[12,"interval","","",9],[12,"start","","",9],[12,"end","","",9],[12,"attack_length","","",9],[12,"attack_level","","",9],[12,"fade_length","","",9],[12,"fade_level","","",9],[3,"SDL_HapticLeftRight","",""],[12,"_type","","",10],[12,"length","","",10],[12,"large_magnitude","","",10],[12,"small_magnitude","","",10],[3,"SDL_HapticCustom","",""],[12,"_type","","",11],[12,"direction","","",11],[12,"length","","",11],[12,"delay","","",11],[12,"button","","",11],[12,"interval","","",11],[12,"channels","","",11],[12,"period","","",11],[12,"samples","","",11],[12,"data","","",11],[12,"attack_length","","",11],[12,"attack_level","","",11],[12,"fade_length","","",11],[12,"fade_level","","",11],[3,"SDL_HapticEffect","",""],[12,"data","","",12],[5,"SDL_NumHaptics","",""],[5,"SDL_HapticName","",""],[5,"SDL_HapticOpen","",""],[5,"SDL_HapticOpened","",""],[5,"SDL_HapticIndex","",""],[5,"SDL_MouseIsHaptic","",""],[5,"SDL_HapticOpenFromMouse","",""],[5,"SDL_JoystickIsHaptic","",""],[5,"SDL_HapticOpenFromJoystick","",""],[5,"SDL_HapticClose","",""],[5,"SDL_HapticNumEffects","",""],[5,"SDL_HapticNumEffectsPlaying","",""],[5,"SDL_HapticQuery","",""],[5,"SDL_HapticNumAxes","",""],[5,"SDL_HapticEffectSupported","",""],[5,"SDL_HapticNewEffect","",""],[5,"SDL_HapticUpdateEffect","",""],[5,"SDL_HapticRunEffect","",""],[5,"SDL_HapticStopEffect","",""],[5,"SDL_HapticDestroyEffect","",""],[5,"SDL_HapticGetEffectStatus","",""],[5,"SDL_HapticSetGain","",""],[5,"SDL_HapticSetAutocenter","",""],[5,"SDL_HapticPause","",""],[5,"SDL_HapticUnpause","",""],[5,"SDL_HapticStopAll","",""],[5,"SDL_HapticRumbleSupported","",""],[5,"SDL_HapticRumbleInit","",""],[5,"SDL_HapticRumblePlay","",""],[5,"SDL_HapticRumbleStop","",""],[6,"SDL_Haptic","",""],[17,"SDL_HAPTIC_CONSTANT","",""],[17,"SDL_HAPTIC_SINE","",""],[17,"SDL_HAPTIC_LEFTRIGHT","",""],[17,"SDL_HAPTIC_TRIANGLE","",""],[17,"SDL_HAPTIC_SAWTOOTHUP","",""],[17,"SDL_HAPTIC_SAWTOOTHDOWN","",""],[17,"SDL_HAPTIC_RAMP","",""],[17,"SDL_HAPTIC_SPRING","",""],[17,"SDL_HAPTIC_DAMPER","",""],[17,"SDL_HAPTIC_INERTIA","",""],[17,"SDL_HAPTIC_FRICTION","",""],[17,"SDL_HAPTIC_CUSTOM","",""],[17,"SDL_HAPTIC_GAIN","",""],[17,"SDL_HAPTIC_AUTOCENTER","",""],[17,"SDL_HAPTIC_STATUS","",""],[17,"SDL_HAPTIC_PAUSE","",""],[11,"clone","","",5],[11,"clone","","",6],[11,"clone","","",7],[11,"clone","","",8],[11,"clone","","",9],[11,"clone","","",10],[11,"_type","","",12],[11,"constant","","",12],[11,"periodic","","",12],[11,"condition","","",12],[11,"ramp","","",12],[11,"left_right","","",12],[11,"custom","","",12],[0,"gesture","sdl2-sys",""],[5,"SDL_RecordGesture","sdl2-sys::gesture",""],[5,"SDL_SaveAllDollarTemplates","",""],[5,"SDL_SaveDollarTemplate","",""],[5,"SDL_LoadDollarTemplates","",""],[6,"SDL_GestureID","",""],[0,"joystick","sdl2-sys",""],[3,"SDL_JoystickGUID","sdl2-sys::joystick",""],[12,"data","","",13],[5,"SDL_NumJoysticks","",""],[5,"SDL_JoystickNameForIndex","",""],[5,"SDL_JoystickOpen","",""],[5,"SDL_JoystickName","",""],[5,"SDL_JoystickGetDeviceGUID","",""],[5,"SDL_JoystickGetGUID","",""],[5,"SDL_JoystickGetGUIDString","",""],[5,"SDL_JoystickGetGUIDFromString","",""],[5,"SDL_JoystickGetAttached","",""],[5,"SDL_JoystickInstanceID","",""],[5,"SDL_JoystickNumAxes","",""],[5,"SDL_JoystickNumBalls","",""],[5,"SDL_JoystickNumHats","",""],[5,"SDL_JoystickNumButtons","",""],[5,"SDL_JoystickUpdate","",""],[5,"SDL_JoystickEventState","",""],[5,"SDL_JoystickGetAxis","",""],[5,"SDL_JoystickGetHat","",""],[5,"SDL_JoystickGetBall","",""],[5,"SDL_JoystickGetButton","",""],[5,"SDL_JoystickClose","",""],[6,"SDL_bool","",""],[6,"SDL_Joystick","",""],[11,"clone","","",13],[0,"keyboard","sdl2-sys",""],[3,"SDL_Keysym","sdl2-sys::keyboard",""],[12,"scancode","","",14],[12,"sym","","",14],[12,"_mod","","",14],[12,"unused","","",14],[5,"SDL_GetKeyboardFocus","",""],[5,"SDL_GetKeyboardState","",""],[5,"SDL_GetModState","",""],[5,"SDL_SetModState","",""],[5,"SDL_GetKeyFromScancode","",""],[5,"SDL_GetScancodeFromKey","",""],[5,"SDL_GetScancodeName","",""],[5,"SDL_GetScancodeFromName","",""],[5,"SDL_GetKeyName","",""],[5,"SDL_GetKeyFromName","",""],[5,"SDL_StartTextInput","",""],[5,"SDL_IsTextInputActive","",""],[5,"SDL_StopTextInput","",""],[5,"SDL_SetTextInputRect","",""],[5,"SDL_HasScreenKeyboardSupport","",""],[5,"SDL_IsScreenKeyboardShown","",""],[6,"SDL_bool","",""],[6,"SDL_Rect","",""],[11,"clone","","",14],[0,"messagebox","sdl2-sys",""],[5,"SDL_ShowSimpleMessageBox","sdl2-sys::messagebox",""],[6,"SDL_MessageBoxFlags","",""],[17,"SDL_MESSAGEBOX_ERROR","",""],[17,"SDL_MESSAGEBOX_WARNING","",""],[17,"SDL_MESSAGEBOX_INFORMATION","",""],[0,"rect","sdl2-sys","Rectangle Functions"],[3,"Point","sdl2-sys::rect","A structure that defines a two dimensional point."],[12,"x","","",15],[12,"y","","",15],[3,"Rect","","A structure that defines a rectangle, with the origin at the upper left."],[12,"x","","",16],[12,"y","","",16],[12,"w","","",16],[12,"h","","",16],[11,"fmt","","",15],[11,"clone","","",15],[11,"eq","","",15],[11,"ne","","",15],[11,"fmt","","",16],[11,"clone","","",16],[11,"eq","","",16],[11,"ne","","",16],[11,"new","","",15],[11,"new","","",16],[11,"from_enclose_points","","Calculate a minimal rectangle enclosing a set of points.",16],[11,"is_empty","","Check whether a rectangle has no area.",16],[11,"has_intersection","","Determine whether two rectangles intersect.",16],[11,"intersection","","Calculate the intersection of two rectangles.",16],[11,"union","","Calculate the union of two rectangles.",16],[11,"intersect_line","","Calculate the intersection of a rectangle and line segment. return points of intersection.",16],[0,"pixels","sdl2-sys",""],[3,"SDL_Color","sdl2-sys::pixels",""],[12,"r","","",17],[12,"g","","",17],[12,"b","","",17],[12,"a","","",17],[3,"SDL_Palette","",""],[12,"ncolors","","",18],[12,"colors","","",18],[12,"version","","",18],[12,"refcount","","",18],[3,"SDL_PixelFormat","",""],[12,"format","","",19],[12,"palette","","",19],[12,"BitsPerPixel","","",19],[12,"BytesPerPixel","","",19],[12,"padding","","",19],[12,"Rmask","","",19],[12,"Gmask","","",19],[12,"Bmask","","",19],[12,"Amask","","",19],[12,"Rloss","","",19],[12,"Gloss","","",19],[12,"Bloss","","",19],[12,"Aloss","","",19],[12,"Rshift","","",19],[12,"Gshift","","",19],[12,"Bshift","","",19],[12,"Ashift","","",19],[12,"refcount","","",19],[12,"next","","",19],[5,"SDL_GetRGB","",""],[5,"SDL_GetRGBA","",""],[5,"SDL_MapRGB","",""],[5,"SDL_MapRGBA","",""],[6,"SDL_PixelFormatEnum","",""],[17,"SDL_PIXELFORMAT_UNKNOWN","",""],[17,"SDL_PIXELFORMAT_INDEX1LSB","",""],[17,"SDL_PIXELFORMAT_INDEX1MSB","",""],[17,"SDL_PIXELFORMAT_INDEX4LSB","",""],[17,"SDL_PIXELFORMAT_INDEX4MSB","",""],[17,"SDL_PIXELFORMAT_INDEX8","",""],[17,"SDL_PIXELFORMAT_RGB332","",""],[17,"SDL_PIXELFORMAT_RGB444","",""],[17,"SDL_PIXELFORMAT_RGB555","",""],[17,"SDL_PIXELFORMAT_BGR555","",""],[17,"SDL_PIXELFORMAT_ARGB4444","",""],[17,"SDL_PIXELFORMAT_RGBA4444","",""],[17,"SDL_PIXELFORMAT_ABGR4444","",""],[17,"SDL_PIXELFORMAT_BGRA4444","",""],[17,"SDL_PIXELFORMAT_ARGB1555","",""],[17,"SDL_PIXELFORMAT_RGBA5551","",""],[17,"SDL_PIXELFORMAT_ABGR1555","",""],[17,"SDL_PIXELFORMAT_BGRA5551","",""],[17,"SDL_PIXELFORMAT_RGB565","",""],[17,"SDL_PIXELFORMAT_BGR565","",""],[17,"SDL_PIXELFORMAT_RGB24","",""],[17,"SDL_PIXELFORMAT_BGR24","",""],[17,"SDL_PIXELFORMAT_RGB888","",""],[17,"SDL_PIXELFORMAT_RGBX8888","",""],[17,"SDL_PIXELFORMAT_BGR888","",""],[17,"SDL_PIXELFORMAT_BGRX8888","",""],[17,"SDL_PIXELFORMAT_ARGB8888","",""],[17,"SDL_PIXELFORMAT_RGBA8888","",""],[17,"SDL_PIXELFORMAT_ABGR8888","",""],[17,"SDL_PIXELFORMAT_BGRA8888","",""],[17,"SDL_PIXELFORMAT_ARGB2101010","",""],[17,"SDL_PIXELFORMAT_YV12","",""],[17,"SDL_PIXELFORMAT_IYUV","",""],[17,"SDL_PIXELFORMAT_YUY2","",""],[17,"SDL_PIXELFORMAT_UYVY","",""],[17,"SDL_PIXELFORMAT_YVYU","",""],[11,"clone","","",17],[0,"render","sdl2-sys",""],[3,"SDL_RendererInfo","sdl2-sys::render",""],[12,"name","","",20],[12,"flags","","",20],[12,"num_texture_formats","","",20],[12,"texture_formats","","",20],[12,"max_texture_width","","",20],[12,"max_texture_height","","",20],[3,"SDL_Renderer","",""],[3,"SDL_Texture","",""],[5,"SDL_GetNumRenderDrivers","",""],[5,"SDL_GetRenderDriverInfo","",""],[5,"SDL_CreateWindowAndRenderer","",""],[5,"SDL_CreateRenderer","",""],[5,"SDL_CreateSoftwareRenderer","",""],[5,"SDL_GetRenderer","",""],[5,"SDL_GetRendererInfo","",""],[5,"SDL_GetRendererOutputSize","",""],[5,"SDL_CreateTexture","",""],[5,"SDL_CreateTextureFromSurface","",""],[5,"SDL_QueryTexture","",""],[5,"SDL_SetTextureColorMod","",""],[5,"SDL_GetTextureColorMod","",""],[5,"SDL_SetTextureAlphaMod","",""],[5,"SDL_GetTextureAlphaMod","",""],[5,"SDL_SetTextureBlendMode","",""],[5,"SDL_GetTextureBlendMode","",""],[5,"SDL_UpdateTexture","",""],[5,"SDL_LockTexture","",""],[5,"SDL_UnlockTexture","",""],[5,"SDL_RenderTargetSupported","",""],[5,"SDL_SetRenderTarget","",""],[5,"SDL_GetRenderTarget","",""],[5,"SDL_RenderSetLogicalSize","",""],[5,"SDL_RenderGetLogicalSize","",""],[5,"SDL_RenderSetViewport","",""],[5,"SDL_RenderGetViewport","",""],[5,"SDL_RenderSetClipRect","",""],[5,"SDL_RenderGetClipRect","",""],[5,"SDL_RenderSetScale","",""],[5,"SDL_RenderGetScale","",""],[5,"SDL_SetRenderDrawColor","",""],[5,"SDL_GetRenderDrawColor","",""],[5,"SDL_SetRenderDrawBlendMode","",""],[5,"SDL_GetRenderDrawBlendMode","",""],[5,"SDL_RenderClear","",""],[5,"SDL_RenderDrawPoint","",""],[5,"SDL_RenderDrawPoints","",""],[5,"SDL_RenderDrawLine","",""],[5,"SDL_RenderDrawLines","",""],[5,"SDL_RenderDrawRect","",""],[5,"SDL_RenderDrawRects","",""],[5,"SDL_RenderFillRect","",""],[5,"SDL_RenderFillRects","",""],[5,"SDL_RenderCopy","",""],[5,"SDL_RenderCopyEx","",""],[5,"SDL_RenderReadPixels","",""],[5,"SDL_RenderPresent","",""],[5,"SDL_DestroyTexture","",""],[5,"SDL_DestroyRenderer","",""],[5,"SDL_GL_BindTexture","",""],[5,"SDL_GL_UnbindTexture","",""],[6,"SDL_Point","",""],[6,"SDL_Rect","",""],[6,"SDL_bool","",""],[6,"SDL_RendererFlags","",""],[6,"SDL_TextureAccess","",""],[6,"SDL_TextureModulate","",""],[6,"SDL_RendererFlip","",""],[6,"SDL_BlendMode","",""],[17,"SDL_RENDERER_SOFTWARE","",""],[17,"SDL_RENDERER_ACCELERATED","",""],[17,"SDL_RENDERER_PRESENTVSYNC","",""],[17,"SDL_RENDERER_TARGETTEXTURE","",""],[17,"SDL_TEXTUREACCESS_STATIC","",""],[17,"SDL_TEXTUREACCESS_STREAMING","",""],[17,"SDL_TEXTUREACCESS_TARGET","",""],[17,"SDL_TEXTUREMODULATE_NONE","",""],[17,"SDL_TEXTUREMODULATE_COLOR","",""],[17,"SDL_TEXTUREMODULATE_ALPHA","",""],[17,"SDL_FLIP_NONE","",""],[17,"SDL_FLIP_HORIZONTAL","",""],[17,"SDL_FLIP_VERTICAL","",""],[17,"SDL_BLENDMODE_NONE","",""],[17,"SDL_BLENDMODE_BLEND","",""],[17,"SDL_BLENDMODE_ADD","",""],[17,"SDL_BLENDMODE_MOD","",""],[0,"rwops","sdl2-sys",""],[3,"SDL_RWops","sdl2-sys::rwops",""],[12,"size","","",21],[12,"seek","","",21],[12,"read","","",21],[12,"write","","",21],[12,"close","","",21],[12,"_type","","",21],[5,"SDL_RWFromFile","",""],[5,"SDL_RWFromFP","",""],[5,"SDL_RWFromMem","",""],[5,"SDL_RWFromConstMem","",""],[5,"SDL_AllocRW","",""],[5,"SDL_FreeRW","",""],[6,"SDL_bool","",""],[7,"RW_SEEK_SET","",""],[7,"RW_SEEK_CUR","",""],[7,"RW_SEEK_END","",""],[0,"surface","sdl2-sys",""],[3,"SDL_BlitMap","sdl2-sys::surface",""],[3,"SDL_Surface","",""],[12,"flags","","",22],[12,"format","","",22],[12,"w","","",22],[12,"h","","",22],[12,"pitch","","",22],[12,"pixels","","",22],[12,"userdata","","",22],[12,"locked","","",22],[12,"lock_data","","",22],[12,"clip_rect","","",22],[12,"map","","",22],[12,"refcount","","",22],[5,"SDL_CreateRGBSurface","",""],[5,"SDL_CreateRGBSurfaceFrom","",""],[5,"SDL_FreeSurface","",""],[5,"SDL_SetSurfacePalette","",""],[5,"SDL_LockSurface","",""],[5,"SDL_UnlockSurface","",""],[5,"SDL_LoadBMP_RW","",""],[5,"SDL_SaveBMP_RW","",""],[5,"SDL_SetSurfaceRLE","",""],[5,"SDL_SetColorKey","",""],[5,"SDL_GetColorKey","",""],[5,"SDL_SetSurfaceColorMod","",""],[5,"SDL_GetSurfaceColorMod","",""],[5,"SDL_SetSurfaceAlphaMod","",""],[5,"SDL_GetSurfaceAlphaMod","",""],[5,"SDL_SetSurfaceBlendMode","",""],[5,"SDL_GetSurfaceBlendMode","",""],[5,"SDL_SetClipRect","",""],[5,"SDL_GetClipRect","",""],[5,"SDL_ConvertSurface","",""],[5,"SDL_ConvertSurfaceFormat","",""],[5,"SDL_ConvertPixels","",""],[5,"SDL_FillRect","",""],[5,"SDL_FillRects","",""],[5,"SDL_UpperBlit","",""],[5,"SDL_LowerBlit","",""],[5,"SDL_SoftStretch","",""],[5,"SDL_UpperBlitScaled","",""],[5,"SDL_LowerBlitScaled","",""],[6,"SDL_bool","",""],[6,"SDL_Rect","",""],[6,"SDL_SurfaceFlag","",""],[17,"SDL_SWSURFACE","",""],[17,"SDL_PREALLOC","",""],[17,"SDL_RLEACCEL","",""],[17,"SDL_DONTFREE","",""],[0,"touch","sdl2-sys",""],[3,"Finger","sdl2-sys::touch",""],[5,"SDL_GetNumTouchDevices","",""],[5,"SDL_GetTouchDevice","",""],[5,"SDL_GetNumTouchFingers","",""],[5,"SDL_GetTouchFinger","",""],[6,"SDL_TouchID","",""],[6,"SDL_FingerID","",""],[6,"SDL_Finger","",""],[6,"TouchDevice","",""],[11,"eq","","",23],[11,"ne","","",23],[0,"video","sdl2-sys",""],[3,"SDL_Window","sdl2-sys::video",""],[3,"SDL_DisplayMode","",""],[12,"format","","",24],[12,"w","","",24],[12,"h","","",24],[12,"refresh_rate","","",24],[12,"driverdata","","",24],[4,"SDL_WindowFlags","",""],[13,"SDL_WINDOW_FULLSCREEN","","",25],[13,"SDL_WINDOW_OPENGL","","",25],[13,"SDL_WINDOW_SHOWN","","",25],[13,"SDL_WINDOW_HIDDEN","","",25],[13,"SDL_WINDOW_BORDERLESS","","",25],[13,"SDL_WINDOW_RESIZABLE","","",25],[13,"SDL_WINDOW_MINIMIZED","","",25],[13,"SDL_WINDOW_MAXIMIZED","","",25],[13,"SDL_WINDOW_INPUT_GRABBED","","",25],[13,"SDL_WINDOW_INPUT_FOCUS","","",25],[13,"SDL_WINDOW_MOUSE_FOCUS","","",25],[13,"SDL_WINDOW_FULLSCREEN_DESKTOP","","",25],[13,"SDL_WINDOW_FOREIGN","","",25],[13,"SDL_WINDOW_ALLOW_HIGHDPI","","",25],[4,"SDL_WindowEventID","",""],[13,"SDL_WINDOWEVENT_NONE","","",26],[13,"SDL_WINDOWEVENT_SHOWN","","",26],[13,"SDL_WINDOWEVENT_HIDDEN","","",26],[13,"SDL_WINDOWEVENT_EXPOSED","","",26],[13,"SDL_WINDOWEVENT_MOVED","","",26],[13,"SDL_WINDOWEVENT_RESIZED","","",26],[13,"SDL_WINDOWEVENT_SIZE_CHANGED","","",26],[13,"SDL_WINDOWEVENT_MINIMIZED","","",26],[13,"SDL_WINDOWEVENT_MAXIMIZED","","",26],[13,"SDL_WINDOWEVENT_RESTORED","","",26],[13,"SDL_WINDOWEVENT_ENTER","","",26],[13,"SDL_WINDOWEVENT_LEAVE","","",26],[13,"SDL_WINDOWEVENT_FOCUS_GAINED","","",26],[13,"SDL_WINDOWEVENT_FOCUS_LOST","","",26],[13,"SDL_WINDOWEVENT_CLOSE","","",26],[4,"SDL_GLattr","",""],[13,"SDL_GL_RED_SIZE","","",27],[13,"SDL_GL_GREEN_SIZE","","",27],[13,"SDL_GL_BLUE_SIZE","","",27],[13,"SDL_GL_ALPHA_SIZE","","",27],[13,"SDL_GL_BUFFER_SIZE","","",27],[13,"SDL_GL_DOUBLEBUFFER","","",27],[13,"SDL_GL_DEPTH_SIZE","","",27],[13,"SDL_GL_STENCIL_SIZE","","",27],[13,"SDL_GL_ACCUM_RED_SIZE","","",27],[13,"SDL_GL_ACCUM_GREEN_SIZE","","",27],[13,"SDL_GL_ACCUM_BLUE_SIZE","","",27],[13,"SDL_GL_ACCUM_ALPHA_SIZE","","",27],[13,"SDL_GL_STEREO","","",27],[13,"SDL_GL_MULTISAMPLEBUFFERS","","",27],[13,"SDL_GL_MULTISAMPLESAMPLES","","",27],[13,"SDL_GL_ACCELERATED_VISUAL","","",27],[13,"SDL_GL_RETAINED_BACKING","","",27],[13,"SDL_GL_CONTEXT_MAJOR_VERSION","","",27],[13,"SDL_GL_CONTEXT_MINOR_VERSION","","",27],[13,"SDL_GL_CONTEXT_EGL","","",27],[13,"SDL_GL_CONTEXT_FLAGS","","",27],[13,"SDL_GL_CONTEXT_PROFILE_MASK","","",27],[13,"SDL_GL_SHARE_WITH_CURRENT_CONTEXT","","",27],[13,"SDL_GL_FRAMEBUFFER_SRGB_CAPABLE","","",27],[4,"SDL_GLprofile","",""],[13,"SDL_GL_CONTEXT_PROFILE_CORE","","",28],[13,"SDL_GL_CONTEXT_PROFILE_COMPATIBILITY","","",28],[13,"SDL_GL_CONTEXT_PROFILE_ES","","",28],[5,"SDL_GetNumVideoDrivers","",""],[5,"SDL_GetVideoDriver","",""],[5,"SDL_VideoInit","",""],[5,"SDL_VideoQuit","",""],[5,"SDL_GetCurrentVideoDriver","",""],[5,"SDL_GetNumVideoDisplays","",""],[5,"SDL_GetDisplayName","",""],[5,"SDL_GetDisplayBounds","",""],[5,"SDL_GetNumDisplayModes","",""],[5,"SDL_GetDisplayMode","",""],[5,"SDL_GetDesktopDisplayMode","",""],[5,"SDL_GetCurrentDisplayMode","",""],[5,"SDL_GetClosestDisplayMode","",""],[5,"SDL_GetWindowDisplayIndex","",""],[5,"SDL_SetWindowDisplayMode","",""],[5,"SDL_GetWindowDisplayMode","",""],[5,"SDL_GetWindowPixelFormat","",""],[5,"SDL_CreateWindow","",""],[5,"SDL_CreateWindowFrom","",""],[5,"SDL_GetWindowID","",""],[5,"SDL_GetWindowFromID","",""],[5,"SDL_GetWindowFlags","",""],[5,"SDL_SetWindowTitle","",""],[5,"SDL_GetWindowTitle","",""],[5,"SDL_SetWindowIcon","",""],[5,"SDL_SetWindowData","",""],[5,"SDL_GetWindowData","",""],[5,"SDL_SetWindowPosition","",""],[5,"SDL_GetWindowPosition","",""],[5,"SDL_SetWindowSize","",""],[5,"SDL_GetWindowSize","",""],[5,"SDL_SetWindowMinimumSize","",""],[5,"SDL_GetWindowMinimumSize","",""],[5,"SDL_SetWindowMaximumSize","",""],[5,"SDL_GetWindowMaximumSize","",""],[5,"SDL_SetWindowBordered","",""],[5,"SDL_ShowWindow","",""],[5,"SDL_HideWindow","",""],[5,"SDL_RaiseWindow","",""],[5,"SDL_MaximizeWindow","",""],[5,"SDL_MinimizeWindow","",""],[5,"SDL_RestoreWindow","",""],[5,"SDL_SetWindowFullscreen","",""],[5,"SDL_GetWindowSurface","",""],[5,"SDL_UpdateWindowSurface","",""],[5,"SDL_UpdateWindowSurfaceRects","",""],[5,"SDL_SetWindowGrab","",""],[5,"SDL_GetWindowGrab","",""],[5,"SDL_SetWindowBrightness","",""],[5,"SDL_GetWindowBrightness","",""],[5,"SDL_SetWindowGammaRamp","",""],[5,"SDL_GetWindowGammaRamp","",""],[5,"SDL_DestroyWindow","",""],[5,"SDL_IsScreenSaverEnabled","",""],[5,"SDL_EnableScreenSaver","",""],[5,"SDL_DisableScreenSaver","",""],[5,"SDL_GL_GetDrawableSize","",""],[5,"SDL_GL_LoadLibrary","",""],[5,"SDL_GL_GetProcAddress","",""],[5,"SDL_GL_UnloadLibrary","",""],[5,"SDL_GL_ExtensionSupported","",""],[5,"SDL_GL_SetAttribute","",""],[5,"SDL_GL_GetAttribute","",""],[5,"SDL_GL_CreateContext","",""],[5,"SDL_GL_MakeCurrent","",""],[5,"SDL_GL_GetCurrentWindow","",""],[5,"SDL_GL_GetCurrentContext","",""],[5,"SDL_GL_SetSwapInterval","",""],[5,"SDL_GL_GetSwapInterval","",""],[5,"SDL_GL_SwapWindow","",""],[5,"SDL_GL_DeleteContext","",""],[6,"SDL_Rect","",""],[6,"SDL_bool","",""],[6,"SDL_WindowPos","",""],[6,"SDL_GLContext","",""],[17,"SDL_WINDOWPOS_CENTERED","",""],[17,"SDL_WINDOWPOS_UNDEFINED","",""],[11,"clone","","",25],[11,"clone","","",26],[11,"from_i64","","",27],[11,"from_u64","","",27],[11,"clone","","",27],[11,"clone","","",28],[0,"mouse","sdl2-sys",""],[5,"SDL_GetMouseFocus","sdl2-sys::mouse",""],[5,"SDL_GetMouseState","",""],[5,"SDL_GetRelativeMouseState","",""],[5,"SDL_WarpMouseInWindow","",""],[5,"SDL_SetRelativeMouseMode","",""],[5,"SDL_GetRelativeMouseMode","",""],[5,"SDL_CreateCursor","",""],[5,"SDL_CreateColorCursor","",""],[5,"SDL_CreateSystemCursor","",""],[5,"SDL_SetCursor","",""],[5,"SDL_GetCursor","",""],[5,"SDL_GetDefaultCursor","",""],[5,"SDL_FreeCursor","",""],[5,"SDL_ShowCursor","",""],[6,"SDL_bool","",""],[6,"SDL_Cursor","",""],[6,"SDL_SystemCursor","",""],[6,"SDL_MouseState","",""],[17,"SDL_SYSTEM_CURSOR_ARROW","",""],[17,"SDL_SYSTEM_CURSOR_IBEAM","",""],[17,"SDL_SYSTEM_CURSOR_WAIT","",""],[17,"SDL_SYSTEM_CURSOR_CROSSHAIR","",""],[17,"SDL_SYSTEM_CURSOR_WAITARROW","",""],[17,"SDL_SYSTEM_CURSOR_SIZENWSE","",""],[17,"SDL_SYSTEM_CURSOR_SIZENESW","",""],[17,"SDL_SYSTEM_CURSOR_SIZEWE","",""],[17,"SDL_SYSTEM_CURSOR_SIZENS","",""],[17,"SDL_SYSTEM_CURSOR_SIZEALL","",""],[17,"SDL_SYSTEM_CURSOR_NO","",""],[17,"SDL_SYSTEM_CURSOR_HAND","",""],[17,"SDL_NUM_SYSTEM_CURSORS","",""],[17,"SDL_DISABLE","",""],[17,"SDL_ENABLE","",""],[17,"SDL_QUERY","",""],[17,"SDL_BUTTON_LEFT","",""],[17,"SDL_BUTTON_MIDDLE","",""],[17,"SDL_BUTTON_RIGHT","",""],[17,"SDL_BUTTON_X1","",""],[17,"SDL_BUTTON_X2","",""],[17,"SDL_BUTTON_LMASK","",""],[17,"SDL_BUTTON_MMASK","",""],[17,"SDL_BUTTON_RMASK","",""],[17,"SDL_BUTTON_X1MASK","",""],[17,"SDL_BUTTON_X2MASK","",""],[0,"sdl","sdl2-sys",""],[5,"SDL_ClearError","sdl2-sys::sdl",""],[5,"SDL_Error","",""],[5,"SDL_SetError","",""],[5,"SDL_GetError","",""],[5,"SDL_Init","",""],[5,"SDL_InitSubSystem","",""],[5,"SDL_QuitSubSystem","",""],[5,"SDL_WasInit","",""],[5,"SDL_Quit","",""],[5,"SDL_GetTicks","",""],[6,"SDL_errorcode","",""],[6,"SDL_InitFlag","",""],[17,"SDL_ENOMEM","",""],[17,"SDL_EFREAD","",""],[17,"SDL_EFWRITE","",""],[17,"SDL_EFSEEK","",""],[17,"SDL_UNSUPPORTED","",""],[17,"SDL_LASTERROR","",""],[17,"SDL_INIT_TIMER","",""],[17,"SDL_INIT_AUDIO","",""],[17,"SDL_INIT_VIDEO","",""],[17,"SDL_INIT_JOYSTICK","",""],[17,"SDL_INIT_HAPTIC","",""],[17,"SDL_INIT_GAMECONTROLLER","",""],[17,"SDL_INIT_EVENTS","",""],[17,"SDL_INIT_NOPARACHUTE","",""],[17,"SDL_INIT_EVERYTHING","",""],[0,"timer","sdl2-sys",""],[5,"SDL_GetTicks","sdl2-sys::timer",""],[5,"SDL_GetPerformanceCounter","",""],[5,"SDL_GetPerformanceFrequency","",""],[5,"SDL_Delay","",""],[5,"SDL_AddTimer","",""],[5,"SDL_RemoveTimer","",""],[6,"SDL_TimerCallback","",""],[6,"SDL_TimerID","",""]],"paths":[[3,"SDL_AudioSpec"],[3,"SDL_AudioCVT"],[3,"SDL_GameControllerButtonBind"],[3,"SDL_GameControllerButtonBindData"],[3,"SDL_GameControllerButtonBindDataHat"],[3,"SDL_HapticDirection"],[3,"SDL_HapticConstant"],[3,"SDL_HapticPeriodic"],[3,"SDL_HapticCondition"],[3,"SDL_HapticRamp"],[3,"SDL_HapticLeftRight"],[3,"SDL_HapticCustom"],[3,"SDL_HapticEffect"],[3,"SDL_JoystickGUID"],[3,"SDL_Keysym"],[3,"Point"],[3,"Rect"],[3,"SDL_Color"],[3,"SDL_Palette"],[3,"SDL_PixelFormat"],[3,"SDL_RendererInfo"],[3,"SDL_RWops"],[3,"SDL_Surface"],[3,"Finger"],[3,"SDL_DisplayMode"],[4,"SDL_WindowFlags"],[4,"SDL_WindowEventID"],[4,"SDL_GLattr"],[4,"SDL_GLprofile"]]};

searchIndex['freetype-sys'] = {"items":[[0,"","freetype-sys",""],[3,"FT_Vector","",""],[12,"x","","",0],[12,"y","","",0],[3,"FT_BBox","",""],[12,"xMin","","",1],[12,"yMin","","",1],[12,"xMax","","",1],[12,"yMax","","",1],[3,"FT_Matrix","",""],[12,"xx","","",2],[12,"xy","","",2],[12,"yx","","",2],[12,"yy","","",2],[3,"FT_UnitVector","",""],[12,"x","","",3],[12,"y","","",3],[3,"FT_Bitmap","",""],[12,"rows","","",4],[12,"width","","",4],[12,"pitch","","",4],[12,"buffer","","",4],[12,"num_grays","","",4],[12,"pixel_mode","","",4],[12,"palette_mode","","",4],[12,"palette","","",4],[3,"FT_Data","",""],[12,"pointer","","",5],[12,"length","","",5],[3,"FT_Generic","",""],[12,"data","","",6],[12,"finalizer","","",6],[3,"FT_Size_Metrics","",""],[12,"x_ppem","","",7],[12,"y_ppem","","",7],[12,"x_scale","","",7],[12,"y_scale","","",7],[12,"ascender","","",7],[12,"descender","","",7],[12,"height","","",7],[12,"max_advance","","",7],[3,"FT_Outline","",""],[12,"n_contours","","",8],[12,"n_points","","",8],[12,"points","","",8],[12,"tags","","",8],[12,"contours","","",8],[12,"flags","","",8],[3,"FT_Glyph_Metrics","",""],[12,"width","","",9],[12,"height","","",9],[12,"horiBearingX","","",9],[12,"horiBearingY","","",9],[12,"horiAdvance","","",9],[12,"vertBearingX","","",9],[12,"vertBearingY","","",9],[12,"vertAdvance","","",9],[3,"FT_Parameter","",""],[12,"tag","","",10],[12,"data","","",10],[3,"FT_Open_Args","",""],[12,"flags","","",11],[12,"memory_base","","",11],[12,"memory_size","","",11],[12,"pathname","","",11],[12,"stream","","",11],[12,"driver","","",11],[12,"num_params","","",11],[12,"params","","",11],[3,"FT_Bitmap_Size","",""],[12,"height","","",12],[12,"width","","",12],[12,"size","","",12],[12,"x_ppem","","",12],[12,"y_ppem","","",12],[3,"TT_OS2","",""],[12,"version","","",13],[12,"xAvgCharWidth","","",13],[12,"usWeightClass","","",13],[12,"usWidthClass","","",13],[12,"fsType","","",13],[12,"ySubscriptXSize","","",13],[12,"ySubscriptYSize","","",13],[12,"ySubscriptXOffset","","",13],[12,"ySubscriptYOffset","","",13],[12,"ySuperscriptXSize","","",13],[12,"ySuperscriptYSize","","",13],[12,"ySuperscriptXOffset","","",13],[12,"ySuperscriptYOffset","","",13],[12,"yStrikeoutSize","","",13],[12,"yStrikeoutPosition","","",13],[12,"sFamilyClass","","",13],[12,"panose","","",13],[12,"ulUnicodeRange1","","",13],[12,"ulUnicodeRange2","","",13],[12,"ulUnicodeRange3","","",13],[12,"ulUnicodeRange4","","",13],[12,"ulCodePageRange1","","",13],[12,"ulCodePageRange2","","",13],[12,"sxHeight","","",13],[12,"sCapHeight","","",13],[12,"usDefaultChar","","",13],[12,"usBreakChar","","",13],[12,"usMaxContext","","",13],[3,"FT_CharMapRec","",""],[12,"face","","",14],[12,"encoding","","",14],[12,"platform_id","","",14],[12,"encoding_id","","",14],[3,"FT_FaceRec","",""],[12,"num_faces","","",15],[12,"face_index","","",15],[12,"face_flags","","",15],[12,"style_flags","","",15],[12,"num_glyphs","","",15],[12,"family_name","","",15],[12,"style_name","","",15],[12,"num_fixed_sizes","","",15],[12,"available_sizes","","",15],[12,"num_charmaps","","",15],[12,"charmaps","","",15],[12,"generic","","",15],[12,"bbox","","",15],[12,"units_per_EM","","",15],[12,"ascender","","",15],[12,"descender","","",15],[12,"height","","",15],[12,"max_advance_width","","",15],[12,"max_advance_height","","",15],[12,"underline_position","","",15],[12,"underline_thickness","","",15],[12,"glyph","","",15],[12,"size","","",15],[12,"charmap","","",15],[12,"driver","","",15],[12,"memory","","",15],[12,"stream","","",15],[12,"sizes_list","","",15],[12,"autohint","","",15],[12,"extensions","","",15],[12,"internal","","",15],[3,"FT_GlyphSlotRec","",""],[12,"library","","",16],[12,"face","","",16],[12,"next","","",16],[12,"reserved","","",16],[12,"generic","","",16],[12,"metrics","","",16],[12,"linearHoriAdvance","","",16],[12,"linearVertAdvance","","",16],[12,"advance","","",16],[12,"format","","",16],[12,"bitmap","","",16],[12,"bitmap_left","","",16],[12,"bitmap_top","","",16],[12,"outline","","",16],[12,"num_subglyphs","","",16],[12,"subglyphs","","",16],[12,"control_data","","",16],[12,"control_len","","",16],[12,"lsb_delta","","",16],[12,"rsb_delta","","",16],[12,"other","","",16],[12,"internal","","",16],[3,"FT_SizeRec","",""],[12,"face","","",17],[12,"generic","","",17],[12,"metrics","","",17],[12,"internal","","",17],[3,"FT_StreamRec","",""],[12,"base","","",18],[12,"size","","",18],[12,"pos","","",18],[12,"descriptor","","",18],[12,"pathname","","",18],[12,"read","","",18],[12,"close","","",18],[12,"memory","","",18],[12,"cursor","","",18],[12,"limit","","",18],[3,"FT_MemoryRec","",""],[12,"user","","",19],[12,"alloc","","",19],[12,"free","","",19],[12,"realloc","","",19],[3,"FT_ListRec","",""],[12,"head","","",20],[12,"tail","","",20],[3,"FT_ListNodeRec","",""],[12,"prev","","",21],[12,"next","","",21],[12,"data","","",21],[3,"FT_Size_RequestRec","",""],[12,"size_request_type","","",22],[12,"width","","",22],[12,"height","","",22],[12,"horiResolution","","",22],[12,"vertResolution","","",22],[3,"FT_GlyphRec","",""],[12,"library","","",23],[12,"clazz","","",23],[12,"format","","",23],[12,"advance","","",23],[3,"FT_BitmapGlyphRec","",""],[12,"root","","",24],[12,"left","","",24],[12,"top","","",24],[12,"bitmap","","",24],[3,"FT_OutlineGlyphRec","",""],[12,"root","","",25],[12,"outline","","",25],[5,"FT_HAS_HORIZONTAL","",""],[5,"FT_HAS_VERTICAL","",""],[5,"FT_HAS_KERNING","",""],[5,"FT_IS_SCALABLE","",""],[5,"FT_IS_SFNT","",""],[5,"FT_IS_FIXED_WIDTH","",""],[5,"FT_HAS_FIXED_SIZES","",""],[5,"FT_HAS_GLYPH_NAMES","",""],[5,"FT_HAS_MULTIPLE_MASTERS","",""],[5,"FT_IS_CID_KEYED","",""],[5,"FT_IS_TRICKY","",""],[5,"FT_HAS_COLOR","",""],[5,"FT_Get_Sfnt_Table","",""],[5,"FT_Init_FreeType","",""],[5,"FT_Done_FreeType","",""],[5,"FT_New_Library","",""],[5,"FT_Done_Library","",""],[5,"FT_Reference_Library","",""],[5,"FT_Add_Default_Modules","",""],[5,"FT_New_Face","",""],[5,"FT_New_Memory_Face","",""],[5,"FT_Open_Face","",""],[5,"FT_Attach_File","",""],[5,"FT_Attach_Stream","",""],[5,"FT_Reference_Face","",""],[5,"FT_Done_Face","",""],[5,"FT_Select_Size","",""],[5,"FT_Request_Size","",""],[5,"FT_Set_Char_Size","",""],[5,"FT_Set_Pixel_Sizes","",""],[5,"FT_Load_Glyph","",""],[5,"FT_Load_Char","",""],[5,"FT_Set_Transform","",""],[5,"FT_Render_Glyph","",""],[5,"FT_Get_Kerning","",""],[5,"FT_Get_Track_Kerning","",""],[5,"FT_Get_Glyph_Name","",""],[5,"FT_Get_Postscript_Name","",""],[5,"FT_Select_CharMap","",""],[5,"FT_Set_Charmap","",""],[5,"FT_Get_Charmap_Index","",""],[5,"FT_Get_Char_Index","",""],[5,"FT_Get_First_Char","",""],[5,"FT_Get_Next_Char","",""],[5,"FT_Get_Name_Index","",""],[5,"FT_Get_SubGlyph_Info","",""],[5,"FT_Get_FSType_Flags","",""],[5,"FT_Get_Glyph","",""],[5,"FT_Glyph_Copy","",""],[5,"FT_Glyph_Transform","",""],[5,"FT_Glyph_Get_CBox","",""],[5,"FT_Glyph_To_Bitmap","",""],[5,"FT_Done_Glyph","",""],[6,"FT_Byte","",""],[6,"FT_Bytes","",""],[6,"FT_Char","",""],[6,"FT_Int","",""],[6,"FT_UInt","",""],[6,"FT_Int16","",""],[6,"FT_UInt16","",""],[6,"FT_Int32","",""],[6,"FT_UInt32","",""],[6,"FT_Int64","",""],[6,"FT_UInt64","",""],[6,"FT_Short","",""],[6,"FT_UShort","",""],[6,"FT_Long","",""],[6,"FT_ULong","",""],[6,"FT_Bool","",""],[6,"FT_Offset","",""],[6,"FT_PtrDist","",""],[6,"FT_String","",""],[6,"FT_Tag","",""],[6,"FT_Error","",""],[6,"FT_Fixed","",""],[6,"FT_Pointer","",""],[6,"FT_Pos","",""],[6,"FT_FWord","",""],[6,"FT_UFWord","",""],[6,"FT_F2Dot14","",""],[6,"FT_F26Dot6","",""],[6,"FT_Generic_Finalizer","",""],[6,"FT_StreamDesc","",""],[6,"FT_Stream_IoFunc","",""],[6,"FT_Stream_CloseFunc","",""],[6,"FT_Alloc_Func","",""],[6,"FT_Free_Func","",""],[6,"FT_Realloc_Func","",""],[6,"enum_FT_Sfnt_Tag_","",""],[6,"FT_Sfnt_Tag","",""],[6,"FT_Pixel_Mode","",""],[6,"FT_Glyph_Format","",""],[6,"FT_Render_Mode","",""],[6,"FT_Encoding","",""],[6,"FT_Size_Request_Type","",""],[6,"FT_Kerning_Mode","",""],[6,"FT_Glyph_BBox_Mode","",""],[6,"FT_Library","",""],[6,"FT_Face","",""],[6,"FT_Size","",""],[6,"FT_GlyphSlot","",""],[6,"FT_CharMap","",""],[6,"FT_Module","",""],[6,"FT_Driver","",""],[6,"FT_Renderer","",""],[6,"FT_Size_Internal","",""],[6,"FT_SubGlyph","",""],[6,"FT_Slot_Internal","",""],[6,"FT_Size_Request","",""],[6,"FT_Face_Internal","",""],[6,"FT_Stream","",""],[6,"FT_Memory","",""],[6,"FT_ListNode","",""],[6,"FT_Glyph","",""],[6,"FT_BitmapGlyph","",""],[6,"FT_OutlineGlyph","",""],[6,"TT_OS2_Internal","",""],[6,"FT_LibraryRec","",""],[6,"FT_ModuleRec","",""],[6,"FT_DriverRec","",""],[6,"FT_RendererRec","",""],[6,"FT_Size_InternalRec","",""],[6,"FT_SubGlyphRec","",""],[6,"FT_Slot_InternalRec","",""],[6,"FT_Face_InternalRec","",""],[17,"ft_sfnt_head","",""],[17,"ft_sfnt_maxp","",""],[17,"ft_sfnt_os2","",""],[17,"ft_sfnt_hhea","",""],[17,"ft_sfnt_vhea","",""],[17,"ft_sfnt_post","",""],[17,"ft_sfnt_pclt","",""],[17,"ft_sfnt_max","",""],[17,"FT_PIXEL_MODE_NONE","",""],[17,"FT_PIXEL_MODE_MONO","",""],[17,"FT_PIXEL_MODE_GRAY","",""],[17,"FT_PIXEL_MODE_GRAY2","",""],[17,"FT_PIXEL_MODE_GRAY4","",""],[17,"FT_PIXEL_MODE_LCD","",""],[17,"FT_PIXEL_MODE_LCD_V","",""],[17,"FT_PIXEL_MODE_BGRA","",""],[17,"FT_PIXEL_MODE_MAX","",""],[17,"FT_GLYPH_FORMAT_NONE","",""],[17,"FT_GLYPH_FORMAT_COMPOSITE","",""],[17,"FT_GLYPH_FORMAT_BITMAP","",""],[17,"FT_GLYPH_FORMAT_OUTLINE","",""],[17,"FT_GLYPH_FORMAT_PLOTTER","",""],[17,"FT_RENDER_MODE_NORMAL","",""],[17,"FT_RENDER_MODE_LIGHT","",""],[17,"FT_RENDER_MODE_MONO","",""],[17,"FT_RENDER_MODE_LCD","",""],[17,"FT_RENDER_MODE_LCD_V","",""],[17,"FT_RENDER_MODE_MAX","",""],[17,"FT_ENCODING_NONE","",""],[17,"FT_ENCODING_MS_SYMBOL","",""],[17,"FT_ENCODING_UNICODE","",""],[17,"FT_ENCODING_SJIS","",""],[17,"FT_ENCODING_GB2312","",""],[17,"FT_ENCODING_BIG5","",""],[17,"FT_ENCODING_WANSUNG","",""],[17,"FT_ENCODING_JOHAB","",""],[17,"FT_ENCODING_MS_SJIS","",""],[17,"FT_ENCODING_MS_GB2312","",""],[17,"FT_ENCODING_MS_BIG5","",""],[17,"FT_ENCODING_MS_WANSUNG","",""],[17,"FT_ENCODING_MS_JOHAB","",""],[17,"FT_ENCODING_ADOBE_STANDARD","",""],[17,"FT_ENCODING_ADOBE_EXPERT","",""],[17,"FT_ENCODING_ADOBE_CUSTOM","",""],[17,"FT_ENCODING_ADOBE_LATIN_1","",""],[17,"FT_ENCODING_OLD_LATIN_2","",""],[17,"FT_ENCODING_APPLE_ROMAN","",""],[17,"FT_SIZE_REQUEST_TYPE_NOMINAL","",""],[17,"FT_SIZE_REQUEST_TYPE_REAL_DIM","",""],[17,"FT_SIZE_REQUEST_TYPE_BBOX","",""],[17,"FT_SIZE_REQUEST_TYPE_CELL","",""],[17,"FT_SIZE_REQUEST_TYPE_SCALES","",""],[17,"FT_SIZE_REQUEST_TYPE_MAX","",""],[17,"FT_KERNING_DEFAULT","",""],[17,"FT_KERNING_UNFITTED","",""],[17,"FT_KERNING_UNSCALED","",""],[17,"FT_GLYPH_BBOX_UNSCALED","",""],[17,"FT_GLYPH_BBOX_SUBPIXELS","",""],[17,"FT_GLYPH_BBOX_GRIDFIT","",""],[17,"FT_GLYPH_BBOX_TRUNCATE","",""],[17,"FT_GLYPH_BBOX_PIXELS","",""],[17,"FT_FACE_FLAG_SCALABLE","",""],[17,"FT_FACE_FLAG_FIXED_SIZES","",""],[17,"FT_FACE_FLAG_FIXED_WIDTH","",""],[17,"FT_FACE_FLAG_SFNT","",""],[17,"FT_FACE_FLAG_HORIZONTAL","",""],[17,"FT_FACE_FLAG_VERTICAL","",""],[17,"FT_FACE_FLAG_KERNING","",""],[17,"FT_FACE_FLAG_FAST_GLYPHS","",""],[17,"FT_FACE_FLAG_MULTIPLE_MASTERS","",""],[17,"FT_FACE_FLAG_GLYPH_NAMES","",""],[17,"FT_FACE_FLAG_EXTERNAL_STREAM","",""],[17,"FT_FACE_FLAG_HINTER","",""],[17,"FT_FACE_FLAG_CID_KEYED","",""],[17,"FT_FACE_FLAG_TRICKY","",""],[17,"FT_FACE_FLAG_COLOR","",""],[17,"FT_STYLE_FLAG_ITALIC","",""],[17,"FT_STYLE_FLAG_BOLD","",""],[17,"FT_OPEN_MEMORY","",""],[17,"FT_OPEN_STREAM","",""],[17,"FT_OPEN_PATHNAME","",""],[17,"FT_OPEN_DRIVER","",""],[17,"FT_OPEN_PARAMS","",""],[17,"FT_SUBGLYPH_FLAG_ARGS_ARE_WORDS","",""],[17,"FT_SUBGLYPH_FLAG_ARGS_ARE_XY_VALUES","",""],[17,"FT_SUBGLYPH_FLAG_ROUND_XY_TO_GRID","",""],[17,"FT_SUBGLYPH_FLAG_SCALE","",""],[17,"FT_SUBGLYPH_FLAG_XY_SCALE","",""],[17,"FT_SUBGLYPH_FLAG_2X2","",""],[17,"FT_SUBGLYPH_FLAG_USE_MY_METRICS","",""],[17,"FT_LOAD_DEFAULT","",""],[17,"FT_LOAD_NO_SCALE","",""],[17,"FT_LOAD_NO_HINTING","",""],[17,"FT_LOAD_RENDER","",""],[17,"FT_LOAD_NO_BITMAP","",""],[17,"FT_LOAD_VERTICAL_LAYOUT","",""],[17,"FT_LOAD_FORCE_AUTOHINT","",""],[17,"FT_LOAD_CROP_BITMAP","",""],[17,"FT_LOAD_PEDANTIC","",""],[17,"FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH","",""],[17,"FT_LOAD_NO_RECURSE","",""],[17,"FT_LOAD_IGNORE_TRANSFORM","",""],[17,"FT_LOAD_MONOCHROME","",""],[17,"FT_LOAD_LINEAR_DESIGN","",""],[17,"FT_LOAD_NO_AUTOHINT","",""],[17,"FT_LOAD_COLOR","",""],[17,"FT_LOAD_TARGET_NORMAL","",""],[17,"FT_LOAD_TARGET_LIGHT","",""],[17,"FT_LOAD_TARGET_MONO","",""],[17,"FT_LOAD_TARGET_LCD","",""],[17,"FT_LOAD_TARGET_LCD_V","",""],[17,"FT_FSTYPE_INSTALLABLE_EMBEDDING","",""],[17,"FT_FSTYPE_RESTRICTED_LICENSE_EMBEDDING","",""],[17,"FT_FSTYPE_PREVIEW_AND_PRINT_EMBEDDING","",""],[17,"FT_FSTYPE_EDITABLE_EMBEDDING","",""],[17,"FT_FSTYPE_NO_SUBSETTING","",""],[17,"FT_FSTYPE_BITMAP_EMBEDDING_ONLY","",""],[17,"FT_Err_Ok","",""],[17,"FT_Err_Cannot_Open_Resource","",""],[17,"FT_Err_Unknown_File_Format","",""],[17,"FT_Err_Invalid_File_Format","",""],[17,"FT_Err_Invalid_Version","",""],[17,"FT_Err_Lower_Module_Version","",""],[17,"FT_Err_Invalid_Argument","",""],[17,"FT_Err_Unimplemented_Feature","",""],[17,"FT_Err_Invalid_Table","",""],[17,"FT_Err_Invalid_Offset","",""],[17,"FT_Err_Array_Too_Large","",""],[17,"FT_Err_Missing_Module","",""],[17,"FT_Err_Missing_Property","",""],[17,"FT_Err_Invalid_Glyph_Index","",""],[17,"FT_Err_Invalid_Character_Code","",""],[17,"FT_Err_Invalid_Glyph_Format","",""],[17,"FT_Err_Cannot_Render_Glyph","",""],[17,"FT_Err_Invalid_Outline","",""],[17,"FT_Err_Invalid_Composite","",""],[17,"FT_Err_Too_Many_Hints","",""],[17,"FT_Err_Invalid_Pixel_Size","",""],[17,"FT_Err_Invalid_Handle","",""],[17,"FT_Err_Invalid_Library_Handle","",""],[17,"FT_Err_Invalid_Driver_Handle","",""],[17,"FT_Err_Invalid_Face_Handle","",""],[17,"FT_Err_Invalid_Size_Handle","",""],[17,"FT_Err_Invalid_Slot_Handle","",""],[17,"FT_Err_Invalid_CharMap_Handle","",""],[17,"FT_Err_Invalid_Cache_Handle","",""],[17,"FT_Err_Invalid_Stream_Handle","",""],[17,"FT_Err_Too_Many_Drivers","",""],[17,"FT_Err_Too_Many_Extensions","",""],[17,"FT_Err_Out_Of_Memory","",""],[17,"FT_Err_Unlisted_Object","",""],[17,"FT_Err_Cannot_Open_Stream","",""],[17,"FT_Err_Invalid_Stream_Seek","",""],[17,"FT_Err_Invalid_Stream_Skip","",""],[17,"FT_Err_Invalid_Stream_Read","",""],[17,"FT_Err_Invalid_Stream_Operation","",""],[17,"FT_Err_Invalid_Frame_Operation","",""],[17,"FT_Err_Nested_Frame_Access","",""],[17,"FT_Err_Invalid_Frame_Read","",""],[17,"FT_Err_Raster_Uninitialized","",""],[17,"FT_Err_Raster_Corrupted","",""],[17,"FT_Err_Raster_Overflow","",""],[17,"FT_Err_Raster_Negative_Height","",""],[17,"FT_Err_Too_Many_Caches","",""],[17,"FT_Err_Invalid_Opcode","",""],[17,"FT_Err_Too_Few_Arguments","",""],[17,"FT_Err_Stack_Overflow","",""],[17,"FT_Err_Code_Overflow","",""],[17,"FT_Err_Bad_Argument","",""],[17,"FT_Err_Divide_By_Zero","",""],[17,"FT_Err_Invalid_Reference","",""],[17,"FT_Err_Debug_OpCode","",""],[17,"FT_Err_ENDF_In_Exec_Stream","",""],[17,"FT_Err_Nested_DEFS","",""],[17,"FT_Err_Invalid_CodeRange","",""],[17,"FT_Err_Execution_Too_Long","",""],[17,"FT_Err_Too_Many_Function_Defs","",""],[17,"FT_Err_Too_Many_Instruction_Defs","",""],[17,"FT_Err_Table_Missing","",""],[17,"FT_Err_Horiz_Header_Missing","",""],[17,"FT_Err_Locations_Missing","",""],[17,"FT_Err_Name_Table_Missing","",""],[17,"FT_Err_CMap_Table_Missing","",""],[17,"FT_Err_Hmtx_Table_Missing","",""],[17,"FT_Err_Post_Table_Missing","",""],[17,"FT_Err_Invalid_Horiz_Metrics","",""],[17,"FT_Err_Invalid_CharMap_Format","",""],[17,"FT_Err_Invalid_PPem","",""],[17,"FT_Err_Invalid_Vert_Metrics","",""],[17,"FT_Err_Could_Not_Find_Context","",""],[17,"FT_Err_Invalid_Post_Table_Format","",""],[17,"FT_Err_Invalid_Post_Table","",""],[17,"FT_Err_Syntax_Error","",""],[17,"FT_Err_Stack_Underflow","",""],[17,"FT_Err_Ignore","",""],[17,"FT_Err_No_Unicode_Glyph_Name","",""],[17,"FT_Err_Missing_Startfont_Field","",""],[17,"FT_Err_Missing_Font_Field","",""],[17,"FT_Err_Missing_Size_Field","",""],[17,"FT_Err_Missing_Fontboundingbox_Field","",""],[17,"FT_Err_Missing_Chars_Field","",""],[17,"FT_Err_Missing_Startchar_Field","",""],[17,"FT_Err_Missing_Encoding_Field","",""],[17,"FT_Err_Missing_Bbx_Field","",""],[17,"FT_Err_Bbx_Too_Big","",""],[17,"FT_Err_Corrupted_Font_Header","",""],[17,"FT_Err_Corrupted_Font_Glyphs","",""],[17,"FT_Err_Max","",""],[8,"FTErrorMethods","",""],[10,"succeeded","","",26],[11,"succeeded","","",27]],"paths":[[3,"FT_Vector"],[3,"FT_BBox"],[3,"FT_Matrix"],[3,"FT_UnitVector"],[3,"FT_Bitmap"],[3,"FT_Data"],[3,"FT_Generic"],[3,"FT_Size_Metrics"],[3,"FT_Outline"],[3,"FT_Glyph_Metrics"],[3,"FT_Parameter"],[3,"FT_Open_Args"],[3,"FT_Bitmap_Size"],[3,"TT_OS2"],[3,"FT_CharMapRec"],[3,"FT_FaceRec"],[3,"FT_GlyphSlotRec"],[3,"FT_SizeRec"],[3,"FT_StreamRec"],[3,"FT_MemoryRec"],[3,"FT_ListRec"],[3,"FT_ListNodeRec"],[3,"FT_Size_RequestRec"],[3,"FT_GlyphRec"],[3,"FT_BitmapGlyphRec"],[3,"FT_OutlineGlyphRec"],[8,"FTErrorMethods"],[6,"FT_Error"]]};

searchIndex['libz-sys'] = {"items":[],"paths":[]};

searchIndex['event_loop'] = {"items":[[0,"","event_loop","A generic event loop for games and interactive applications"],[3,"ShouldClose","","Whether window should close or not."],[3,"Size","","The size of the window."],[3,"SwapBuffers","","Tells window to swap buffers."],[3,"PollEvent","","Polls event from window."],[3,"RenderArgs","","Render arguments"],[12,"ext_dt","","Extrapolated time in seconds, used to do smooth animation.",0],[12,"width","","The width of rendered area.",0],[12,"height","","The height of rendered area.",0],[3,"UpdateArgs","","Update arguments, such as delta time in seconds"],[12,"dt","","Delta time in seconds.",1],[3,"IdleArgs","","Idle arguments, such as expected idle time in seconds."],[12,"dt","","Expected idle time in seconds.",2],[3,"Ups","","The number of updates per second"],[3,"MaxFps","","The maximum number of frames per second"],[3,"Events","","An event loop iterator"],[17,"DEFAULT_UPS","","The default updates per second."],[17,"DEFAULT_MAX_FPS","","The default maximum frames per second."],[8,"EventMap","","Methods required to map from consumed event to emitted event."],[10,"render","","Creates a render event.",3],[10,"update","","Creates an update event.",3],[10,"input","","Creates an input event.",3],[10,"idle","","Creates an idle event.",3],[11,"fmt","","",0],[11,"eq","","",0],[11,"ne","","",0],[11,"clone","","",0],[11,"fmt","","",1],[11,"eq","","",1],[11,"ne","","",1],[11,"clone","","",1],[11,"fmt","","",2],[11,"eq","","",2],[11,"ne","","",2],[11,"clone","","",2],[11,"new","","Creates a new event iterator with default UPS and FPS settings.",4],[6,"Item","",""],[11,"next","","Returns the next game event.",4]],"paths":[[3,"RenderArgs"],[3,"UpdateArgs"],[3,"IdleArgs"],[8,"EventMap"],[3,"Events"]]};

searchIndex['gl_common'] = {"items":[[0,"","gl_common","Defines everything used by `gl_generator`."],[8,"GlFunctionsSource","",""],[10,"get_proc_addr","","",0]],"paths":[[8,"GlFunctionsSource"]]};

searchIndex['pkg-config'] = {"items":[[0,"","pkg-config","A build dependency for Cargo libraries to find system artifacts through the\n`pkg-config` utility."],[3,"Config","",""],[3,"Library","",""],[12,"libs","","",0],[12,"link_paths","","",0],[12,"frameworks","","",0],[12,"framework_paths","","",0],[12,"include_paths","","",0],[5,"target_supported","",""],[5,"find_library","","Simple shortcut for using all default options for finding a library."],[11,"clone","","",1],[11,"fmt","","",0],[11,"new","","Creates a new set of configuration options which are all initially set\nto \"blank\".",1],[11,"statik","","Indicate whether the `--static` flag should be passed.",1],[11,"atleast_version","","Indicate that the library must be at least version `vers`.",1],[11,"find","","Run `pkg-config` to find the library `name`.",1]],"paths":[[3,"Library"],[3,"Config"]]};

searchIndex['interpolation'] = {"items":[[0,"","interpolation","Interpolation algorithms."],[4,"EaseFunction","",""],[13,"QuadraticIn","","",0],[13,"QuadraticOut","","",0],[13,"QuadraticInOut","","",0],[13,"CubicIn","","",0],[13,"CubicOut","","",0],[13,"CubicInOut","","",0],[13,"QuarticIn","","",0],[13,"QuarticOut","","",0],[13,"QuarticInOut","","",0],[13,"QuinticIn","","",0],[13,"QuinticOut","","",0],[13,"QuinticInOut","","",0],[13,"SineIn","","",0],[13,"SineOut","","",0],[13,"SineInOut","","",0],[13,"CircularIn","","",0],[13,"CircularOut","","",0],[13,"CircularInOut","","",0],[13,"ExponentialIn","","",0],[13,"ExponentialOut","","",0],[13,"ExponentialInOut","","",0],[13,"ElasticIn","","",0],[13,"ElasticOut","","",0],[13,"ElasticInOut","","",0],[13,"BackIn","","",0],[13,"BackOut","","",0],[13,"BackInOut","","",0],[13,"BounceIn","","",0],[13,"BounceOut","","",0],[13,"BounceInOut","","",0],[5,"lerp","","Performs linear interpolation.\nA linear interpolation consists of two states 'a' and 'b'.\nThe 't' variable is a factor between 0 and 1 that\ngives weight to 'a' or 'b'.\nWhen 't' is zero then 'a' has full weight.\nWhen 't' is one then 'b' has full weight."],[5,"quad_bez","","Performs quadratic beziér interpolation.\nThis is done by nesting linear interpolations.\nFor more information, see:"],[5,"cub_bez","","Performs cubic beziér interpolation.\nThis is done by interpolation between two quadratic beziér.\nFor more information, see:"],[11,"eq","","",0],[11,"ne","","",0],[11,"clone","","",0],[8,"Ease","",""],[10,"calc","","Calculate the eased value, normalized",1],[10,"quadratic_in","","",1],[10,"quadratic_out","","",1],[10,"quadratic_in_out","","",1],[10,"cubic_in","","",1],[10,"cubic_out","","",1],[10,"cubic_in_out","","",1],[10,"quartic_in","","",1],[10,"quartic_out","","",1],[10,"quartic_in_out","","",1],[10,"quintic_in","","",1],[10,"quintic_out","","",1],[10,"quintic_in_out","","",1],[10,"sine_in","","",1],[10,"sine_out","","",1],[10,"sine_in_out","","",1],[10,"circular_in","","",1],[10,"circular_out","","",1],[10,"circular_in_out","","",1],[10,"exponential_in","","",1],[10,"exponential_out","","",1],[10,"exponential_in_out","","",1],[10,"elastic_in","","",1],[10,"elastic_out","","",1],[10,"elastic_in_out","","",1],[10,"back_in","","",1],[10,"back_out","","",1],[10,"back_in_out","","",1],[10,"bounce_in","","",1],[10,"bounce_out","","",1],[10,"bounce_in_out","","",1],[8,"Spatial","","Used for interpolation over spatial structures."],[16,"Scalar","interpolation::Spatial","The scalar type."],[10,"add","interpolation","Add",2],[10,"sub","","Subtract",2],[10,"scale","","Scales with a scalar.",2]],"paths":[[4,"EaseFunction"],[8,"Ease"],[8,"Spatial"]]};

searchIndex['log'] = {"items":[[0,"","log","A lightweight logging facade."],[3,"LogRecord","","The \"payload\" of a log message."],[3,"LogLocation","","The location of a log message."],[12,"module_path","","The module path of the message.",0],[12,"file","","The source file containing the message.",0],[12,"line","","The line containing the message.",0],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level\nfilter."],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called."],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework"],[13,"Error","","The \"error\" level.",1],[13,"Warn","","The \"warn\" level.",1],[13,"Info","","The \"info\" level.",1],[13,"Debug","","The \"debug\" level.",1],[13,"Trace","","The \"trace\" level.",1],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging\nframework."],[13,"Off","","A level lower than all log levels.",2],[13,"Error","","Corresponds to the `Error` log level.",2],[13,"Warn","","Corresponds to the `Warn` log level.",2],[13,"Info","","Corresponds to the `Trace` log level.",2],[13,"Debug","","Corresponds to the `Debug` log level.",2],[13,"Trace","","Corresponds to the `Trace` log level.",2],[5,"max_log_level","","Returns the current maximum log level."],[5,"set_logger","","Sets the global logger."],[5,"enabled","","Determines if the current logger will ignore a log message at the specified\nlevel from the specified module."],[5,"log","","Logs a message."],[8,"Log","","A trait encapsulating the operations required of a logger"],[10,"enabled","","Determines if a log message sent at the specified level from the\nspecified module would be logged.",3],[10,"log","","Logs the `LogRecord`.",3],[11,"fmt","","",1],[11,"clone","","",1],[11,"eq","","",1],[11,"eq","","",1],[11,"partial_cmp","","",1],[11,"partial_cmp","","",1],[11,"cmp","","",1],[6,"Err","",""],[11,"from_str","","",1],[11,"fmt","","",1],[11,"max","","Returns the most verbose logging level.",1],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",1],[11,"fmt","","",2],[11,"clone","","",2],[11,"eq","","",2],[11,"eq","","",2],[11,"partial_cmp","","",2],[11,"partial_cmp","","",2],[11,"cmp","","",2],[6,"Err","",""],[11,"from_str","","",2],[11,"fmt","","",2],[11,"max","","Returns the most verbose logging level filter.",2],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",2],[11,"new","","Creates a new `LogRecord`.",4],[11,"args","","The message body.",4],[11,"location","","The location of the log directive.",4],[11,"level","","The verbosity level of the message.",4],[11,"fmt","","",0],[11,"clone","","",0],[11,"fmt","","",5],[11,"get","","Gets the current maximum log level filter.",5],[11,"set","","Sets the maximum log level.",5],[11,"fmt","","",6],[11,"fmt","","",6],[14,"log!","","The standard logging macro."],[14,"error!","","Logs a message at the error level."],[14,"warn!","","Logs a message at the warn level."],[14,"info!","","Logs a message at the info level."],[14,"debug!","","Logs a message at the debug level."],[14,"trace!","","Logs a message at the trace level."],[14,"log_enabled!","","Determines if a message logged at the specified level in that module will\nbe logged."]],"paths":[[3,"LogLocation"],[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"]]};

searchIndex['libc'] = {"items":[[0,"","libc","Bindings for the C standard library and other platform libraries"],[0,"types","",""],[0,"common","libc::types",""],[0,"c95","libc::types::common",""],[4,"c_void","libc::types::common::c95","Type used to construct void pointers for use with C."],[13,"__variant1","","",0],[13,"__variant2","","",0],[4,"FILE","",""],[4,"fpos_t","",""],[0,"c99","libc::types::common",""],[6,"int8_t","libc::types::common::c99",""],[6,"int16_t","",""],[6,"int32_t","",""],[6,"int64_t","",""],[6,"uint8_t","",""],[6,"uint16_t","",""],[6,"uint32_t","",""],[6,"uint64_t","",""],[0,"posix88","libc::types::common",""],[4,"DIR","libc::types::common::posix88",""],[4,"dirent_t","",""],[0,"os","libc::types",""],[0,"common","libc::types::os",""],[0,"posix01","libc::types::os::common",""],[3,"glob_t","libc::types::os::common::posix01",""],[12,"gl_pathc","","",1],[12,"gl_pathv","","",1],[12,"gl_offs","","",1],[12,"__unused1","","",1],[12,"__unused2","","",1],[12,"__unused3","","",1],[12,"__unused4","","",1],[12,"__unused5","","",1],[3,"timeval","",""],[12,"tv_sec","","",2],[12,"tv_usec","","",2],[3,"timespec","",""],[12,"tv_sec","","",3],[12,"tv_nsec","","",3],[4,"timezone","",""],[6,"pthread_t","",""],[6,"sighandler_t","",""],[0,"bsd44","libc::types::os::common",""],[3,"sockaddr","libc::types::os::common::bsd44",""],[12,"sa_family","","",4],[12,"sa_data","","",4],[3,"sockaddr_storage","",""],[12,"ss_family","","",5],[12,"__ss_align","","",5],[12,"__ss_pad2","","",5],[3,"sockaddr_in","",""],[12,"sin_family","","",6],[12,"sin_port","","",6],[12,"sin_addr","","",6],[12,"sin_zero","","",6],[3,"in_addr","",""],[12,"s_addr","","",7],[3,"sockaddr_in6","",""],[12,"sin6_family","","",8],[12,"sin6_port","","",8],[12,"sin6_flowinfo","","",8],[12,"sin6_addr","","",8],[12,"sin6_scope_id","","",8],[3,"in6_addr","",""],[12,"s6_addr","","",9],[3,"ip_mreq","",""],[12,"imr_multiaddr","","",10],[12,"imr_interface","","",10],[3,"ip6_mreq","",""],[12,"ipv6mr_multiaddr","","",11],[12,"ipv6mr_interface","","",11],[3,"addrinfo","",""],[12,"ai_flags","","",12],[12,"ai_family","","",12],[12,"ai_socktype","","",12],[12,"ai_protocol","","",12],[12,"ai_addrlen","","",12],[12,"ai_addr","","",12],[12,"ai_canonname","","",12],[12,"ai_next","","",12],[3,"sockaddr_un","",""],[12,"sun_family","","",13],[12,"sun_path","","",13],[3,"ifaddrs","",""],[12,"ifa_next","","",14],[12,"ifa_name","","",14],[12,"ifa_flags","","",14],[12,"ifa_addr","","",14],[12,"ifa_netmask","","",14],[12,"ifa_ifu","","",14],[12,"ifa_data","","",14],[6,"socklen_t","",""],[6,"sa_family_t","",""],[6,"in_port_t","",""],[6,"in_addr_t","",""],[0,"arch","libc::types::os",""],[0,"c95","libc::types::os::arch",""],[6,"c_char","libc::types::os::arch::c95",""],[6,"c_schar","",""],[6,"c_uchar","",""],[6,"c_short","",""],[6,"c_ushort","",""],[6,"c_int","",""],[6,"c_uint","",""],[6,"c_long","",""],[6,"c_ulong","",""],[6,"c_float","",""],[6,"c_double","",""],[6,"size_t","",""],[6,"ptrdiff_t","",""],[6,"clock_t","",""],[6,"time_t","",""],[6,"suseconds_t","",""],[6,"wchar_t","",""],[0,"c99","libc::types::os::arch",""],[6,"c_longlong","libc::types::os::arch::c99",""],[6,"c_ulonglong","",""],[6,"intptr_t","",""],[6,"uintptr_t","",""],[6,"intmax_t","",""],[6,"uintmax_t","",""],[0,"posix88","libc::types::os::arch",""],[6,"off_t","libc::types::os::arch::posix88",""],[6,"dev_t","",""],[6,"ino_t","",""],[6,"pid_t","",""],[6,"uid_t","",""],[6,"gid_t","",""],[6,"useconds_t","",""],[6,"mode_t","",""],[6,"ssize_t","",""],[0,"posix01","libc::types::os::arch",""],[3,"stat","libc::types::os::arch::posix01",""],[12,"st_dev","","",15],[12,"st_ino","","",15],[12,"st_nlink","","",15],[12,"st_mode","","",15],[12,"st_uid","","",15],[12,"st_gid","","",15],[12,"__pad0","","",15],[12,"st_rdev","","",15],[12,"st_size","","",15],[12,"st_blksize","","",15],[12,"st_blocks","","",15],[12,"st_atime","","",15],[12,"st_atime_nsec","","",15],[12,"st_mtime","","",15],[12,"st_mtime_nsec","","",15],[12,"st_ctime","","",15],[12,"st_ctime_nsec","","",15],[12,"__unused","","",15],[3,"utimbuf","",""],[12,"actime","","",16],[12,"modtime","","",16],[3,"pthread_attr_t","",""],[12,"__size","","",17],[6,"nlink_t","",""],[6,"blksize_t","",""],[6,"blkcnt_t","",""],[0,"extra","libc::types::os::arch",""],[3,"sockaddr_ll","libc::types::os::arch::extra",""],[12,"sll_family","","",18],[12,"sll_protocol","","",18],[12,"sll_ifindex","","",18],[12,"sll_hatype","","",18],[12,"sll_pkttype","","",18],[12,"sll_halen","","",18],[12,"sll_addr","","",18],[0,"consts","libc",""],[0,"os","libc::consts",""],[0,"c95","libc::consts::os",""],[17,"EXIT_FAILURE","libc::consts::os::c95",""],[17,"EXIT_SUCCESS","",""],[17,"RAND_MAX","",""],[17,"EOF","",""],[17,"SEEK_SET","",""],[17,"SEEK_CUR","",""],[17,"SEEK_END","",""],[17,"_IOFBF","",""],[17,"_IONBF","",""],[17,"_IOLBF","",""],[17,"BUFSIZ","",""],[17,"FOPEN_MAX","",""],[17,"FILENAME_MAX","",""],[17,"L_tmpnam","",""],[17,"TMP_MAX","",""],[0,"posix88","libc::consts::os",""],[17,"O_RDONLY","libc::consts::os::posix88",""],[17,"O_WRONLY","",""],[17,"O_RDWR","",""],[17,"O_APPEND","",""],[17,"O_CREAT","",""],[17,"O_EXCL","",""],[17,"O_TRUNC","",""],[17,"S_IFIFO","",""],[17,"S_IFCHR","",""],[17,"S_IFBLK","",""],[17,"S_IFDIR","",""],[17,"S_IFREG","",""],[17,"S_IFLNK","",""],[17,"S_IFMT","",""],[17,"S_IEXEC","",""],[17,"S_IWRITE","",""],[17,"S_IREAD","",""],[17,"S_IRWXU","",""],[17,"S_IXUSR","",""],[17,"S_IWUSR","",""],[17,"S_IRUSR","",""],[17,"F_OK","",""],[17,"R_OK","",""],[17,"W_OK","",""],[17,"X_OK","",""],[17,"STDIN_FILENO","",""],[17,"STDOUT_FILENO","",""],[17,"STDERR_FILENO","",""],[17,"F_LOCK","",""],[17,"F_TEST","",""],[17,"F_TLOCK","",""],[17,"F_ULOCK","",""],[17,"SIGHUP","",""],[17,"SIGINT","",""],[17,"SIGQUIT","",""],[17,"SIGILL","",""],[17,"SIGABRT","",""],[17,"SIGFPE","",""],[17,"SIGKILL","",""],[17,"SIGSEGV","",""],[17,"SIGPIPE","",""],[17,"SIGALRM","",""],[17,"SIGTERM","",""],[17,"PROT_NONE","",""],[17,"PROT_READ","",""],[17,"PROT_WRITE","",""],[17,"PROT_EXEC","",""],[17,"MAP_FILE","",""],[17,"MAP_SHARED","",""],[17,"MAP_PRIVATE","",""],[17,"MAP_FIXED","",""],[17,"MAP_ANON","",""],[17,"MAP_FAILED","",""],[17,"MCL_CURRENT","",""],[17,"MCL_FUTURE","",""],[17,"MS_ASYNC","",""],[17,"MS_INVALIDATE","",""],[17,"MS_SYNC","",""],[17,"EPERM","",""],[17,"ENOENT","",""],[17,"ESRCH","",""],[17,"EINTR","",""],[17,"EIO","",""],[17,"ENXIO","",""],[17,"E2BIG","",""],[17,"ENOEXEC","",""],[17,"EBADF","",""],[17,"ECHILD","",""],[17,"EAGAIN","",""],[17,"ENOMEM","",""],[17,"EACCES","",""],[17,"EFAULT","",""],[17,"ENOTBLK","",""],[17,"EBUSY","",""],[17,"EEXIST","",""],[17,"EXDEV","",""],[17,"ENODEV","",""],[17,"ENOTDIR","",""],[17,"EISDIR","",""],[17,"EINVAL","",""],[17,"ENFILE","",""],[17,"EMFILE","",""],[17,"ENOTTY","",""],[17,"ETXTBSY","",""],[17,"EFBIG","",""],[17,"ENOSPC","",""],[17,"ESPIPE","",""],[17,"EROFS","",""],[17,"EMLINK","",""],[17,"EPIPE","",""],[17,"EDOM","",""],[17,"ERANGE","",""],[17,"EDEADLK","",""],[17,"ENAMETOOLONG","",""],[17,"ENOLCK","",""],[17,"ENOSYS","",""],[17,"ENOTEMPTY","",""],[17,"ELOOP","",""],[17,"EWOULDBLOCK","",""],[17,"ENOMSG","",""],[17,"EIDRM","",""],[17,"ECHRNG","",""],[17,"EL2NSYNC","",""],[17,"EL3HLT","",""],[17,"EL3RST","",""],[17,"ELNRNG","",""],[17,"EUNATCH","",""],[17,"ENOCSI","",""],[17,"EL2HLT","",""],[17,"EBADE","",""],[17,"EBADR","",""],[17,"EXFULL","",""],[17,"ENOANO","",""],[17,"EBADRQC","",""],[17,"EBADSLT","",""],[17,"EDEADLOCK","",""],[17,"EBFONT","",""],[17,"ENOSTR","",""],[17,"ENODATA","",""],[17,"ETIME","",""],[17,"ENOSR","",""],[17,"ENONET","",""],[17,"ENOPKG","",""],[17,"EREMOTE","",""],[17,"ENOLINK","",""],[17,"EADV","",""],[17,"ESRMNT","",""],[17,"ECOMM","",""],[17,"EPROTO","",""],[17,"EMULTIHOP","",""],[17,"EDOTDOT","",""],[17,"EBADMSG","",""],[17,"EOVERFLOW","",""],[17,"ENOTUNIQ","",""],[17,"EBADFD","",""],[17,"EREMCHG","",""],[17,"ELIBACC","",""],[17,"ELIBBAD","",""],[17,"ELIBSCN","",""],[17,"ELIBMAX","",""],[17,"ELIBEXEC","",""],[17,"EILSEQ","",""],[17,"ERESTART","",""],[17,"ESTRPIPE","",""],[17,"EUSERS","",""],[17,"ENOTSOCK","",""],[17,"EDESTADDRREQ","",""],[17,"EMSGSIZE","",""],[17,"EPROTOTYPE","",""],[17,"ENOPROTOOPT","",""],[17,"EPROTONOSUPPORT","",""],[17,"ESOCKTNOSUPPORT","",""],[17,"EOPNOTSUPP","",""],[17,"EPFNOSUPPORT","",""],[17,"EAFNOSUPPORT","",""],[17,"EADDRINUSE","",""],[17,"EADDRNOTAVAIL","",""],[17,"ENETDOWN","",""],[17,"ENETUNREACH","",""],[17,"ENETRESET","",""],[17,"ECONNABORTED","",""],[17,"ECONNRESET","",""],[17,"ENOBUFS","",""],[17,"EISCONN","",""],[17,"ENOTCONN","",""],[17,"ESHUTDOWN","",""],[17,"ETOOMANYREFS","",""],[17,"ETIMEDOUT","",""],[17,"ECONNREFUSED","",""],[17,"EHOSTDOWN","",""],[17,"EHOSTUNREACH","",""],[17,"EALREADY","",""],[17,"EINPROGRESS","",""],[17,"ESTALE","",""],[17,"EUCLEAN","",""],[17,"ENOTNAM","",""],[17,"ENAVAIL","",""],[17,"EISNAM","",""],[17,"EREMOTEIO","",""],[17,"EDQUOT","",""],[17,"ENOMEDIUM","",""],[17,"EMEDIUMTYPE","",""],[17,"ECANCELED","",""],[17,"ENOKEY","",""],[17,"EKEYEXPIRED","",""],[17,"EKEYREVOKED","",""],[17,"EKEYREJECTED","",""],[17,"EOWNERDEAD","",""],[17,"ENOTRECOVERABLE","",""],[17,"ERFKILL","",""],[17,"EHWPOISON","",""],[0,"posix01","libc::consts::os",""],[17,"F_DUPFD","libc::consts::os::posix01",""],[17,"F_GETFD","",""],[17,"F_SETFD","",""],[17,"F_GETFL","",""],[17,"F_SETFL","",""],[17,"SIGTRAP","",""],[17,"SIGPIPE","",""],[17,"SIG_IGN","",""],[17,"GLOB_ERR","",""],[17,"GLOB_MARK","",""],[17,"GLOB_NOSORT","",""],[17,"GLOB_DOOFFS","",""],[17,"GLOB_NOCHECK","",""],[17,"GLOB_APPEND","",""],[17,"GLOB_NOESCAPE","",""],[17,"GLOB_NOSPACE","",""],[17,"GLOB_ABORTED","",""],[17,"GLOB_NOMATCH","",""],[17,"POSIX_MADV_NORMAL","",""],[17,"POSIX_MADV_RANDOM","",""],[17,"POSIX_MADV_SEQUENTIAL","",""],[17,"POSIX_MADV_WILLNEED","",""],[17,"POSIX_MADV_DONTNEED","",""],[17,"_SC_MQ_PRIO_MAX","",""],[17,"_SC_IOV_MAX","",""],[17,"_SC_GETGR_R_SIZE_MAX","",""],[17,"_SC_GETPW_R_SIZE_MAX","",""],[17,"_SC_LOGIN_NAME_MAX","",""],[17,"_SC_TTY_NAME_MAX","",""],[17,"_SC_THREADS","",""],[17,"_SC_THREAD_SAFE_FUNCTIONS","",""],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","",""],[17,"_SC_THREAD_KEYS_MAX","",""],[17,"_SC_THREAD_STACK_MIN","",""],[17,"_SC_THREAD_THREADS_MAX","",""],[17,"_SC_THREAD_ATTR_STACKADDR","",""],[17,"_SC_THREAD_ATTR_STACKSIZE","",""],[17,"_SC_THREAD_PRIORITY_SCHEDULING","",""],[17,"_SC_THREAD_PRIO_INHERIT","",""],[17,"_SC_THREAD_PRIO_PROTECT","",""],[17,"_SC_THREAD_PROCESS_SHARED","",""],[17,"_SC_ATEXIT_MAX","",""],[17,"_SC_XOPEN_VERSION","",""],[17,"_SC_XOPEN_XCU_VERSION","",""],[17,"_SC_XOPEN_UNIX","",""],[17,"_SC_XOPEN_CRYPT","",""],[17,"_SC_XOPEN_ENH_I18N","",""],[17,"_SC_XOPEN_SHM","",""],[17,"_SC_XOPEN_LEGACY","",""],[17,"_SC_XOPEN_REALTIME","",""],[17,"_SC_XOPEN_REALTIME_THREADS","",""],[17,"PTHREAD_CREATE_JOINABLE","",""],[17,"PTHREAD_CREATE_DETACHED","",""],[17,"PTHREAD_STACK_MIN","",""],[17,"CLOCK_REALTIME","",""],[17,"CLOCK_MONOTONIC","",""],[0,"bsd44","libc::consts::os",""],[17,"MADV_NORMAL","libc::consts::os::bsd44",""],[17,"MADV_RANDOM","",""],[17,"MADV_SEQUENTIAL","",""],[17,"MADV_WILLNEED","",""],[17,"MADV_DONTNEED","",""],[17,"MADV_REMOVE","",""],[17,"MADV_DONTFORK","",""],[17,"MADV_DOFORK","",""],[17,"MADV_MERGEABLE","",""],[17,"MADV_UNMERGEABLE","",""],[17,"MADV_HWPOISON","",""],[17,"IFF_LOOPBACK","",""],[17,"AF_UNIX","",""],[17,"AF_INET","",""],[17,"AF_INET6","",""],[17,"SOCK_STREAM","",""],[17,"SOCK_DGRAM","",""],[17,"SOCK_RAW","",""],[17,"IPPROTO_TCP","",""],[17,"IPPROTO_IP","",""],[17,"IPPROTO_IPV6","",""],[17,"IP_MULTICAST_TTL","",""],[17,"IP_MULTICAST_LOOP","",""],[17,"IP_TTL","",""],[17,"IP_HDRINCL","",""],[17,"IP_ADD_MEMBERSHIP","",""],[17,"IP_DROP_MEMBERSHIP","",""],[17,"IPV6_ADD_MEMBERSHIP","",""],[17,"IPV6_DROP_MEMBERSHIP","",""],[17,"TCP_NODELAY","",""],[17,"SOL_SOCKET","",""],[17,"SO_KEEPALIVE","",""],[17,"SO_BROADCAST","",""],[17,"SO_REUSEADDR","",""],[17,"SO_ERROR","",""],[17,"SHUT_RD","",""],[17,"SHUT_WR","",""],[17,"SHUT_RDWR","",""],[0,"extra","libc::consts::os",""],[17,"AF_PACKET","libc::consts::os::extra",""],[17,"IPPROTO_RAW","",""],[17,"O_RSYNC","",""],[17,"O_DSYNC","",""],[17,"O_NONBLOCK","",""],[17,"O_SYNC","",""],[17,"PROT_GROWSDOWN","",""],[17,"PROT_GROWSUP","",""],[17,"MAP_TYPE","",""],[17,"MAP_ANONYMOUS","",""],[17,"MAP_32BIT","",""],[17,"MAP_GROWSDOWN","",""],[17,"MAP_DENYWRITE","",""],[17,"MAP_EXECUTABLE","",""],[17,"MAP_LOCKED","",""],[17,"MAP_NONRESERVE","",""],[17,"MAP_POPULATE","",""],[17,"MAP_NONBLOCK","",""],[17,"MAP_STACK","",""],[0,"sysconf","libc::consts::os",""],[17,"_SC_ARG_MAX","libc::consts::os::sysconf",""],[17,"_SC_CHILD_MAX","",""],[17,"_SC_CLK_TCK","",""],[17,"_SC_NGROUPS_MAX","",""],[17,"_SC_OPEN_MAX","",""],[17,"_SC_STREAM_MAX","",""],[17,"_SC_TZNAME_MAX","",""],[17,"_SC_JOB_CONTROL","",""],[17,"_SC_SAVED_IDS","",""],[17,"_SC_REALTIME_SIGNALS","",""],[17,"_SC_PRIORITY_SCHEDULING","",""],[17,"_SC_TIMERS","",""],[17,"_SC_ASYNCHRONOUS_IO","",""],[17,"_SC_PRIORITIZED_IO","",""],[17,"_SC_SYNCHRONIZED_IO","",""],[17,"_SC_FSYNC","",""],[17,"_SC_MAPPED_FILES","",""],[17,"_SC_MEMLOCK","",""],[17,"_SC_MEMLOCK_RANGE","",""],[17,"_SC_MEMORY_PROTECTION","",""],[17,"_SC_MESSAGE_PASSING","",""],[17,"_SC_SEMAPHORES","",""],[17,"_SC_SHARED_MEMORY_OBJECTS","",""],[17,"_SC_AIO_LISTIO_MAX","",""],[17,"_SC_AIO_MAX","",""],[17,"_SC_AIO_PRIO_DELTA_MAX","",""],[17,"_SC_DELAYTIMER_MAX","",""],[17,"_SC_MQ_OPEN_MAX","",""],[17,"_SC_VERSION","",""],[17,"_SC_PAGESIZE","",""],[17,"_SC_RTSIG_MAX","",""],[17,"_SC_SEM_NSEMS_MAX","",""],[17,"_SC_SEM_VALUE_MAX","",""],[17,"_SC_SIGQUEUE_MAX","",""],[17,"_SC_TIMER_MAX","",""],[17,"_SC_BC_BASE_MAX","",""],[17,"_SC_BC_DIM_MAX","",""],[17,"_SC_BC_SCALE_MAX","",""],[17,"_SC_BC_STRING_MAX","",""],[17,"_SC_COLL_WEIGHTS_MAX","",""],[17,"_SC_EXPR_NEST_MAX","",""],[17,"_SC_LINE_MAX","",""],[17,"_SC_RE_DUP_MAX","",""],[17,"_SC_2_VERSION","",""],[17,"_SC_2_C_BIND","",""],[17,"_SC_2_C_DEV","",""],[17,"_SC_2_FORT_DEV","",""],[17,"_SC_2_FORT_RUN","",""],[17,"_SC_2_SW_DEV","",""],[17,"_SC_2_LOCALEDEF","",""],[17,"_SC_2_CHAR_TERM","",""],[17,"_SC_2_C_VERSION","",""],[17,"_SC_2_UPE","",""],[17,"_SC_XBS5_ILP32_OFF32","",""],[17,"_SC_XBS5_ILP32_OFFBIG","",""],[17,"_SC_XBS5_LPBIG_OFFBIG","",""],[0,"funcs","libc",""],[0,"c95","libc::funcs",""],[0,"ctype","libc::funcs::c95",""],[5,"isalnum","libc::funcs::c95::ctype",""],[5,"isalpha","",""],[5,"iscntrl","",""],[5,"isdigit","",""],[5,"isgraph","",""],[5,"islower","",""],[5,"isprint","",""],[5,"ispunct","",""],[5,"isspace","",""],[5,"isupper","",""],[5,"isxdigit","",""],[5,"tolower","",""],[5,"toupper","",""],[0,"stdio","libc::funcs::c95",""],[5,"fopen","libc::funcs::c95::stdio",""],[5,"freopen","",""],[5,"fflush","",""],[5,"fclose","",""],[5,"remove","",""],[5,"rename","",""],[5,"tmpfile","",""],[5,"setvbuf","",""],[5,"setbuf","",""],[5,"fgetc","",""],[5,"fgets","",""],[5,"fputc","",""],[5,"fputs","",""],[5,"puts","",""],[5,"ungetc","",""],[5,"fread","",""],[5,"fwrite","",""],[5,"fseek","",""],[5,"ftell","",""],[5,"rewind","",""],[5,"fgetpos","",""],[5,"fsetpos","",""],[5,"feof","",""],[5,"ferror","",""],[5,"perror","",""],[0,"stdlib","libc::funcs::c95",""],[5,"abs","libc::funcs::c95::stdlib",""],[5,"labs","",""],[5,"atof","",""],[5,"atoi","",""],[5,"strtod","",""],[5,"strtol","",""],[5,"strtoul","",""],[5,"calloc","",""],[5,"malloc","",""],[5,"realloc","",""],[5,"free","",""],[5,"exit","","Exits the running program in a possibly dangerous manner."],[5,"_exit","",""],[5,"atexit","",""],[5,"system","",""],[5,"getenv","",""],[5,"rand","",""],[5,"srand","",""],[0,"string","libc::funcs::c95",""],[5,"strcpy","libc::funcs::c95::string",""],[5,"strncpy","",""],[5,"strcat","",""],[5,"strncat","",""],[5,"strcmp","",""],[5,"strncmp","",""],[5,"strcoll","",""],[5,"strchr","",""],[5,"strrchr","",""],[5,"strspn","",""],[5,"strcspn","",""],[5,"strpbrk","",""],[5,"strstr","",""],[5,"strlen","",""],[5,"strerror","",""],[5,"strtok","",""],[5,"strxfrm","",""],[5,"wcslen","",""],[5,"memcmp","",""],[5,"memchr","",""],[0,"posix88","libc::funcs",""],[0,"stat_","libc::funcs::posix88",""],[5,"chmod","libc::funcs::posix88::stat_",""],[5,"fchmod","",""],[5,"fstat","",""],[5,"mkdir","",""],[5,"mkfifo","",""],[5,"stat","",""],[0,"stdio","libc::funcs::posix88",""],[5,"popen","libc::funcs::posix88::stdio",""],[5,"pclose","",""],[5,"fdopen","",""],[5,"fileno","",""],[0,"fcntl","libc::funcs::posix88",""],[5,"open","libc::funcs::posix88::fcntl",""],[5,"creat","",""],[5,"fcntl","",""],[0,"dirent","libc::funcs::posix88",""],[5,"opendir","libc::funcs::posix88::dirent",""],[5,"readdir_r","",""],[5,"closedir","",""],[5,"rewinddir","",""],[5,"seekdir","",""],[5,"telldir","",""],[0,"unistd","libc::funcs::posix88",""],[5,"access","libc::funcs::posix88::unistd",""],[5,"alarm","",""],[5,"chdir","",""],[5,"chown","",""],[5,"close","",""],[5,"dup","",""],[5,"dup2","",""],[5,"execv","",""],[5,"execve","",""],[5,"execvp","",""],[5,"fork","",""],[5,"fpathconf","",""],[5,"getcwd","",""],[5,"getegid","",""],[5,"geteuid","",""],[5,"getgid","",""],[5,"getgroups","",""],[5,"getlogin","",""],[5,"getopt","",""],[5,"getpgrp","",""],[5,"getpid","",""],[5,"getppid","",""],[5,"getuid","",""],[5,"getsid","",""],[5,"isatty","",""],[5,"link","",""],[5,"lseek","",""],[5,"pathconf","",""],[5,"pause","",""],[5,"pipe","",""],[5,"read","",""],[5,"rmdir","",""],[5,"setgid","",""],[5,"setpgid","",""],[5,"setsid","",""],[5,"setuid","",""],[5,"sleep","",""],[5,"usleep","",""],[5,"nanosleep","",""],[5,"sysconf","",""],[5,"tcgetpgrp","",""],[5,"ttyname","",""],[5,"unlink","",""],[5,"write","",""],[5,"pread","",""],[5,"pwrite","",""],[5,"utime","",""],[17,"_PC_NAME_MAX","",""],[0,"signal","libc::funcs::posix88",""],[5,"kill","libc::funcs::posix88::signal",""],[0,"mman","libc::funcs::posix88",""],[5,"mlock","libc::funcs::posix88::mman",""],[5,"munlock","",""],[5,"mlockall","",""],[5,"munlockall","",""],[5,"mmap","",""],[5,"munmap","",""],[5,"mprotect","",""],[5,"msync","",""],[5,"shm_open","",""],[5,"shm_unlink","",""],[0,"net","libc::funcs::posix88",""],[5,"if_nametoindex","libc::funcs::posix88::net",""],[0,"posix01","libc::funcs",""],[0,"stat_","libc::funcs::posix01",""],[5,"lstat","libc::funcs::posix01::stat_",""],[0,"unistd","libc::funcs::posix01",""],[5,"readlink","libc::funcs::posix01::unistd",""],[5,"fsync","",""],[5,"fdatasync","",""],[5,"setenv","",""],[5,"unsetenv","",""],[5,"putenv","",""],[5,"symlink","",""],[5,"ftruncate","",""],[0,"signal","libc::funcs::posix01",""],[5,"signal","libc::funcs::posix01::signal",""],[0,"glob","libc::funcs::posix01",""],[5,"glob","libc::funcs::posix01::glob",""],[5,"globfree","",""],[0,"mman","libc::funcs::posix01",""],[5,"posix_madvise","libc::funcs::posix01::mman",""],[0,"bsd43","libc::funcs",""],[5,"socket","libc::funcs::bsd43",""],[5,"connect","",""],[5,"bind","",""],[5,"listen","",""],[5,"accept","",""],[5,"getpeername","",""],[5,"getsockname","",""],[5,"setsockopt","",""],[5,"recv","",""],[5,"send","",""],[5,"recvfrom","",""],[5,"sendto","",""],[5,"getifaddrs","",""],[5,"freeifaddrs","",""],[5,"shutdown","",""],[0,"bsd44","libc::funcs",""],[5,"getdtablesize","libc::funcs::bsd44",""],[5,"ioctl","",""],[5,"madvise","",""],[5,"mincore","",""]],"paths":[[4,"c_void"],[3,"glob_t"],[3,"timeval"],[3,"timespec"],[3,"sockaddr"],[3,"sockaddr_storage"],[3,"sockaddr_in"],[3,"in_addr"],[3,"sockaddr_in6"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ip6_mreq"],[3,"addrinfo"],[3,"sockaddr_un"],[3,"ifaddrs"],[3,"stat"],[3,"utimbuf"],[3,"pthread_attr_t"],[3,"sockaddr_ll"]]};

searchIndex['quack'] = {"items":[[0,"","quack","A library for setting current values for stack scope,\nsuch as application structure."],[8,"Get","","Automatically implemented through the `GetFrom` trait."],[10,"get","","Returns new value.",0],[8,"Set","","Automatically implemented through the `SetAt` trait."],[10,"set","","Set value.",1],[10,"set_mut","","Set value through mutable reference.",1],[8,"Action","","Automatically implemented through the `ActOn` trait."],[10,"action","","Does something.",2],[8,"SetAt","","Something that can be set at an object."],[10,"set_at","","Modify `F` with self.",3],[8,"GetFrom","","Something that can be retrieved from another object."],[10,"get_from","","Gets value from object.",4],[8,"ActOn","","Does something to an object."],[10,"act_on","","Does something to an object.",5],[8,"Pair","","Used to reduce the need for associated types."],[16,"Data","quack::Pair",""],[16,"Object","",""],[6,"Data","quack",""],[6,"Object","",""],[14,"quack_macro_items!","","Used to work around limits in macro syntax."],[14,"quack_get!","",""],[14,"quack_set!","",""],[14,"quack_action!","",""],[14,"quack!","",""]],"paths":[[8,"Get"],[8,"Set"],[8,"Action"],[8,"SetAt"],[8,"GetFrom"],[8,"ActOn"]]};

searchIndex['shader_version'] = {"items":[[0,"","shader_version","A helper library for detecting and picking compatible shaders."],[0,"opengl","","Models versions of OpenGL"],[4,"OpenGL","shader_version::opengl",""],[13,"_2_0","","",0],[13,"_2_1","","",0],[13,"_3_0","","",0],[13,"_3_1","","",0],[13,"_3_2","","",0],[13,"_3_3","","",0],[13,"_4_0","","",0],[13,"_4_1","","",0],[13,"_4_2","","",0],[13,"_4_3","","",0],[13,"_4_4","","",0],[13,"_4_5","","",0],[11,"partial_cmp","","",0],[11,"lt","","",0],[11,"le","","",0],[11,"gt","","",0],[11,"ge","","",0],[11,"eq","","",0],[11,"ne","","",0],[11,"get_major_minor","","Gets the minor version of OpenGL.",0],[11,"to_GLSL","","Gets GLSL version associated with OpenGL.",0],[0,"glsl","shader_version","Models versions of OpenGL Shader Language (GLSL)"],[4,"GLSL","shader_version::glsl","For OpenGL version 3.3 and above,\nthe GLSL version is the same as the OpenGL version."],[13,"_1_10","","",1],[13,"_1_20","","",1],[13,"_1_30","","",1],[13,"_1_40","","",1],[13,"_1_50","","",1],[13,"_3_30","","",1],[13,"_4_00","","",1],[13,"_4_10","","",1],[13,"_4_20","","",1],[13,"_4_30","","",1],[13,"_4_40","","",1],[13,"_4_50","","",1],[11,"to_OpenGL","","Gets OpenGL version associated with GLSL.",1]],"paths":[[4,"OpenGL"],[4,"GLSL"]]};

searchIndex['khronos_api'] = {"items":[[0,"","khronos_api","This crates contains the sources of the official OpenGL repository."],[7,"GL_XML","","Content of the official `gl.xml` file."],[7,"EGL_XML","","Content of the official `egl.xml` file."],[7,"WGL_XML","","Content of the official `wgl.xml` file."],[7,"GLX_XML","","Content of the official `glx.xml` file."]],"paths":[]};

searchIndex['read_color'] = {"items":[[0,"","read_color","A simple library for reading hex colors."],[5,"char_to_hex","","Converts a character into a u8 value."],[5,"hex","","Reads a hex value from an iterator of characters."],[5,"hex_pair","","Reads a pair of hex values, joining them in value range 0-255."],[5,"rgb","","Reads RGB colors from iterator of characters."],[5,"rgba","","Reads RGBA colors from iterator of characters."],[5,"rgb_maybe_a","","Reads RGB with optional alpha from iterator of characters."]],"paths":[]};

searchIndex['bitflags'] = {"items":[[0,"","bitflags","A typesafe bitmask flag generator."],[14,"bitflags!","","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs."]],"paths":[]};

searchIndex['clock_ticks'] = {"items":[[0,"","clock_ticks",""],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter\nin nanoseconds since an unspecified epoch."],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter\nin seconds since an unspecified epoch."]],"paths":[]};

searchIndex['texture'] = {"items":[[0,"","texture","A library for texture conventions."],[8,"ImageSize","","Implemented by all images to be used with generic algorithms."],[10,"get_size","","Get the image size.",0],[11,"get_width","","Gets the image width.",0],[11,"get_height","","Gets the image height.",0]],"paths":[[8,"ImageSize"]]};

initSearch(searchIndex);
